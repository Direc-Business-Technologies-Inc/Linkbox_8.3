@model DomainLayer.ViewModels.EmailCreateViewModel.Email
@*@{
        ViewBag.Title = "createUser";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section class="content ">
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">New Email</h3>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        @*<form action="../../Email" method="post">*@
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>*Email Code</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-copyright-mark"></i></span>
                                    @Html.EditorFor(model => model.EmailCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Code", @required = "required" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailCode, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>*Email Name</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-copyright-mark"></i></span>
                                    @Html.EditorFor(model => model.EmailName, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Name", @required = "required" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>*Email From</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                                    @Html.EditorFor(model => model.EmailFrom, new { htmlAttributes = new { @class = "form-control", placeholder = "Email From" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailFrom, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>*Password</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                    @Html.EditorFor(model => model.EmailPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailPassword, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>Email Subject</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-header"></i></span>
                                    @Html.EditorFor(model => model.EmailSubject, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Subject" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailSubject, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>*Email Host</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-option-horizontal"></i></span>
                                    @Html.EditorFor(model => model.EmailHost, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Host" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailHost, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>*Email Port</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-cog"></i></span>
                                    @Html.EditorFor(model => model.EmailPort, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Port" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailPort, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>*Email Ssl</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-adjust"></i></span>
                                    @Html.DropDownListFor(model => model.EmailSsl, new List<SelectListItem>
                                                         {
                                                            new SelectListItem{ Text="Enable", Value = "Enable" },
                                                            new SelectListItem{ Text="Disable", Value = "Disable" }
                                                         }, "", new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailSsl, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>*Email To</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                                    @Html.EditorFor(model => model.EmailTo, new { htmlAttributes = new { @class = "form-control", placeholder = "Email To" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailTo, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>Cc</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                    <select class="form-control select2 token" style="width: 100%;" multiple id="email-cc" name="Cc">
                                    </select>
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailCc, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>*Email Log</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                                    @Html.EditorFor(model => model.EmailLog, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Log" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailLog, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>*Addon Code</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-tasks"></i></span>
                                    <select class="form-control select2" style="width: 100%;" id="AddonCode" name="AddonCode" required>
                                       @foreach (var Code in ViewBag.AddonCode)
                                       {
                                        <option>@Code.AddonCode</option>
                                       }
                                    </select>
                                </div>
                                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <input type="submit" id="btn-submit" value="Create" class="btn btn-primary btn-custom2 pull-right" />
                                <a href='@Url.Action("Email", "Features")' class="btn btn-default btn-custom2 pull-right" style="margin-right:10px">Cancel</a>
                            </div>
                        </div>
                      


                        @*</form>*@
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
        </div>

    </section>
}



@section Scripts {
    <script>
        $(document).ready(function () {
            if ("@ViewBag.WarningMessage" == "Email Code is already Taken") {

                swal("@ViewBag.WarningMessage", "", "warning");
            }
            else if ("@ViewBag.WarningMessage" == "Successfully Created") {
                swal({
                    title: "@ViewBag.WarningMessage",
                    text: "",
                    type: "success",
                    showConfirmButton: false,
                    timer: 1500,
                    onClose: () => {
                        window.location.href = "";
                    }
                });
                
            }

            $('#btn-submit').on('click', function (e) {
                e.preventDefault();
                // stop the default behavior(navigation)
                var _form = $(this).closest("form");
                //get a reference to the container form
                swal({
                    title: 'Are you sure you want to create new email setup?',
                    text: "",
                    type: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes'
                }).then((result) => {
                    if (result.value) {
                        _form.submit();
                    }
                })

            });
        });
        $('.select2').select2();
        $(".token").select2({
            tags: true,
            tokenSeparators: ['/', ',', ';', " "]
        });
    </script>
}
