@model DomainLayer.ViewModels.Authorizations
<section class="content">
    <div class="row">
        <div class="col-md-6">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Authorization List</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <table id="Authorizations" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th class="hide1">Edit</th>
                                <th>Authorization Description</th>
                                <th></th>
                                <th>Accessibility</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var aut in Model.AuthorizationsList)
                            {
                                <tr>
                                    <td width="5%" class="hide1"><button type="button" data-auth-cid="@aut.AuthId" class="btn-info fa fa-edit" data-toggle="modal" data-target="#edit-authorization-modal" id="btnEditAuth"></button></td>
                                    <td>@aut.Description</td>
                                    @if (aut.IsActive == true)
                                    {
                                        <td><span class="label label-success">Active</span></td>
                                    }
                                    else
                                    {
                                        <td><span class="label label-danger">Inactive</span></td>
                                    }
                                    <td width="5%"><button type="button" data-authmod-cid="@aut.AuthId" id="showModule" class="btn-info btn-flat fa fa-hand-o-right" data-toggle="" data-target="#modules"></button></td>
                                </tr>
                            }

                        </tbody>
                    </table>
                    <button type="button" class="btn btn-primary btn-custom hide1 hvr-buzz" style="float: right;" data-toggle="modal" data-target="#create-authorization-modal" id="btnCreateAuth">New</button>
                </div>

                <!-- /.box-body -->
            </div>
        </div>

        <div class="col-md-6" id="modules" style="display:none;">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Modules</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <table id="AuthModules" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th><input type="checkbox" id="selectAll" value="unchecked"></th>
                                <th>Module Name</th>
                                <th>Type</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var mod in Model.ModulesList)
                            {
                                <tr>
                                    <td width="5%"><input type="checkbox" id="@mod.ModId" value="unchecked" name="select" class="edit"></td>
                                    <td><label for="@mod.ModId">@mod.ModCode</label></td>
                                    <td><label for="@mod.ModId">@mod.ModName</label></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <button type="button" id="btnAuthModuleSave" class="btn btn-primary btn-custom hide1 hvr-buzz" style="float: right;" data-toggle="modal" data-target="#create-modal">Save</button>

                </div>

                <!-- /.box-body -->
            </div>
        </div>
    </div>
</section>



<div class="modal fade" id="create-authorization-modal">
    <form id="createAuth">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">New Authorization Setup</h4>
                </div>
                <div class="modal-body">
                    <div class="register-box-body">

                        <div class="form-group" id="createAuthFormGroup">
                            <label>*Authorization Description:</label>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-list-alt"></i></span>
                                <input type="text" id="createAutDesc" class="form-control" placeholder="Authorization Description" required>
                            </div>
                        </div>

                        <div class="row">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-custom" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnCreateAutSave" class="btn btn-primary btn-custom">Save</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </form>
</div>

<div class="modal fade" id="edit-authorization-modal">
    <form id="editAuth">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Authorization Setup</h4>
                </div>
                <div class="modal-body">
                    <div class="register-box-body">


                        <div class="form-group" id="editAuthFormGroup">
                            <label>*Authorization Description:</label>
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-list-alt"></i></span>
                                <input type="text" id="editAuthDesc" class="form-control" placeholder="Authorization Description" required>
                            </div>
                        </div>

                        <div>
                            <input type="checkbox" id="authIsActive" class=""> <label for="authIsActive">IsActive?</label>
                        </div>

                        <div class="row">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" id="btnEditAutSave">Save changes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </form>
</div>


@section Scripts {

    <script>
        var text = $('label[for="authIsActive"]').text();
        $('input:checkbox[id = selectAll]').on('ifChecked', function (event) {
            $('input:checkbox[name = select]').iCheck('check');
        });

        $('input:checkbox[id = selectAll]').on('ifUnchecked', function (event) {
            $('input:checkbox[name = select]').iCheck('uncheck');
        });

        $('.modal').on('hidden.bs.modal', function (e) {
            //addon-submit
            $("#createAuth").trigger('reset');
        });

        $("#createAutDesc").on("invalid", function (e) {
            e.preventDefault();
            if (!($('#createAuthFormGroup').hasClass('error'))) {
                $('#createAuthFormGroup').append('<span class="help-block text-red">Authorization Description is Required</span>');
            }
            $('#createAuthFormGroup').addClass('error');
        });

        $("#editAuthDesc").on("invalid", function (e) {
            e.preventDefault();
            if (!($('#editAuthFormGroup').hasClass('error'))) {
                $('#editAuthFormGroup').append('<span class="help-block text-red">Authorization Description is Required</span>');
            }
            $('#editAuthFormGroup').addClass('error');
        });


        $('.modal').on('hidden.bs.modal', function (e) {
                $('#createAuthFormGroup').removeClass('has-error');
                $('.help-block').remove();
                $('#editAuthFormGroup').removeClass('has-error');
        });
    </script>
<script>
        $(document).ready(function () {
            var id = @Session["Id"];
            console.log(id);
            if (id != 1) {
                $(".edit").prop("disabled", true);
                $(".hide1").hide();
            }
            else if(id == 1) {
                $(".edit").prop("disabled", false);
                $(".hide1").show();
            }
        });
</script>


    <script>
        var moduleId, test,authId;
        var AMId = new Array();
        $(document)
            //.on('click submit', '#btnCreateAuth', function () {
            //    $('#createAuthFormGroup').removeClass('has-error');
            //    $('.help-block').remove();
            //})
            //.on('click', '#btnEditAuth', function () {
            //    $('#editAuthFormGroup').removeClass('has-error');
            //    $('.help-block').remove();
            //})
            //create auth
            .on('submit', '#createAuth', function (e) {
                e.preventDefault();
                var autDesc = $("#createAutDesc").val();
                //var valid = true;
                //$('#createAuthFormGroup').removeClass('has-error');


                //if ($.trim($('#createAutDesc').val()) == '') {
                //    $('#createAuthFormGroup').addClass('has-error');
                //    $('#createAuthFormGroup').append('<span class="help-block">Authorization Description is Required</span>');
                //    valid = false;
                //}

                //if (valid) {
                    swal({
                        title: 'Are you sure you want to save new Authorization?',
                        text: "You want to save this data?",
                        type: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes'
                    }).then((result) => {
                        if (result.value) {
                            $.post('CreateAuthorization', {
                                Description: autDesc
                            }).done(function (data) {
                                if (data) {
                                    swal('Success!', '', 'success')
                                    $('.modal').modal('hide');

                                    setTimeout(function () { window.location.href = ""; }, 1500);
                                }
                                else {
                                    swal('Authorization already exist' , '', 'warning')
                                }
                            }).fail(function () {
                                swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                            });
                        }
                    })
                //}


            })

            // find authorization
            .on('click', 'button[data-auth-cid]', function () {
                var id = $(this).data('auth-cid');
                authId = id;
                $.post('FindAuth', { Id: id }).done(result => {
                    for (var x in result.AuthorizationsList) {
                        $('#editAuthDesc').val(result.AuthorizationsList[x].Description);
                        //$('#authIsActive').val(result.Auth[x].IsActive);

                        if (result.AuthorizationsList[x].IsActive == true) {
                            $('input:checkbox[id = authIsActive]').iCheck('check');
                            $('input:checkbox[id = authIsActive]').val('checked');
                        }

                        else {
                            $('input:checkbox[id = authIsActive]').iCheck('uncheck');
                            $('input:checkbox[id = authIsActive]').val('unchecked');
                        }

                        $('input:checkbox[id = authIsActive]').on('ifChecked', function (event) {
                            $('input:checkbox[id = authIsActive]').val('checked');
                        });

                        $('input:checkbox[id = authIsActive]').on('ifUnchecked', function (event) {
                            $('input:checkbox[id = authIsActive]').val('unchecked');
                        });
                    }
                })
            })

            //update authorization
            .on('submit', '#editAuth', function (e) {
                e.preventDefault();
                var Authid = authId;
                var Description = $('#editAuthDesc').val();
                var AuthChkboxVal = $('input:checkbox[id = authIsActive]').val();
                var valid = true;
                //set isactive value
                if (AuthChkboxVal == 'unchecked') {
                    IsActive = false;
                }
                else if (AuthChkboxVal == 'checked') {
                    IsActive = true;
                }

                //$('#editAuthFormGroup').removeClass('has-error');


                //if ($.trim($('#editAuthDesc').val()) == '') {
                //    $('#editAuthFormGroup').addClass('has-error');
                //    $('#editAuthFormGroup').append('<span class="help-block">Authorization Description is Required</span>');
                //    valid = false;
                //}

                //if (valid) {
                    swal({
                        title: 'Are you sure you want to update Authorization?',
                        text: "You want to update the following data?",
                        type: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes'
                    }).then((result) => {
                        if (result.value) {
                            $.post('UpdateAuthorization', {
                                AuthId: Authid,
                                Description: Description,
                                IsActive: IsActive
                            }).done(function (data) {
                                console.log(data)
                                if (data) {
                                    swal('Success!', '', 'success')
                                    $('.modal').modal('hide');

                                    setTimeout(function () { window.location.href = ""; }, 1500);
                                }
                                else {
                                    swal('Authorization already exist', '', 'warning')
                                }
                            }).fail(function () {
                                swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                            });
                        }
                    })
               // }

            })


            //find authmod
            .on('click', 'button[data-authmod-cid]', function () {
                var id = $(this).data('authmod-cid');
                $('#btnAuthModuleSave').removeData('code');
                $('#btnAuthModuleSave').attr('data-authmod-id', id);
                moduleId = [];
                $.post('FindAuthModule', { Id: id }).done(result => {
                    for (var z in result.ModulesList) {
                        $('input:checkbox[id = ' + result.ModulesList[z].ModId + ']').iCheck('uncheck');
                    }

                    for (var y in result.AuthorizationModulesList) {
                        if (result.AuthorizationModulesList[y].IsActive == true) {
                            $('input:checkbox[id = ' + result.AuthorizationModulesList[y].ModId + ']').iCheck('check');
                        }
                    }

                    test = result;
                });
            })


            //update user module
            .on('click', 'button[data-authmod-id]', function () {
                var id = $(this).data('authmod-id');
                var activeMods = new Array();
                var inactiveMods = new Array();

                for (var x in test.ModulesList) {

                    if ($('input:checkbox[id = ' + test.ModulesList[x].ModId + ']').iCheck('update')[0].checked) {
                        activeMods.push(test.ModulesList[x].ModId);
                    }

                    else if (!($('input:checkbox[id = ' + test.ModulesList[x].ModId + ']').iCheck('update')[0].checked)) {
                        inactiveMods.push(test.ModulesList[x].ModId);
                    }
                }


                for (var x in test.AuthorizationModulesList) {
                    AMId.push(test.AuthorizationModulesList[x].AMId);
                }

                swal({
                    title: 'Are you sure?',
                    text: "You want to save the changes of the following data?",
                    type: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes'
                }).then((result) => {
                    if (result.value) {
                        $.post('UpdateAuthModule', {
                            Id: id,
                            activeMods: activeMods,
                            inactiveMods: inactiveMods,
                            AMId: AMId
                        }).done(function (data) {
                            if (data) {
                                swal('Success!', '', 'success')
                                $('.modal').modal('hide');

                                setTimeout(function () { window.location.href = ""; }, 1500);
                            }
                        }).fail(function () {
                            swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                        });
                    }
                })
            })
    </script>
    <script>
        $(document).ready(function () {
            $("button#showModule").click(function () {
                document.getElementById("modules").style.display = "none";
                $("#modules").fadeIn();
            });

            $(function () {
                $('#AuthModules').DataTable({
                    'paging': true,
                    'lengthChange': true,
                    'searching': true,
                    'ordering': true,
                    'info': true,
                    'autoWidth': false
                })
            })

            $(function () {
                $('#Authorizations').DataTable({
                    'paging': true,
                    'lengthChange': true,
                    'searching': true,
                    'ordering': true,
                    'info': true,
                    'autoWidth': false
                })
            })

            $(function () {
                $('input').iCheck({
                    checkboxClass: 'icheckbox_square-blue',
                    radioClass: 'iradio_square-blue',
                    increaseArea: '20%' /* optional */
                });
            });
        });

    </script>
}