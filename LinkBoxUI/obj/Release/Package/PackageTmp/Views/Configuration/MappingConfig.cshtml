@model DomainLayer.ViewModels.MapCreateViewModel

<section class="content-header">
    <h1>
        Field Mapping Configuration
    </h1>
    <div class="row" id="map-selection">
        <div class="register-box">
            <div class="box">
                <div class="register-box">
                    <div class="modal-header">
                        <h4 class="modal-title">Field Mapping Option</h4>
                    </div>
                    <div class="register-box-body">
                        <div class="social-auth-links text-center">
                            <p>What data do you want to MAP?</p>
                            @*<p>What data do you want to MAP?</p>*@
                        </div>
                        @*<div class="box-body">
                                <a class="btn btn-block btn-success" id="mdal-btn-map-file">Using Data File to SAP</a>
                                <a class="btn btn-block btn-primary" id="mdal-btn-map-api">Using API to SAP</a>
                                <a class="btn btn-block btn-info" id="mdal-btn-map-data">Using Data File to API</a>
                            </div>*@
                        <select class="form-control" id="mdal-map-option" style="width: 100%;" required>
                            <option value="one-map-submit" class="">Using Data File to SAP [One Per Sheet]</option>
                            <option value="map-submit" class="">Using Data File to SAP [Group sheet]</option>
                            <option value="sapi-sapi-map-submit" hidden>Using SAP API to SAP API</option>
                            <option value="db-db-map-submit" hidden>Using DB to SAP</option>
                            <option value="file-map-submit" class="" hidden>Using Data File to API</option>
                            <option value="api-map-submit" class="" hidden>Using API to SAP</option>
                            @*<option value="sap-api-map-submit">Using SAP to API</option>*@
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary" id="mdal-btn-map-next">NEXT</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" id="back-selection" hidden>
        <div class="col-md-12">
            <div class="box">
                <div class="btn-group">
                    <button class="btn btn-primary pull-left " id="btn-back-select">Back</button>
                </div>
            </div>
        </div>
    </div>
</section>

<form id="map-submit" hidden>
    <section class="content">

        <div class="row">

            <div class="col-md-12">
                <div class="box box-solid">

                    <div class="box-body">
                        <div class="col-md-6">
                            <div class="form-group" id="field-code-formgroup">
                                <label>Group sheet </label>
                                <label>Field Mapping Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-code"></i>
                                    </div>
                                    <input type="text" class="form-control mapcode" placeholder="Code" id="field-code" required>
                                    <div class="input-group-addon" id="open">
                                        <button type="button" class="btn-info fa fa-search" style="float: right;" data-toggle="modal" data-target="#modal-field"></button>

                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="field-name-formgroup">
                                <label>Field Mapping Name:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-pencil-square-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Name" id="field-name" required>
                                </div>
                            </div>

                            @*<div class="form-group" id="field-addon-formgroup">
                                    <label>Addon Code:</label>
                                    <div class="input-group">
                                        <div class="input-group-addon">
                                            <i class="fa fa-database"></i>
                                        </div>
                                        <input type="text" class="form-control" placeholder="Addon Code" id="field-addon" required>
                                        <div class="input-group-addon" id="open">
                                            <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#modal-addon"></button>

                                        </div>
                                    </div>
                                </div>*@
                            <div class="form-group" id="field-sap-formgroup">
                                <label>SAP Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-server"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="SAP Code" id="field-sap" required readonly>
                                    <div class="input-group-addon" id="open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#modal-sap"></button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Module:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-tasks"></i>
                                    </div>
                                    @*<input type="text" class="form-control" placeholder="Module" id="field-module">*@
                                    <select class="form-control select2" id="field-module" style="width: 100%;" required>
                                        @foreach (var modules in Model.ModuleSetups)
                                        {
                                            <option data-htable="@modules.ModuleCode" value="@modules.ModuleCode">@modules.ModuleName</option>
                                        }
                                        @*<option data-htable="OPDN" data-rtable="PDN1">Goods Receipt</option>
                                                <option data-htable="ORDR" data-rtable="RDR1">Sales Order</option>
                                            <option data-htable="OINV" data-rtable="INV1">AR Invoice</option>
                                            <option data-htable="ORCT" data-rtable="RCT1">Incoming Payment</option>
                                            <option>Purchase Order</option>
                                                <option>Purchase Request</option>*@
                                    </select>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-6">
                            <div class="form-group" id="field-path-formgroup">
                                <label>Path Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-folder-open"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Path Code" id="field-path" data-file-pathid="" required readonly>
                                    <div class="input-group-addon">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#modal-path"></button>
                                    </div>
                                </div>
                            </div>

                            @*<div class="form-group">
                                    <label>Header Worksheet:</label>
                                    <div class="input-group">
                                        <div class="input-group-addon">
                                            <i class="fa fa-file-text-o"></i>
                                        </div>
                                        <input type="text" class="form-control" placeholder="Header Worksheet" id="field-headerworksheet">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Row Worksheet:</label>
                                    <div class="input-group">
                                        <div class="input-group-addon">
                                            <i class="fa fa-file-text-o"></i>
                                        </div>
                                        <input type="text" class="form-control" placeholder="Row Worksheet" id="field-rowworksheet">
                                    </div>
                                </div>*@

                            <div class="form-group">
                                <label>File Name:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-file"></i>
                                    </div>
                                    <select class="form-control select2" id="field-filename" style="width: 100%;" required>
                                    </select>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>File Type:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-files-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="File Type" id="field-filetype" value=".xlsx | .xls | .csv" readonly>
                                    @*<select class="form-control select2" style="width: 100%;" multiple="multiple" data-placeholder="Select FileType" id="field-filetype">
                                            <option>.xlsx</option>
                                            <option>.xls</option>
                                            <option>.csv</option>
                                        </select>*@

                                </div>
                            </div>
                            <div class="form-group">
                                <div class="input-group">

                                </div>
                                @*<button type="submit" class="btn btn-primary btn-custom pull-right " id="field-save">Save</button>*@
                            </div>


                        </div>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
            <div class="col-xs-12">
                <div class="nav-tabs-custom">

                    <div style="margin-top:5px;margin-bottom:10px;padding-right:10px;padding-top:5px;">
                        <ul style="list-style-type:none;float:right;">
                            <li class="active"><button type="submit" class="btn btn-primary" id="field-save">Save</button></li>

                        </ul>
                    </div>


                    <ul class="nav nav-tabs" id="field-tabs">
                        <li class="active"><a href="#tab_1" data-toggle="tab">Header</a></li>
                        <li><a href="#tab_2" data-toggle="tab">Row</a></li>

                    </ul>



                    <div class="tab-content" id="field-tab-content">

                        <div class="tab-pane active" id="tab_1">
                            <div class="box">
                                <div class="box-header">
                                    <h3 class="box-title">
                                        <i class="fa fa-database"></i> Table Name :
                                    </h3>

                                    <input type="text" placeholder="Table Name" id="header-tablename">

                                </div>
                                <div class="box-body">
                                    <table id="header-table" class="table table-fields table-bordered table-striped">
                                        <thead>
                                            <tr>

                                                <th></th>
                                                <th>SAP Field</th>
                                                <th>Addon Field</th>
                                                <th>Data Type</th>
                                                @*<th>Length</th>
                                                    <th>Required</th>
                                                    <th>Query</th>*@
                                            </tr>
                                        </thead>
                                        <tbody id="header-tbody"></tbody>
                                    </table>
                                </div>
                                <div class="box-footer">

                                    <button type="button" class="btn margin btn-primary" style="float: right;" id="add-headerfield">New Field</button>
                                </div>
                            </div>
                        </div>
                        <!-- /.tab-pane -->
                        <div class="tab-pane" id="tab_2">
                            <div class="box">
                                <div class="box-header">
                                    <h3 class="box-title">
                                        <i class="fa fa-database"></i> Table Name :
                                    </h3>
                                    <input type="text" placeholder="Table Name" id="row-tablename">

                                </div>
                                <div class="box-body">
                                    <table id="row-table" class="table table-fields table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>SAP Field</th>
                                                <th>Addon Field</th>
                                                <th>Data Type</th>
                                                @*<th>Length</th>
                                                    <th>Required</th>*@
                                            </tr>
                                        </thead>
                                        <tbody id="row-tbody"></tbody>
                                    </table>
                                </div>
                                <div class="box-footer">
                                    <button type="button" class="btn margin btn-primary" style="float: right;" id="add-rowfield">New Field</button>
                                </div>
                            </div>
                        </div>
                        <!-- /.tab-pane -->
                    </div>
                    <!-- /.tab-content -->
                </div>

            </div>
        </div>
    </section>
</form>

<form id="one-map-submit" hidden>
    <section class="content">
        <div class="row">

            <div class="col-md-12">
                <div class="box box-solid">

                    <div class="box-body">
                        <div class="col-md-6">
                            <div class="form-group" id="field-code-formgroup">
                                <label>One per Sheet </label>
                                <label>Field Mapping Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-code"></i>
                                    </div>
                                    <input type="text" class="form-control mapcode" placeholder="Code" id="one-field-code" required>
                                    <div class="input-group-addon" id="open">
                                        <button type="button" class="btn-info fa fa-search" style="float: right;" data-toggle="modal" data-target="#one-modal-field"></button>

                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="field-name-formgroup">
                                <label>Field Mapping Name:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-pencil-square-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Name" id="one-field-name" required>
                                </div>
                            </div>


                            <div class="form-group" id="field-sap-formgroup">
                                <label>SAP Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-server"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="SAP Code" id="one-field-sap" required readonly>
                                    <div class="input-group-addon" id="open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#one-modal-sap"></button>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Module:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-tasks"></i>
                                    </div>
                                    @*<input type="text" class="form-control" placeholder="Module" id="field-module">*@
                                    <select class="form-control select2" id="one-field-module" style="width: 100%;" required>
                                        @foreach (var modules in Model.ModuleSetups)
                                        {
                                            <option data-htable="@modules.ModuleCode" value="@modules.ModuleCode">@modules.ModuleName</option>
                                        }

                                    </select>
                                </div>
                            </div>


                        </div>


                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
            <!--THIS IS THE START OF THE NEW ONE-->
            <div class="col-md-12">
                <div class="box box-solid">

                    <div class="box-body">

                        <div class="col-md-6">

                            <div class="form-group">
                                <label>SAP TABLE: * </label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-tasks"></i>
                                    </div>

                                    <select class="form-control select2" id="one-saptable" style="width: 100%;" required>
                                    </select>
                                </div>
                            </div>

                            <div class="form-group" id="field-name-formgroup">
                                <label>Column Name: *</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-code"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="A1" id="one-header-name" value=""  onchange="ValueChanged('headername','one-header-name')" required>
                                </div>
                            </div>

                            <div class="form-group" id="field-name-formgroup">
                                <label>Row Data: *</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-code"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="A2" id="one-row-name" value="" onchange="ValueChanged('rowname','one-row-name')" required>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-6">
                            <div class="form-group" id="field-path-formgroup">
                                <label>Path Code: *</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-folder-open"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Path Code" id="one-field-path" one-data-file-pathid="" required readonly>
                                    <div class="input-group-addon">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" id="pathcodearrow" data-target="#one-modal-path"></button>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>File Name: *</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-file"></i>
                                    </div>
                                    <select class="form-control select2" id="one-field-filename" onchange="ValueChanged('filename','one-field-filename')" style="width: 100%;" required>
                                    </select>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Sheeet Name:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-files-o"></i>
                                    </div>
                                    @*<input type="text" class="form-control" placeholder="File Type" id="one-field-filetype" value=".xlsx | .xls | .csv" readonly>*@
                                    <input type="text" class="form-control" placeholder="Excel Sheet Name" id="one-field-sheetname" value="" onchange="ValueChanged('sheetname','one-field-sheetname')" >

                                    @*<select class="form-control select2" style="width: 100%;" multiple="multiple" data-placeholder="Select FileType" id="field-filetype">
                                <option>.xlsx</option>
                                <option>.xls</option>
                                <option>.csv</option>
                            </select>*@

                                </div>
                            </div>


                            <div style="margin-top:5px;margin-bottom:10px;padding-top:5px;">


                                <button type="button" class="btn btn-primary" id="add-table" data-opsmapid="" style="float: right;">Add Table</button>
                                <button type="button" class="btn btn-primary" id="new-table" style="float: right; margin-right: 15px;display:none;">New Table</button> 
                            </div>


                        </div>


                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
            <!--THIS IS THE END OF THE NEW ONE-->


            <div class="col-xs-12">

                <div class="nav-tabs-custom">

                    <div style="margin-top:5px;margin-bottom:10px;padding-right:10px;padding-top:5px;">
                        <ul style="list-style-type:none;float:right;">
                            <li class="active"><button type="submit" class="btn btn-primary" id="field-save">Save</button></li>

                        </ul>
                    </div>

                    <ul class="nav nav-tabs" id="one-field-tabs">
                    </ul>

                    <div class="tab-content" id="one-field-tab-content">



                    </div>  <!-- /.tab-content -->

                </div><!---nav tabs custom-->

            </div>
        </div>
    </section>
</form>

<form id="api-map-submit" hidden>
    <section class="content">
        <div class="row">

            <div class="col-md-12">
                <div class="box box-solid">

                    <div class="box-body">
                        <div class="col-md-6">
                            <div class="form-group" id="api-field-code-formgroup">
                                <label>Field Mapping Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-code"></i>
                                    </div>
                                    <input type="text" class="form-control mapcode" placeholder="Code" id="api-field-code" data-mapid="" required readonly>
                                    <div class="input-group-addon" id="api-open">
                                        <button type="button" class="btn-info fa fa-search" style="float: right;" data-toggle="modal" data-target="#api-modal-field"></button>

                                    </div>
                                </div>
                            </div>


                            <div class="form-group" id="api-field-addon-formgroup">
                                <label>Addon Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-database"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Addon Code" id="api-field-addon" required>
                                    <div class="input-group-addon" id="api-open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#api-modal-addon"></button>

                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Module:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-tasks"></i>
                                    </div>
                                    <select class="form-control select2" id="api-field-module" style="width: 100%;" required>
                                        <!--MUST HAVE A TABLE MAINTENANCE FOR THIS-->
                                        <option data-htable="ORDR" data-rtable="RDR1">Sales Order</option>
                                        <option data-htable="OINV" data-rtable="INV1">AR Invoice</option>
                                        <option data-htable="ORCT" data-rtable="RCT1">Incoming Payment</option>
                                        <option data-htable="OUOM" data-rtable="OUOM">Unit Of Measurement</option>
                                        <option data-htable="OITM" data-rtable="ITM1">Item Master Data</option>
                                        <option data-htable="OITW" data-rtable="">Item Inventory</option>
                                        <option data-htable="OPLN" data-rtable="OPLN">Price List</option>
                                        <option data-htable="OITT" data-rtable="ITT1">Bill of Materials</option>
                                        <option data-htable="OCRD" data-rtable="">BP Master Data</option>
                                    </select>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-6">
                            <div class="form-group" id="api-field-name-formgroup">
                                <label>Field Mapping Name:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-pencil-square-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Name" id="api-field-name" required>
                                </div>
                            </div>
                            <div class="form-group" id="api-field-sap-formgroup">
                                <label>SAP Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-server"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="SAP Code" id="api-field-sap" required>
                                    <div class="input-group-addon" id="api-open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#api-modal-sap"></button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="api-field-apicode-formgroup" style="padding-bottom:0px; margin-bottom:0px;">
                                <label>API Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-server"></i>
                                    </div>
                                    <input type="text" class="form-control" maxlength="20" placeholder="API Code" id="api-field-apicode" required>
                                    <div class="input-group-addon" id="api-open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#api-modal-apicode"></button>
                                    </div>
                                </div>

                                <label class="" style="margin-bottom:0; margin-top:8px;">
                                    API Posting Parameter
                                </label>

                                <div class="box-body">
                                    <table id="api-param-table" class="table table-fields table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>Parameter Key</th>
                                                <th>Value</th>
                                            </tr>
                                        </thead>
                                        <tbody id="api-param-tbody"></tbody>
                                    </table>
                                    <div class="box-footer" style="padding-bottom:0px;">
                                        <button type="button" class="btn margin btn-primary" style="float: right;" id="api-add-parameter">New Parameter</button>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->

            <div class="col-xs-12">
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#api-tab_1" id="api-tab1" data-toggle="tab">Header</a></li>
                        <li><a href="#api-tab_2" id="api-tab2" data-toggle="tab">Row</a></li>
                        <li class="pull-right">

                        </li>
                    </ul>

                    <div class="tab-content">

                        <div class="tab-pane active" id="api-tab_1">
                            <div class="box">
                                <div class="box-header">
                                    <h3 class="box-title">
                                        <i class="fa fa-database"></i> Table Name :
                                    </h3>
                                    <input type="text" placeholder="Table Name" id="api-header-tablename">

                                </div>
                                <div class="box-body">
                                    <table id="api-header-table" class="table table-fields table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>SAP Field</th>
                                                <th>API Field</th>
                                                <th>Data Type</th>
                                                <th>Length</th>
                                                <th>Default Value</th>
                                                <th>Required</th>
                                            </tr>
                                        </thead>
                                        <tbody id="api-header-tbody"></tbody>
                                    </table>
                                </div>
                                <div class="box-footer">
                                    @*<button type="button" class="btn margin btn-primary" style="float: right;" id="api-generate-hfield">AutoMap Field</button>*@
                                    <button type="submit" class="btn margin btn-primary" style="float: right;" id="api-field-save">Save</button>
                                    <button type="button" class="btn margin btn-primary" style="float: right;" id="api-add-headerfield">New Field</button>
                                </div>
                            </div>
                        </div>
                        <!-- /.tab-pane -->
                        <div class="tab-pane" id="api-tab_2">
                            <div class="box">
                                <div class="box-header">
                                    <h3 class="box-title">
                                        <i class="fa fa-database"></i> Table Name :
                                    </h3>
                                    <input type="text" placeholder="Table Name" id="api-row-tablename">

                                </div>
                                <div class="box-body">
                                    <table id="api-row-table" class="table table-fields table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>SAP Field</th>
                                                <th>API Field</th>
                                                <th>Data Type</th>
                                                <th>Length</th>
                                                <th>Default Value</th>
                                                <th>Required</th>
                                            </tr>
                                        </thead>
                                        <tbody id="api-row-tbody"></tbody>
                                    </table>
                                </div>
                                <div class="box-footer">
                                    <button type="button" class="btn margin btn-primary" style="float: right;" id="api-add-rowfield">New Field</button>
                                </div>
                            </div>
                        </div>
                        <!-- /.tab-pane -->
                    </div>
                    <!-- /.tab-content -->
                </div>

            </div>

        </div>
    </section>
</form>

<!-- DATA TO API-->
<form id="file-map-submit" hidden>
    <section class="content">
        <div class="row">

            <div class="col-md-12">
                <div class="box box-solid">

                    <div class="box-body">
                        <div class="col-md-6">
                            <div class="form-group" id="file-api-field-codes-formgroup">
                                <label>Field Mapping Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-code"></i>
                                    </div>
                                    <input type="text" class="form-control mapcode" placeholder="Code" id="file-api-field-code" required>
                                    <div class="input-group-addon" id="file-api-open">
                                        <button type="button" class="btn-info fa fa-search" style="float: right;" data-toggle="modal" data-target="#file-api-modal-field"></button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="file-api-name-formgroup">
                                <label>Field Mapping Name:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-pencil-square-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Name" id="file-api-field-name" required>
                                </div>
                            </div>

                            <div class="form-group" id="file-api-addon-formgroup">
                                <label>Addon Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-database"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Addon Code" id="file-api-field-addon" required>
                                    <div class="input-group-addon" id="file-api-open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#modal-addon"></button>

                                    </div>
                                </div>
                            </div>


                        </div>
                        <div class="col-md-6">
                            <div class="form-group" id="file-api-path-formgroup">
                                <label>Path Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-folder-open"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Path Code" id="file-api-field-path" data-file-pathid="" required>
                                    <div class="input-group-addon">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#modal-path"></button>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group" hidden>
                                <label>Header Worksheet:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-file-text-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Header Worksheet" id="file-api-field-headerworksheet">
                                </div>
                            </div>

                            <div class="form-group" hidden>
                                <label>Row Worksheet:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-file-text-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Row Worksheet" id="file-api-field-rowworksheet">
                                </div>
                            </div>

                            <div class="form-group">
                                <label id="label-file-name" data-label-file-name="">Sample File:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-file"></i>
                                    </div>
                                    <input type="file" class="form-control" placeholder="File Name" id="file-api-field-filename">
                                </div>
                            </div>

                            <div class="form-group">
                                <label>File Type:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-files-o"></i>
                                    </div>
                                    @*<select class="form-control select2" style="width: 100%;" multiple="multiple" data-placeholder="Select FileType" id="file-api-field-filetype">
                                            <option>.xlsx</option>
                                            <option>.xls</option>
                                            <option>.csv</option>
                                        </select>*@
                                    <input type="file" class="form-control" placeholder="File Type " id="file-api-field-filename" value=".xlsx | .xls | .csv" readonly>
                                </div>
                            </div>
                            <div class="form-group" id="file-api-field-apicode-formgroup">
                                <label>API Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-server"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="API Code" id="file-api-field-apicode" required>
                                    <div class="input-group-addon" id="file-api-open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#file-modal-apicode"></button>
                                    </div>
                                </div>
                            </div>

                            @*<div class="form-group">

                                    <div class="input-group">

                                    </div>
                                    <button type="submit" class="btn btn-primary btn-custom pull-right " id="file-api-save">Save</button>
                                </div>*@
                        </div>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->

            <div class="col-xs-12">
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#file-api-tab_1" data-toggle="tab">Header</a></li>
                        <li><a href="#file-api-tab_2" data-toggle="tab">Row</a></li>
                        <li class="pull-right">

                        </li>
                    </ul>

                    <div class="tab-content">

                        <div class="tab-pane active" id="file-api-tab_1">
                            <div class="box">
                                <div class="box-header">
                                    <h3 class="box-title">
                                        <i class="fa fa-database"></i> Table Name :
                                    </h3>
                                    <input type="text" placeholder="Table Name" id="file-api-header-tablename">

                                </div>
                                <div class="box-body">
                                    <table id="file-api-header-table" class="table table-fields table-bordered table-striped">
                                        <thead>
                                            <tr>

                                                <th></th>
                                                <th>Column Field</th>
                                                <th>Zendesk API Field</th>
                                                <th>Data Type</th>
                                                <th>Length</th>
                                                <th>Required</th>
                                            </tr>
                                        </thead>
                                        <tbody id="file-api-header-tbody"></tbody>
                                    </table>
                                </div>
                                <div class="box-footer">
                                    <button type="submit" class="btn margin btn-primary" style="float: right;" id="file-api-save">Save</button>
                                    <button type="button" class="btn margin btn-primary" style="float: right;" id="file-api-add-headerfield">New Field</button>
                                </div>
                            </div>
                        </div>
                        <!-- /.tab-pane -->
                        <div class="tab-pane" id="file-api-tab_2">
                            <div class="box">
                                <div class="box-header">
                                    <h3 class="box-title">
                                        <i class="fa fa-database"></i> Table Name :
                                    </h3>
                                    <input type="text" placeholder="Table Name" id="file-api-row-tablename">


                                </div>
                                <div class="box-body">
                                    <table id="file-api-row-table" class="table table-fields table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>Column Field</th>
                                                <th>Api Field</th>
                                                <th>Data Type</th>
                                                <th>Length</th>
                                                <th>Required</th>
                                            </tr>
                                        </thead>
                                        <tbody id="file-api-row-tbody"></tbody>
                                    </table>
                                </div>
                                <div class="box-footer">
                                    <button type="button" class="btn btn-primary" style="float: right;" id="file-api-add-rowfield">New Field</button>
                                </div>
                            </div>
                        </div>
                        <!-- /.tab-pane -->
                    </div>
                    <!-- /.tab-content -->
                </div>

            </div>

        </div>
    </section>
</form>

<!-- DB to other DB-->
<form id="db-db-map-submit" hidden>
    <section class="content">
        <div class="row">

            <div class="col-md-12">
                <div class="box box-solid">

                    <div class="box-body">

                        <div class="col-md-6">

                            <div class="form-group" id="db-db-field-code-formgroup">
                                <label>Field Mapping Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-code"></i>
                                    </div>
                                    <input type="text" class="form-control mapcode" placeholder="Codez" id="db-db-field-code" required>
                                    <div class="input-group-addon" id="open">
                                        <button type="button" class="btn-info fa fa-search" style="float: right;" data-toggle="modal" data-target="#db-db-modal-field"></button>

                                    </div>
                                </div>
                            </div>

                            <div class="form-group" id="db-db-field-name-formgroup">
                                <label>Field Mapping Name:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-pencil-square-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Name" id="db-db-field-name" required>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-6">
                            <div class="form-group" id="db-db-field-addon-formgroup">
                                <label>Addon Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-database"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Addon Code" id="db-db-field-addon" required>
                                    <div class="input-group-addon" id="open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#db-db-modal-addon"></button>

                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="db-db-field-otheraddon-formgroup">
                                <label>SAPDB Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-database"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="SAPDB Code" id="db-db-field-otheraddon" required>
                                    <div class="input-group-addon" id="open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#db-db-modal-otheraddon"></button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Module:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-tasks"></i>
                                    </div>
                                    @*<input type="text" class="form-control" placeholder="Module" id="field-module">*@
                                    <select class="form-control select2" id="db-db-field-module" style="width: 100%;" required>
                                        @*<option data-htable="ORDR" value="ORDR">Sales Order</option> --
                                            <option data-htable="OINV" value="OINV" data-rtable="INV1">AR Invoice</option> --
                                            <option data-htable="ORIN" value="ORIN">AR Credit Memo</option> --
                                            <option data-htable="ORCT" value="ORCT" data-rtable="RCT1">Incoming Payment</option> --
                                            <option data-htable="OJDT" value="OJDT">Journal Entry</option> --
                                            <option data-htable="OCRD" value="OCRD">BP Master Data</option> --
                                            <option data-htable="OITM" value="OITM">Item Master Data</option> --
                                            <option data-htable="OITW" value="OITW">Inventory</option> --
                                            <option data-htable="OIGE" value="OIGE">Goods Issue</option> --
                                            <option data-htable="OIGN" value="OIGN">Goods Receipt</option> --
                                            <option data-htable="OPOR" value="OPOR">Purchase Order</option> --
                                            <option data-htable="OPDN" value="OPDN">Goods Receipt PO</option> --
                                            <option data-htable="OPCH" value="OPCH">AP Invoice</option> --
                                            <option data-htable="ORPC" value="ORPC">AP Credit Memo</option> --
                                            <option data-htable="OVPM" value="OVPM">Outgoing Payment</option> --
                                            <option data-htable="ODPS" value="ODPS">Deposit</option> --
                                            <option data-htable="OACT" value="OACT">Chart of Accounts</option> --
                                            <option data-htable="OWTQ" value="OWTQ">Inventory Transfer Request</option> --
                                            <option data-htable="OWTR" value="OWTR">Inventory Transfer</option> --*@
                                        @foreach (var modules in Model.ModuleSetups)
                                        {
                                            <option data-htable="@modules.ModuleCode" value="@modules.ModuleCode">@modules.ModuleName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <!--<div class="col-md-6">
                            <div class="form-group" id="field-path-formgroup">
                                <label>Path Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-folder-open"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Path Code" id="field-path" required>
                                    <div class="input-group-addon">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#modal-path"></button>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Header Worksheet:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-file-text-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Header Worksheet" id="field-headerworksheet">
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Row Worksheet:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-file-text-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Row Worksheet" id="field-rowworksheet">
                                </div>
                            </div>

                            <div class="form-group">
                                <label>File Name:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-file"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="File Name" id="field-filename">
                                </div>
                            </div>

                            <div class="form-group">
                                <label>File Type:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-files-o"></i>
                                    </div>-->
                        @*<input type="text" class="form-control" placeholder="File Type" id="field-filetype">*@
                        <!--<select class="form-control select2" style="width: 100%;" multiple="multiple" data-placeholder="Select FileType" id="field-filetype">
                                    <option>.xlsx</option>
                                    <option>.xls</option>
                                    <option>.csv</option>
                                </select>
                            </div>
                        </div>-->
                        @*<div class="form-group">

                                <div class="input-group">

                                </div>
                                <button type="submit" class="btn btn-primary btn-custom pull-right " id="field-save">Save</button>
                            </div>*@
                        <!--</div>-->
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->

            <div class="col-xs-12">
                <div class="nav-tabs-custom" id="navbartabs">
                    <ul class="nav nav-tabs" id="tabletabs">
                        <li class="active"><a href="#db-tab_1" id="tableheader" data-toggle="tab">Header</a></li>
                        @*<li class="active"><a href="#tab_1" data-toggle="tab">Header</a></li>*@
                        @*<li><a href="#tab_2" data-toggle="tab">Row</a></li>*@
                        @*<li class="pull-right">

                            </li>*@
                    </ul>

                    <div class="tab-content" id="tabletabcontent">

                        <div class="tab-pane active" id="db-tab_1">
                            <div class="box">
                                <div class="box-header hidden">
                                    <h3 class="box-title">
                                        <i class="fa fa-database"></i> Table Name :
                                    </h3>
                                    <input type="text" placeholder="Table Name" id="db-db-header-tablename">

                                </div>
                                <div class="box-body">
                                    <table id="db-db-header-table" class="table table-fields table-bordered table-striped">
                                        <thead>
                                            <tr>

                                                <th></th>
                                                <th>Table Name</th>
                                                @*<th>Addon Field</th>*@
                                                <th>Data Type</th>
                                                <th>Length</th>
                                                @*<th>Required</th>*@
                                            </tr>
                                        </thead>
                                        <tbody id="db-db-header-tbody"></tbody>
                                    </table>
                                </div>
                                <div class="box-footer">
                                    <button type="submit" class="btn margin btn-primary" style="float: right;" id="db-db-field-save">Save</button>
                                    @*<button type="button" class="btn margin btn-primary" style="float: right;" id="db-db-add-headerfield">New Field</button>*@
                                </div>
                            </div>
                        </div>
                        <!-- /.tab-pane -->
                        <!--<div class="tab-pane" id="tab_2">
                        <div class="box">
                            <div class="box-header">
                                <h3 class="box-title">
                                    <i class="fa fa-database"></i> Table Name :
                                </h3>
                                <input type="text" placeholder="Table Name" id="db-db-row-tablename">

                            </div>
                            <div class="box-body">
                                <table id="db-db-row-table" class="table table-fields table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th></th>-->
                        @*<th>Other Addon Field</th>*@
                        <!--<th>Table Name</th>
                        <th>Data Type</th>
                        <th>Length</th>-->
                        @*<th>Required</th>*@
                        <!--</tr>
                                        </thead>
                                        <tbody id="row-tbody"></tbody>
                                    </table>
                                </div>
                                <div class="box-footer">
                                    <button type="button" class="btn margin btn-primary" style="float: right;" id="db-db-add-rowfield">New Field</button>
                                </div>
                            </div>
                        </div>-->
                        <!-- /.tab-pane -->
                    </div>
                    <!-- /.tab-content -->
                </div>

            </div>
        </div>
    </section>
</form>

<!-- SAP API TO SAP API-->
<form id="sapi-sapi-map-submit" hidden>
    <section class="content">
        <div class="row">
            <!--FOR MAPPING SETUP NEEDED-->
            <div class="col-md-12">
                <div class="box box-solid">
                    <div class="box-body">

                        <div class="col-md-6">
                            <div class="form-group" id="sapi-sapi-field-code-formgroup">
                                <label>Field Mapping Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-code"></i>
                                    </div>
                                    <input type="text" class="form-control mapcode" placeholder="Code" id="sapi-sapi-field-code" data-id="" required>
                                    <div class="input-group-addon" id="open">
                                        <button type="button" class="btn-info fa fa-search" style="float: right;" data-toggle="modal" data-target="#sapi-sapi-modal-field"></button>

                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="sapi-sapi-source-apicode-formgroup">
                                <label>Source SAP Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-server"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="API Code" id="sapi-sapi-source-apicode" required>
                                    <div class="input-group-addon" id="sapi-sapi-open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#sapi-modal-source-apicode"></button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="sapi-sapi-destination-apicode-formgroup">
                                <label>Destination SAP Code:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-server"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="API Code" id="sapi-sapi-destination-apicode" required>
                                    <div class="input-group-addon" id="sapi-sapi-open">
                                        <button type="button" class="btn-info fa fa-hand-o-right" style="float: right;" data-toggle="modal" data-target="#sapi-modal-destination-apicode"></button>
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-6">
                            <div class="form-group" id="db-db-field-name-formgroup">
                                <label>Field Mapping Name:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-pencil-square-o"></i>
                                    </div>
                                    <input type="text" class="form-control" placeholder="Name" id="sapi-sapi-field-name" required>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Source Module:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-tasks"></i>
                                    </div>
                                    <select class="form-control select2" id="sapi-sapi-field-module" style="width: 100%;" required>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Destination Module:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-tasks"></i>
                                    </div>
                                    <select class="form-control select2" id="sapi-sapi-field-destmod" style="width: 100%;" required>
                                        @foreach (var modules in Model.ModuleSetups)
                                        {
                                            <option data-htable="@modules.ModuleCode" value="@modules.ModuleCode">@modules.ModuleName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">

                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <button type="submit" class="btn margin btn-primary" style="float: right;" id="sapi-sapi-save">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--FOR TABLES FIELDS-->
            <div class="col-xs-12">
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs" id="sapi-tabs">
                        <li class="active"><a href="#sap-sapi-tab_1" data-toggle="tab">Header</a></li>
                        @*<li><a href="#sapi-sapi-tab_2" data-toggle="tab">Row</a></li>*@
                        @*<li class="pull-right">

                            </li>*@
                    </ul>

                    <div class="tab-content" id="sapi-tab-content">

                        <div class="tab-pane active" id="sap-sapi-tab_1">
                            <div class="box">
                                <div class="box-header">
                                    <h3 class="box-title">
                                        <i class="fa fa-database"></i> Table Name :
                                    </h3>
                                    <input type="text" placeholder="Table Name" id="sapi-sapi-header-tblname" disabled>

                                </div>
                                <div class="box-body">
                                    <table id="sapi-sapi-header-table" class="table table-fields table-bordered table-striped">
                                        <thead>
                                            <tr>

                                                <th></th>
                                                <th>Source SAP Field</th>
                                                <th>Destination SAP Field</th>
                                                <th>Data Type</th>
                                                <th>Length</th>
                                                <th>Unique Id</th>
                                            </tr>
                                        </thead>
                                        <tbody id="sapi-sapi-header-tbody"></tbody>
                                    </table>
                                </div>
                                <div class="box-footer">
                                    <button type="button" class="btn margin btn-primary" style="float: right;" id="sapi-sapi-add-headerfield">New Field</button>
                                </div>
                            </div>
                        </div>
                        <!-- /.tab-pane -->
                        @*<div class="tab-pane" id="sapi-sapi-tab_2">
                                <div class="box">
                                    <div class="box-header">
                                        <h3 class="box-title">
                                            <i class="fa fa-database"></i> Table Name :
                                        </h3>
                                        <input type="text" placeholder="Table Name" id="sapi-sapi-row-tablename">


                                    </div>
                                    <div class="box-body">
                                        <table id="sapi-sapi-row-table" class="table table-fields table-bordered table-striped">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th>Source SAP Field</th>
                                                    <th>Destination SAP Field</th>
                                                    <th>Data Type</th>
                                                    <th>Length</th>
                                                    <th>Unique Id</th>
                                                </tr>
                                            </thead>
                                            <tbody id="sapi-sapi-row-tbody"></tbody>
                                        </table>
                                    </div>
                                    <div class="box-footer">
                                        <button type="button" class="btn btn-primary" style="float: right;" id="sapi-sapi-add-rowfield">New Field</button>
                                    </div>
                                </div>
                            </div>*@
                        <!-- /.tab-pane -->
                    </div>
                    <!-- /.tab-content -->
                </div>

            </div>
        </div>
    </section>
</form>

<!--SAP API TO SAP API MODALS-->
<div class="modal fade" id="sapi-sapi-modal-field">
    <div class="modal-dialog modal-lg" style="width:1000px;">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Field Mapping Details</h4>
            </div>
            <div class="modal-body">
                <table id="FieldConfig" class="table table-bordered table-striped table-responsive w-100 dt">
                    <thead>
                        <tr>
                            <th>Field Mapping Code</th>
                            <th>Field Mapping Name </th>
                            <th>Source SAP API Code</th>
                            <th>Destination SAP API Code</th>
                            @*<th>Module</th>*@
                            @*<th>Path Code</th>*@
                            @*<th>Header Worksheet</th>
                                <th>Row Worksheet</th>*@
                            @*<th>File Name</th>
                                <th>File Type</th>*@
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var field in Model.FieldView.Where(x => x.DataType == "DATASAPISAPI"))
                        {
                            <tr>
                                <td>@field.MapCode</td>
                                <td>@field.MapName</td>
                                <td>@field.APICode</td>
                                <td>@field.SAPCode</td>
                                @*<td>@field.ModuleName</td>*@
                                @*<td>@field.PathCode</td>*@
                                @*<td>@field.HeaderWorksheet</td>
                                    <td>@field.RowWorksheet</td>*@
                                @*<td>@field.FileName</td>
                                    <td>@field.FileType</td>*@
                                <td><button class="btn-info fa fa-arrow-circle-o-right" data-sapi-sapi-mapid="@field.MapId"></button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="sapi-modal-source-apicode">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">SAP Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">
                    <table id="source-sapi-APIConfig" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>DB Name</th>
                                <th>License Port</th>
                                <th>Ip Address</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var sap in Model.SAPCodeList)
                            {
                                <tr>
                                    <td>@sap.SAPCode</td>
                                    <td>@sap.SAPDBName</td>
                                    <td>@sap.SAPLicensePort</td>
                                    <td>@sap.SAPIPAddress</td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" data-sapi-source-apiid="@sap.SAPCode"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="sapi-modal-destination-apicode">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">SAP Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">
                    <table id="destination-sapi-APIConfig" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>DB Version</th>
                                <th>License Port</th>
                                <th>Ip Address</th>
                                <th>Version</th>
                                <th>DB Port</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var sap in Model.SAPCodeList)
                            {
                                <tr>
                                    <td>@sap.SAPCode</td>
                                    <td>@sap.SAPDBVersion</td>
                                    <td>@sap.SAPLicensePort</td>
                                    <td>@sap.SAPIPAddress</td>
                                    <td>@sap.SAPVersion</td>
                                    <td>@sap.SAPDBPort</td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" data-sapi-destination-apiid="@sap.SAPCode"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<!--END OF SAP API TO SAP API MODALS-->

<div class="modal fade" id="modal-addon">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Addon Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">

                    <table id="AddonConfig" class="table table-bordered table-striped dt">
                        <thead>
                            <tr>

                                <th>Code</th>
                                <th>DB Version</th>
                                <th>Ip Address</th>
                                <th>Server Name</th>
                                <th>Port</th>
                                <th>Database Name</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var addon in Model.AddonCodeList)
                            {
                                <tr>
                                    <td>@addon.AddonCode</td>
                                    <td>@addon.AddonDBVersion</td>
                                    <td>@addon.AddonIPAddress</td>
                                    <td>@addon.AddonServerName</td>
                                    <td>@addon.AddonPort</td>
                                    <td>@addon.AddonDBName</td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" data-addonid="@addon.AddonId"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="modal-sap">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">SAP Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">
                    <table id="SAPConfig" class="table table-bordered table-striped dt">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>DB Version</th>
                                <th>License Port</th>
                                <th>Ip Address</th>
                                <th>Version</th>
                                <th>DB Port</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var sap in Model.SAPCodeList)
                            {
                                <tr>
                                    <td>@sap.SAPCode</td>
                                    <td>@sap.SAPDBVersion</td>
                                    <td>@sap.SAPLicensePort</td>
                                    <td>@sap.SAPIPAddress</td>
                                    <td>@sap.SAPVersion</td>
                                    <td>@sap.SAPDBPort</td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" data-sapid="@sap.SAPId"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="one-modal-sap">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">SAP Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">
                    <table id="SAPConfig" class="table table-bordered table-striped dt">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>DB Version</th>
                                <th>License Port</th>
                                <th>Ip Address</th>
                                <th>Version</th>
                                <th>DB Port</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var sap in Model.SAPCodeList)
                            {
                                <tr>
                                    <td>@sap.SAPCode</td>
                                    <td>@sap.SAPDBVersion</td>
                                    <td>@sap.SAPLicensePort</td>
                                    <td>@sap.SAPIPAddress</td>
                                    <td>@sap.SAPVersion</td>
                                    <td>@sap.SAPDBPort</td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" one-data-sapid="@sap.SAPId"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="modal-path">
    <div class="modal-dialog modal-lg" style="width:1250px;">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Path Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">
                    <table id="PathConfig" class="table table-bordered table-striped dt">
                        <thead>
                            <tr>

                                <th>Code</th>
                                <th>Local Path</th>
                                <th>Backup Path</th>
                                <th>Remote Path</th>
                                @*<th>FileType</th>*@

                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var path in Model.PathCodeList)
                            {
                                if (System.IO.Directory.Exists(path.LocalPath))
                                {
                                    <tr>
                                        <td>@path.PathCode</td>
                                        <td>@path.LocalPath</td>
                                        <td>@path.BackupPath</td>
                                        <td>@path.RemotePath</td>
                                        @*<td>@path.FileType</td>*@
                                        <td><button class="btn-info fa fa-arrow-circle-o-right" data-pathid="@path.PathId"></button></td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="one-modal-path">
    <div class="modal-dialog modal-lg" style="width:1250px;">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Path Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">
                    <table id="PathConfig" class="table table-bordered table-striped dt">
                        <thead>
                            <tr>

                                <th>Code</th>
                                <th>Local Path</th>
                                <th>Backup Path</th>
                                <th>Remote Path</th>
                                @*<th>FileType</th>*@

                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var path in Model.PathCodeList)
                            {
                                if (System.IO.Directory.Exists(path.LocalPath))
                                {
                                    <tr>
                                        <td>@path.PathCode</td>
                                        <td>@path.LocalPath</td>
                                        <td>@path.BackupPath</td>
                                        <td>@path.RemotePath</td>
                                        @*<td>@path.FileType</td>*@
                                        <td><button class="btn-info fa fa-arrow-circle-o-right" id="data-pathid" one-data-pathid="@path.PathId"></button></td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="db-db-modal-field">
    <div class="modal-dialog modal-lg" style="width:1000px;">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Field Mapping Details</h4>
            </div>
            <div class="modal-body">
                <table id="FieldConfig" class="table table-bordered table-striped table-responsive w-100 dt">
                    <thead>
                        <tr>
                            <th>Field Mapping Code</th>
                            <th>Field Mapping Name </th>
                            <th>Addon Code</th>
                            <th>Other Addon Code</th>
                            <th>Module</th>
                            @*<th>Path Code</th>*@
                            @*<th>Header Worksheet</th>
                                <th>Row Worksheet</th>*@
                            @*<th>File Name</th>
                                <th>File Type</th>*@
                            <th></th>
                        </tr>map-submit
                    </thead>
                    <tbody>
                        @foreach (var field in Model.FieldView.Where(x => x.DataType == "DATADBSAP"))
                        {
                            <tr>
                                <td>@field.MapCode</td>
                                <td>@field.MapName</td>
                                <td>@field.AddonCode</td>
                                <td>@field.SAPCode</td>
                                <td>@field.ModuleName</td>
                                @*<td>@field.PathCode</td>*@
                                @*<td>@field.HeaderWorksheet</td>
                                    <td>@field.RowWorksheet</td>*@
                                @*<td>@field.FileName</td>
                                    <td>@field.FileType</td>*@
                                <td><button class="btn-info fa fa-arrow-circle-o-right" data-db-db-mapid="@field.MapId"></button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="modal-field">
    <div class="modal-dialog modal-lg" style="width:1000px;">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Field Mapping Details</h4>
            </div>
            <div class="modal-body">
                <table id="FieldConfig" class="table table-bordered table-striped table-responsive w-100 dt">
                    <thead>
                        <tr>

                            <th>Field Mapping Code</th>
                            <th>Field Mapping Name </th>
                            <th>Addon Code</th>
                            <th>SAP Code</th>
                            <th>Module</th>
                            <th>Path Code</th>
                            @*<th>Header Worksheet</th>
                                <th>Row Worksheet</th>*@
                            <th>File Name</th>
                            <th>File Type</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var field in Model.FieldView.Where(x => x.DataType == "DATAFILE"))
                        {
                            <tr>
                                <td>@field.MapCode</td>
                                <td>@field.MapName</td>
                                <td>@field.AddonCode</td>
                                <td>@field.SAPCode</td>
                                <td>@field.ModuleName</td>
                                <td>@field.PathCode</td>
                                @*<td>@field.HeaderWorksheet</td>
                                    <td>@field.RowWorksheet</td>*@
                                <td>@field.FileName</td>
                                <td>@field.FileType</td>
                                <td><button class="btn-info fa fa-arrow-circle-o-right" data-mapid="@field.MapId"></button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="one-modal-field">
    <div class="modal-dialog modal-lg" style="width:1000px;">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Field Mapping Details [Per Sheet]</h4>
            </div>
            <div class="modal-body">
                <table id="FieldConfig" class="table table-bordered table-striped table-responsive w-100 dt">
                    <thead>
                        <tr>

                            <th>Field Mapping Code</th>
                            <th>Field Mapping Name </th>
                           
                            <th>SAP Code</th>
                            <th>Module</th>
                            <th>Path Code</th>
                            <th>File Name</th>
                            @*<th>Header Worksheet</th>
                                <th>Row Worksheet</th>
                            <th>File Name</th>
                            <th>File Type</th>*@
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var field in Model.OPSFieldView)
                        {
                            <tr>
                                <td>@field.MapCode</td>
                                <td>@field.MapName</td>
                                <td>@field.SAPCode</td>
                                <td>@field.ModuleName</td>
                                <td>@field.PathCode</td>
                                <td>
                                    <button type="button" class="btn-info fa fa-search" style="float: right;" data-toggle="modal" one-datamapid-search="@field.MapId" data-target="#one-modal-filename">Show</button>

                                </td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" one-data-mapid="@field.MapId"></button></td>
                                  

                                @*<td>@field.HeaderWorksheet</td>
        <td>@field.RowWorksheet</td>*@
                                @*<td>@field.FileName</td>
        <td>@field.FileType</td>
        <td><button class="btn-info fa fa-arrow-circle-o-right" data-mapid="@field.MapId"></button></td>*@
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="one-modal-filename">
    <div class="modal-dialog modal-lg" style="width:1000px;">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Field Mapping Details [Per Sheet]</h4>
            </div>
            <div class="modal-body">
                <table id="ops-fileview" class="table table-bordered table-striped table-responsive w-100">
                    @*<thead>
                        <tr>

                            
                            <th>File Name</th>
                            <th>File Type</th>
                           
                        </tr>
                    </thead>
                    <tbody id="one-file-tbody">
                       
                           
                    </tbody>*@
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>



<div class="modal fade" id="file-api-modal-field">
    <div class="modal-dialog modal-lg" style="width:1000px;">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Field Mapping Details</h4>
            </div>
            <div class="modal-body">
                <table id="FileAPIConfig" class="table table-bordered table-striped table-responsive w-100 dt">
                    <thead>
                        <tr>

                            <th>Field Mapping Code</th>
                            <th>Field Mapping Name </th>
                            <th>Addon Code</th>
                            <th>SAP Code</th>
                            <th>Module</th>
                            <th>Path Code</th>
                            @*<th>Header Worksheet</th>
                                <th>Row Worksheet</th>*@
                            <th>File Name</th>
                            <th>File Type</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var field in Model.FieldView.Where(x => x.DataType == "FILEAPI"))
                        {
                            <tr>
                                <td>@field.MapCode</td>
                                <td>@field.MapName</td>
                                <td>@field.AddonCode</td>
                                <td>@field.SAPCode</td>
                                <td>@field.ModuleName</td>
                                <td>@field.PathCode</td>
                                @*<td>@field.HeaderWorksheet</td>
                                    <td>@field.RowWorksheet</td>*@
                                <td>@field.FileName</td>
                                <td>@field.FileType</td>
                                <td><button class="btn-info fa fa-arrow-circle-o-right" data-file-api-mapid="@field.MapId"></button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="db-db-modal-addon">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Addon Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">

                    <table id="api-AddonConfig" class="table table-bordered table-striped dt">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>DB Version</th>
                                <th>Ip Address</th>
                                <th>Server Name</th>
                                <th>Port</th>
                                <th>Database Name</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var addon in Model.AddonCodeList)
                            {
                                <tr>
                                    <td>@addon.AddonCode</td>
                                    <td>@addon.AddonDBVersion</td>
                                    <td>@addon.AddonIPAddress</td>
                                    <td>@addon.AddonServerName</td>
                                    <td>@addon.AddonPort</td>
                                    <td>@addon.AddonDBName</td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" data-db-db-addonid="@addon.AddonId"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="db-db-modal-otheraddon">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Addon Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">

                    <table id="api-AddonConfig" class="table table-bordered table-striped dt">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>DB Version</th>
                                <th>Ip Address</th>
                                <th>Server Name</th>
                                <th>Port</th>
                                <th>Database Name</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var addon in Model.SAPCodeList)
                            {
                                <tr>
                                    <td>@addon.SAPCode</td>
                                    <td>@addon.SAPDBVersion</td>
                                    <td>@addon.SAPIPAddress</td>
                                    <td>@addon.SAPServerName</td>
                                    <td>@addon.SAPDBPort</td>
                                    <td>@addon.SAPDBName</td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" data-db-db-otheraddonid="@addon.SAPId"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="api-modal-addon">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Addon Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">

                    <table id="api-AddonConfig" class="table table-bordered table-striped dt">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>DB Version</th>
                                <th>Ip Address</th>
                                <th>Server Name</th>
                                <th>Port</th>
                                <th>Database Name</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var addon in Model.AddonCodeList)
                            {
                                <tr>
                                    <td>@addon.AddonCode</td>
                                    <td>@addon.AddonDBVersion</td>
                                    <td>@addon.AddonIPAddress</td>
                                    <td>@addon.AddonServerName</td>
                                    <td>@addon.AddonPort</td>
                                    <td>@addon.AddonDBName</td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" data-api-addonid="@addon.AddonId"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="api-modal-field">
    <div class="modal-dialog modal-lg" style="width:1000px;">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Field Mapping Details</h4>
            </div>
            <div class="modal-body">
                <table id="api-FieldConfig" class="table table-bordered table-striped table-responsive w-100 dt">
                    <thead>
                        <tr>

                            <th>Field Mapping Code</th>
                            <th>Field Mapping Name </th>
                            <th>Addon Code</th>
                            <th>SAP Code</th>
                            <th>Module</th>
                            <th>Path Code</th>
                            @*<th>Header Worksheet</th>
                                <th>Row Worksheet</th>*@
                            <th>File Name</th>
                            <th>File Type</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var field in Model.FieldView.Where(x => x.DataType == "DATAAPI"))
                        {
                            <tr>
                                <td>@field.MapCode</td>
                                <td>@field.MapName</td>
                                <td>@field.AddonCode</td>
                                <td>@field.SAPCode</td>
                                <td>@field.ModuleName</td>
                                <td>@field.PathCode</td>
                                @*<td>@field.HeaderWorksheet</td>
                                    <td>@field.RowWorksheet</td>*@
                                <td>@field.FileName</td>
                                <td>@field.FileType</td>
                                <td><button class="btn-info fa fa-arrow-circle-o-right" data-api-mapid="@field.MapId"></button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="api-modal-sap">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">SAP Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">
                    <table id="api-SAPConfig" class="table table-bordered table-striped dt">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>DB Version</th>
                                <th>License Port</th>
                                <th>Ip Address</th>
                                <th>Version</th>
                                <th>DB Port</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var sap in Model.SAPCodeList)
                            {
                                <tr>
                                    <td>@sap.SAPCode</td>
                                    <td>@sap.SAPDBVersion</td>
                                    <td>@sap.SAPLicensePort</td>
                                    <td>@sap.SAPIPAddress</td>
                                    <td>@sap.SAPVersion</td>
                                    <td>@sap.SAPDBPort</td>

                                    <td><button class="btn-info fa fa-arrow-circle-o-right" data-api-sapid="@sap.SAPId"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="api-modal-apicode">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">API Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">
                    <table id="api-APIConfig" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Code</th>
                                <th>Method</th>
                                <th>URL</th>
                                <th>Key</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var apis in Model.APIView)
                            {
                                <tr>
                                    <td>@apis.APIId</td>
                                    <td>@apis.APICode</td>
                                    <td>@apis.APIMethod</td>
                                    <td>@apis.APIURL</td>
                                    <td>@apis.APIKey</td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" data-api-apiid="@apis.APIId"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="file-modal-apicode">
    <div class="modal-dialog modal-lg">
        <div class="modal-content ">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">API Details</h4>
            </div>
            <div class="modal-body">
                <div class="box-body">
                    <table id="api-APIConfig" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Code</th>
                                <th>Method</th>
                                <th>URL</th>
                                <th>Key</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var apis in Model.APIView.Where(x => x.APIURL.ToLower().Contains("zendesk.com")))
                            {
                                <tr>
                                    <td>@apis.APIId</td>
                                    <td>@apis.APICode</td>
                                    <td>@apis.APIMethod</td>
                                    <td>@apis.APIURL</td>
                                    <td>@apis.APIKey</td>
                                    <td><button class="btn-info fa fa-arrow-circle-o-right" data-file-apiid="@apis.APIId"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-custom2 " data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section Scripts {
    <script>

        function ValueChanged(key,id) {

            //console.log(key);
           
            var moduleName = $('#one-saptable').val()
            if (moduleName != "" && $('#one-field-tabs li').length > 0) {
                
                var SapTable = table_array.find(x => x.saptable === moduleName) // if it is an array of object .. must find
                if (SapTable) {
                    SapTable[key] = $(`#${id}`).val();
                }
               

            } 
        }


        $(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' /* optional */
            });
        });
    </script>
    <script>
        $(function () {
            $('.select2').select2()
        });
    </script>
    <script>
        opsdt = $('#ops-fileview').DataTable({
            'columns': [
                { 'title':'FileName','data':'FileName' },
                { 'title':'FileType','data':'FileType' },
            ],
            'paging': true,
            'lengthChange': true,
            'searching': true,
            'ordering': true,
            'info': true,
            'autoWidth': true
        });
        function datatablereload() {
            $('.tabledt').DataTable({
                'paging': true,
                'lengthChange': true,
                'searching': true,
                'ordering': true,
                'info': true,
                'autoWidth': true
            });
            $('#db-db-header-table').DataTable({
                'paging': true,
                'lengthChange': true,
                'searching': true,
                'ordering': true,
                'info': true,
                'autoWidth': true
            });
        };

        $(function () {
            $('.dt').DataTable({
                'paging': true,
                'lengthChange': true,
                'searching': true,
                'ordering': true,
                'info': true,
                'autoWidth': true
            });
            $('#api-APIConfig').DataTable({
                'paging': true,
                'lengthChange': true,
                'searching': true,
                'ordering': true,
                'info': true,
                'autoWidth': true,
                'columnDefs': [
                    {
                        "targets": 1,
                        "render": function (data, type, full, meta) {
                            return "<div class='' style='word-wrap: break-word; width: 100px;'>" + data + "</div>";
                        }
                    },
                    {
                        "targets": 3,
                        "render": function (data, type, full, meta) {
                            return "<div class='' style='word-wrap: break-word; width: 250px;'>" + data + "</div>";
                        }
                    },
                    {
                        "targets": 4,
                        "render": function (data, type, full, meta) {
                            return "<div class='' style='word-wrap: break-word; width: 275px;'>" + data + "</div>";
                        }
                    }]
            });
        });

    </script>
    <script>
        $(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' /* optional */
            });
        });
        //field-code-formgroup field-name-formgroup field-addon-formgroup field-sap-formgroup
        //$("#field-path").on("invalid", function (e) {
        //    e.preventDefault();
        //    if (!($('#field-path-formgroup').hasClass('error'))) {
        //        $('#field-path-formgroup').append('<span class="help-block text-red">Path Code is Required</span>');
        //    }
        //    $('#field-path-formgroup').addClass('error');
        //});
        $("#field-sap").on("invalid", function (e) {
            e.preventDefault();
            if (!($('#field-sap-formgroup').hasClass('error'))) {
                $('#field-sap-formgroup').append('<span class="help-block text-red">SAP Code is Required</span>');
            }
            $('#field-sap-formgroup').addClass('error');
        });
        $("#field-addon").on("invalid", function (e) {
            e.preventDefault();
            if (!($('#field-addon-formgroup').hasClass('error'))) {
                $('#field-addon-formgroup').append('<span class="help-block text-red">Addon Code is Required</span>');
            }
            $('#field-addon-formgroup').addClass('error');
        });
        $("#field-code").on("invalid", function (e) {
            e.preventDefault();
            if (!($('#field-code-formgroup').hasClass('error'))) {
                $('#field-code-formgroup').append('<span class="help-block text-red">Mapping Code is Required</span>');
            }
            $('#field-code-formgroup').addClass('error');
        });
        $("#field-name").on("invalid", function (e) {
            e.preventDefault();
            if (!($('#field-name-formgroup').hasClass('error'))) {
                $('#field-name-formgroup').append('<span class="help-block text-red">Mapping Name is Required</span>');
            }
            $('#field-name-formgroup').addClass('error');
        });
    </script>

    <script>
        let sourceJson = []; let destinationJson = [];
        $(document).ready(function () {
            var count = 0, counth = 0;
            var comboid = 0, rowcomboid = 0;
            var inputid = 0, rowinputid = 0;
            var datatypeid = 0, rowdatatypeid = 0;
            var checkid = 0, rowcheckid = 0;
            var lengthid = 0, rowlengthid = 0;
            var createorupdate = 0, Mapid = 0;
            var rowarrhanafield = [];
            var rowarrdata = [];
            var headarrhanafield = [];
            var headarrdata = [];
            var sapfield = [];
            var rowfield = [];
            var rowdataval = [], headdataval = [];
            tbodyElementz=[];
            var sourceField2 = [];
            table_array = []
            tabTextList = [];

            //ON MODULE CHANGE ex.Item Master Data|BPMasterData

            $('#one-field-module').on('change', function () {
                $('#preloader-modal').modal('show');
                let onefieldsap = $('#one-field-sap').val();
                let onefieldmod = $('#one-field-module').val();

                console.log(onefieldsap)
                console.log(onefieldmod)
               if (onefieldsap != "" && $(this).val() != "") {
                    $.post("@Url.Action("FetchSAPAPIData", "Configuration")", {
                        Code: onefieldsap,
                        Module: onefieldmod,
                    }).done(function (data) {
                        //onsole.log('FetchSAPAPIData')
                        //console.log(data);
                        if (data) {
                            const myJSON = JSON.parse(data);
                            destinationJson = myJSON;
                            console.log("My Destination")
                            console.log(destinationJson)
                            //console.log('destJson');
                            //console.log(destinationJson.Rows);

                            $(`#one-saptable`).empty();
                            Object.entries(destinationJson.Rows).forEach(async ([key, value]) => {
                                /*console.log(destinationJson);*/
                                $(`#one-saptable`).append($('<option>', {
                                    value: key,
                                    text: key
                                }));
                            });
                            $('#preloader-modal').modal('hide');
                            //swal('Success.', 'fetch successfully', 'success')
                        }
                    }).fail(function () {
                        swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                    });
                }

            })

            $('#field-module').on('change', function () {
                let fieldsap = $('#field-sap').val();
                let fieldmod = $('#field-module').val();
                //console.log(`Field SAP: ${fieldsap} | Module: ${fieldmod}`);

                if (fieldsap != "" && $(this).val() != "") {
                    $.post("@Url.Action("FetchSAPAPIData", "Configuration")", {
                        Code: fieldsap,
                        Module: fieldmod,
                    }).done(function (data) {
                        if (data) {
                            const myJSON = JSON.parse(data);
                            destinationJson = myJSON;
                            console.log('destJson');
                            console.log(destinationJson.Rows);
                            $(`.combo-table`).empty();
                            Object.entries(destinationJson.Rows).forEach(async ([key, value]) => {
                                $(`.combo-table`).append($('<option>', {
                                    value: key,
                                    text: key
                                }));
                            });
                        }
                    }).fail(function () {
                        swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                    });
                }
            });

            $(document)

                .on('click', '#add-headerfield', function () {
                    if ($.trim($('#field-code').val()) == '') {
                        swal('Field Mapping is empty.', 'Please input the Field Code Mapping', 'warning')
                    }
                    else if ($.trim($('#field-sap').val()) == '') {
                        swal('Field SAP is empty.', 'Please input the Field SAP Mapping', 'warning')
                    }
                    else {
                        counth = counth + 1;
                        inputid = "headerinput" + counth;
                        datatypeid = "headerdata" + counth;
                        checkid = "headercheck" + counth;
                        comboid = "headercombo" + counth;
                        lengthid = "headerlength" + counth;
                        var HanaTable = $("#field-module").val();
                        var SAPCode = $("#field-sap").val();
                        var arr = [];
                        var headertable = $("#field-module").find(':selected').data('htable');
                        var rowtable = $("#field-module").find(':selected').data('rtable');

                        $.post('HanaTablePopulate', { HanaTable: HanaTable, SAPCode: SAPCode, HeaderTable: headertable, RowTable: rowtable }).done(result => {
                            console.log(result);
                            var disable = "";
                            if (createorupdate == 1 && headarrhanafield.length != 0) {
                                disable = "disabled";
                            }

                            if (result.HeaderHanaFields != null) {
                                $('#header-table tbody').append('<tr id="tr' + counth + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + counth + '" ></button></td>' +
                                    '<td><select class="form-control select2 headercombo" name ="' + datatypeid + '" style="width: 100%;" id="' + comboid + '"></select></td>' +
                                    '<td><input type="text" class="form-control headerinput" placeholder="Insert Field" id="' + inputid + '"></td>' +
                                    '<td><select class="form-control select2 headertype" name="' + lengthid + '" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                                    '<td> <input type="text" class="form-control headerlength" placeholder="Insert Length" id="' + lengthid + '"></td>' +
                                    '<td><input type="checkbox" class="iCheck-helper headercheck" value="unchecked" id="' + checkid + '" ' + disable + '/></</td></tr>');

                                $('#' + comboid + '').addClass("select2");
                                for (var x in result.HeaderHanaFields) {
                                    $('#' + comboid + '').append($('<option>', {
                                        value: result.HeaderHanaFields[x].ColumnName,
                                        text: result.HeaderHanaFields[x].ColumnName
                                    }));
                                }
                                for (var x in result.DataTypes) {
                                    $('#' + datatypeid + '').append($("<option/>", {
                                        value: result.DataTypes[x].DataType,
                                        text: result.DataTypes[x].DataType
                                    }));
                                }

                            }
                            else {
                                swal('Unable to connect to database.', 'Please contact Administrator to resolve the issue', 'warning')
                            }
                        })
                    }
                })

                .on('click', '#api-add-parameter', function () {
                    var rowCount = $('#api-param-table tr').length;
                    $('#api-param-table tbody').append(
                        '<tr id="tr' + rowCount + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-paramid = "tr' + rowCount + '"></button></td>' +
                        '<td><input type="text" class="form-control api-param-key" placeholder="Insert Parameter Key" id="' + "paramkey-" + rowCount + '"></td>' +
                        '<td><input type="text" class="form-control api-param-value" placeholder="Insert Value" id="' + "paramval-" + rowCount + '"></td>'
                    )
                })

                .on('click', '#file-api-add-headerfield', function () {
                    if ($.trim($('#file-api-field-code').val()) == '') {
                        swal('Field Mapping is empty.', 'Please input the Field Code Mapping', 'warning')
                    }
                    else if ($.trim($('#file-api-field-apicode').val()) == '') {
                        swal('Field API is empty.', 'Please input the Field API Mapping', 'warning')
                    }
                    else if ($("#label-file-name").data('label-file-name') == '') {
                        swal('Field FileName is empty.', 'Please select a Sample File', 'warning')
                    }
                    else {
                        counth = counth + 1;
                        inputid = "file-headerinput" + counth;
                        datatypeid = "file-headerdata" + counth;
                        checkid = "file-headercheck" + counth;
                        filecomboid = "file-headercombo" + counth;
                        lengthid = "file-headerlength" + counth;
                        fileapicombo = "file-apicombo" + counth;
                        var APICode = $("#file-api-field-apicode").val();

                        var SAPCode = $("#file-api-field-apicode").val();
                        var FileName = $("#label-file-name").data('label-file-name');
                        var arr = [];
                        var headertable = $("#file-api-header-tablename").val();  //$("#field-module").find(':selected').data('htable');
                        var rowtable = "";  //$("#field-module").find(':selected').data('rtable');

                        $.post('PopulateFileAPI', { FileName: FileName, SAPCode: SAPCode, HeaderTable: headertable, RowTable: rowtable, APICode: APICode }).done(result => {
                            console.log(result);
                            var disable = "";
                            if (createorupdate == 1 && headarrhanafield.length != 0) {
                                disable = "disabled";
                            }

                            if (result.HeaderHanaFields != null) {
                                $('#file-api-header-table tbody').append('<tr id="tr' + counth + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + counth + '" ></button></td>' +
                                    '<td><select class="form-control select2 file-headercombo" name ="' + datatypeid + '" style="width: 100%;" id="' + filecomboid + '"></select></td>' +
                                    '<td><select class="form-control select2 file-apicombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + fileapicombo + '"></select></td>' +
                                    '<td><select class="form-control select2 file-headertype" name="' + lengthid + '" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                                    '<td><input type="text" class="form-control file-headerlength" placeholder="Insert Length" id="' + lengthid + '"></td>' +
                                    '<td><input type="checkbox" class="iCheck-helper file-headercheck" value="unchecked" id="' + checkid + '" ' + disable + '/></</td></tr>');

                                $('#' + filecomboid + '').addClass("select2");
                                for (var x in result.HeaderHanaFields) {
                                    $('#' + filecomboid + '').append($('<option>', {
                                        value: result.HeaderHanaFields[x].ColumnName,
                                        text: result.HeaderHanaFields[x].ColumnName
                                    }));
                                }

                                $('#' + fileapicombo + '').addClass("select2");
                                for (var x in result.HeaderAPIFields) {
                                    $('#' + fileapicombo + '').append($('<option>', {
                                        value: result.HeaderAPIFields[x].ColumnName,
                                        text: result.HeaderAPIFields[x].ColumnName
                                    }));
                                }

                                for (var x in result.DataTypes) {
                                    $('#' + datatypeid + '').append($("<option/>", {
                                        value: result.DataTypes[x].DataType,
                                        text: result.DataTypes[x].DataType
                                    }));
                                }

                            }
                            else {
                                swal('Unable to connect to database.', 'Please contact Administrator to resolve the issue', 'warning')
                            }
                        })
                    }
                })

                .on('click', '#api-add-headerfield', function () {
                    if ($.trim($('#api-field-code').val()) == '') {
                        swal('Field Mapping is empty.', 'Please input the Field Code Mapping', 'warning')
                    }
                    else if ($.trim($('#api-field-sap').val()) == '') {
                        swal('API Code is empty.', 'Please select an API code', 'warning')
                    }
                    else {
                        mapid = $('#api-field-code').data('api-mapid');
                        counth = counth + 1;
                        inputid = "api-headerinput" + counth;
                        datatypeid = "api-headerdata" + counth;
                        checkid = "api-headercheck" + counth;
                        comboid = "api-headercombo" + counth;
                        apicombo = "api-apicombo" + counth;
                        lengthid = "api-headerlength" + counth;
                        defvalid = "api-headerdefval" + counth;
                        var HanaTable = $("#api-field-module").val();
                        var SAPCode = $("#api-field-sap").val();
                        var APICode = $("#api-field-apicode").val();
                        var arr = [];
                        var headertable = $("#api-field-module").find(':selected').data('htable');
                        var rowtable = $("#api-field-module").find(':selected').data('rtable');
                        console.log('Hanatable: ' + HanaTable);
                        console.log('SAPCode: ' + SAPCode);
                        console.log('HeaderTable: ' + headertable);
                        console.log('RowTable: ' + rowtable);
                        console.log('APICode: ' + APICode);
                        console.log('MapId: ' + mapid);

                        $('#preloader-modal').modal('show');
                        $.post('HanaTablePopulateAPI', { HanaTable: HanaTable, SAPCode: SAPCode, HeaderTable: headertable, RowTable: rowtable, APICode: APICode, MapId: mapid }).done(result => {
                            console.log(result);
                            var disable = "";
                            if (createorupdate == 1 && headarrhanafield.length != 0) {
                                disable = "disabled";
                            }

                            if (result.HeaderHanaFields != null) {
                                $('#api-header-table tbody').append('<tr id="tr' + counth + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-api-headid = "tr' + counth + '" ></button></td>' +
                                    '<td><select class="form-control select2 api-headercombo" name ="' + datatypeid + '" style="width: 100%;" id="' + comboid + '"></select></td>' +
                                    '<td><select class="form-control select2 api-apicombo" name ="' + datatypeid + '" style="width: 100%;" id="' + apicombo + '"></select></td>' +
                                    '<td><select class="form-control select2 api-headertype" name="' + lengthid + '" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                                    '<td> <input type="text" class="form-control api-headerlength" placeholder="Insert Length" id="' + lengthid + '"></td>' +
                                    '<td> <input type="text" class="form-control api-headerdefval" placeholder="Insert Length" id="' + defvalid + '"></td>' +
                                    '<td><input type="checkbox" class="iCheck-helper api-headercheck" value="unchecked" id="' + checkid + '" ' + disable + '/></</td></tr>');

                                $('#' + comboid + '').addClass("select2");
                                for (var x in result.HeaderHanaFields) {
                                    $('#' + comboid + '').append($('<option>', {
                                        value: result.HeaderHanaFields[x].ColumnName,
                                        text: result.HeaderHanaFields[x].ColumnName
                                    }));
                                }

                                $('#' + apicombo + '').addClass("select2");
                                for (var x in result.HeaderAPIFields) {
                                    $('#' + apicombo + '').append($('<option>', {
                                        value: result.HeaderAPIFields[x].ColumnName,
                                        text: result.HeaderAPIFields[x].ColumnName
                                    }));
                                }

                                for (var x in result.DataTypes) {
                                    $('#' + datatypeid + '').append($("<option/>", {
                                        value: result.DataTypes[x].DataType,
                                        text: result.DataTypes[x].DataType
                                    }));
                                }
                                $('#preloader-modal').modal('hide');
                            }
                            else {
                                swal('Unable to connect to database.', 'Please contact Administrator to resolve the issue', 'warning')
                            }
                        })
                    }
                })

                .on('change', '.headercombo', function (e) {
                    var value = $(this).val();
                    var datatype = $(this).attr("name");
                    var length = $('#' + datatype + '').attr("name");
                    var HanaTable = $("#field-module").val();
                    var SAPCode = $("#field-sap").val();
                    //$.post('GetDataype', { HanaTable: HanaTable, SAPCode: SAPCode, Field: value }).done(result => {
                    //    for (var x in result.HeaderDataTypes) {
                    //        var type = result.HeaderDataTypes[x].DataType;
                    //        if (result.HeaderDataTypes[x].DBType == "HANA") {
                    //            if (type == "INTEGER") { type = "INT" }
                    //            else if (type == "TINYINT") { type = "BIT" }
                    //            else if (type == "DOUBLE") { type = "FLOAT" }
                    //            else if (type == "BLOB") { type = "IMAGE" }
                    //            else if (type == "NCLOB") { type = "TEXT" }
                    //            else if (type == "TIMESTAMP") { type = "DATETIME" }
                    //        }

                    //        $('#' + datatype + '').val(type);
                    //        $('#' + datatype + '').trigger('change');

                    //        if (result.HeaderDataTypes[x].Scale == 0 || result.HeaderDataTypes[x].Scale == null) {
                    //            $('#' + length + '').val(result.HeaderDataTypes[x].Length);
                    //        }
                    //        else {
                    //            var len = result.HeaderDataTypes[x].Length - result.HeaderDataTypes[x].Scale;
                    //            console.log(len);
                    //            $('#' + length + '').val('' + len + ',' + result.HeaderDataTypes[x].Scale + '');
                    //        }
                    //    }
                    //})
                })

                .on('click', '#db-db-add-rowfield', function () {
                    count = count + 1;
                    rowinputid = "rowinput" + count;
                    rowdatatypeid = "rowdata" + count;
                    rowcheckid = "rowcheck" + count;
                    rowcomboid = "rowcombo" + count;
                    rowlengthid = "rowlength" + count;
                    var HanaTable = $("#db-db-field-module").val();
                    var SAPCode = $("#db-db-field-otheraddon").val();
                    var arr = [];
                    var headertable = $("#db-db-header-tablename").find(':selected').data('htable');
                    var rowtable = $("#db-db-header-tablename").find(':selected').data('rtable');


                    $.post('HanaTablePopulate', { HanaTable: HanaTable, SAPCode: SAPCode, HeaderTable: headertable, RowTable: rowtable }).done(result => {
                        var disable = "";
                        if (createorupdate == 1 && rowarrhanafield.length != 0) {
                            disable = "disabled";
                        }


                        if (result.RowHanaFields != null) {
                            $('#row-table tbody').append('<tr id="trr' + count + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-rowid = "trr' + count + '" ></button></td>' +
                                '<td><select class="form-control select2 rowcombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + rowcomboid + '"></select></td>' +
                                '<td><input type="text" class="form-control rowinput" placeholder="Insert Field" id="' + rowinputid + '"></td> ' +
                                '<td><select class="form-control select2 rowtype" name ="' + rowlengthid + '" style="width: 100%;" id="' + rowdatatypeid + '"></select></td>' +
                                '<td><input type="text" class="form-control rowlength" placeholder="Insert Length" id="' + rowlengthid + '"></td>' +
                                '<td><input type="checkbox" value="unchecked" class="iCheck-helper rowcheck" id="' + rowcheckid + '" ' + disable + '/></</td ></tr > ');

                            $('#' + rowcomboid + '').addClass("select2");
                            for (var x in result.RowHanaFields) {
                                $('#' + rowcomboid + '').append($('<option>', {
                                    value: result.RowHanaFields[x].ColumnName,
                                    text: result.RowHanaFields[x].ColumnName
                                }));
                            }
                            for (var x in result.DataTypes) {
                                $('#' + rowdatatypeid + '').append($("<option/>", {
                                    value: result.DataTypes[x].DataType,
                                    text: result.DataTypes[x].DataType
                                }));
                            }
                        }
                        else {
                            swal('Unable to connect to database.', 'Please contact Administrator to resolve the issue', 'warning')
                        }
                    })
                })

                .on('click', '#add-rowfield', function () {
                    count = count + 1;
                    rowinputid = "rowinput" + count;
                    rowdatatypeid = "rowdata" + count;
                    rowcheckid = "rowcheck" + count;
                    rowcomboid = "rowcombo" + count;
                    rowlengthid = "rowlength" + count;
                    var HanaTable = $("#field-module").val();
                    var SAPCode = $("#field-sap").val();
                    var arr = [];
                    var headertable = $("#field-module").find(':selected').data('htable');
                    var rowtable = $("#field-module").find(':selected').data('rtable');


                    $.post('HanaTablePopulate', { HanaTable: HanaTable, SAPCode: SAPCode, HeaderTable: headertable, RowTable: rowtable }).done(result => {
                        var disable = "";
                        if (createorupdate == 1 && rowarrhanafield.length != 0) {
                            disable = "disabled";
                        }


                        if (result.RowHanaFields != null) {
                            $('#row-table tbody').append('<tr id="trr' + count + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-rowid = "trr' + count + '" ></button></td>' +
                                '<td><select class="form-control select2 rowcombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + rowcomboid + '"></select></td>' +
                                '<td><input type="text" class="form-control rowinput" placeholder="Insert Field" id="' + rowinputid + '"></td> ' +
                                '<td><select class="form-control select2 rowtype" name ="' + rowlengthid + '" style="width: 100%;" id="' + rowdatatypeid + '"></select></td>' +
                                '<td><input type="text" class="form-control rowlength" placeholder="Insert Length" id="' + rowlengthid + '"></td>' +
                                '<td><input type="checkbox" value="unchecked" class="iCheck-helper rowcheck" id="' + rowcheckid + '" ' + disable + '/></</td ></tr > ');

                            $('#' + rowcomboid + '').addClass("select2");
                            for (var x in result.RowHanaFields) {
                                $('#' + rowcomboid + '').append($('<option>', {
                                    value: result.RowHanaFields[x].ColumnName,
                                    text: result.RowHanaFields[x].ColumnName
                                }));
                            }
                            for (var x in result.DataTypes) {
                                $('#' + rowdatatypeid + '').append($("<option/>", {
                                    value: result.DataTypes[x].DataType,
                                    text: result.DataTypes[x].DataType
                                }));
                            }
                        }
                        else {
                            swal('Unable to connect to database.', 'Please contact Administrator to resolve the issue', 'warning')
                        }
                    })
                })

                .on('click', '#api-add-rowfield', function () {
                    mapid = $('#api-field-code').data('api-mapid');
                    count = count + 1;
                    rowinputid = "api-rowinput" + count;
                    rowdatatypeid = "api-rowdata" + count;
                    rowcheckid = "api-rowcheck" + count;
                    rowcomboid = "api-rowcombo" + count;
                    apirowcombo = "api-apirowcombo" + count;
                    rowlengthid = "api-rowlength" + count;
                    rowdefvalid = "api-rowdefval" + count;
                    var HanaTable = $("#api-field-module").val();
                    var APICode = $("#api-field-apicode").val();
                    var SAPCode = $("#api-field-sap").val();
                    var arr = [];
                    var headertable = $("#api-field-module").find(':selected').data('htable');
                    var rowtable = $("#api-field-module").find(':selected').data('rtable');
                    console.log(mapid);
                    $.post('HanaTablePopulateAPI', { HanaTable: HanaTable, SAPCode: SAPCode, HeaderTable: headertable, RowTable: rowtable, APICode: APICode, MapId: mapid }).done(result => {
                        var disable = "";
                        if (createorupdate == 1 && rowarrhanafield.length != 0) {
                            disable = "disabled";
                        }

                        if (result.RowAPIFields != null) {
                            $('#api-row-table tbody').append('<tr id="trr' + count + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-api-rowid = "trr' + count + '" ></button></td>' +
                                '<td><select class="form-control select2 api-rowcombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + rowcomboid + '"></select></td>' +
                                '<td><select class="form-control select2 api-apirowcombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + apirowcombo + '"></select></td>' +
                                '<td><select class="form-control select2 api-rowtype" name ="' + rowlengthid + '" style="width: 100%;" id="' + rowdatatypeid + '"></select></td>' +
                                '<td><input type="text" class="form-control api-rowlength" placeholder="Insert Length" id="' + rowlengthid + '"></td>' +
                                '<td><input type="text" class="form-control api-rowdefval" placeholder="Default Value" id="' + rowdefvalid + '"></td>' +
                                '<td><input type="checkbox" value="unchecked" class="iCheck-helper api-rowcheck" id="' + rowcheckid + '" ' + disable + '/></</td ></tr > ');

                            $('#' + rowcomboid + '').addClass("select2");
                            for (var x in result.RowHanaFields) {
                                $('#' + rowcomboid + '').append($('<option>', {
                                    value: result.RowHanaFields[x].ColumnName,
                                    text: result.RowHanaFields[x].ColumnName
                                }));
                            }

                            $('#' + apirowcombo + '').addClass("select2");
                            for (var x in result.RowAPIFields) {
                                $('#' + apirowcombo + '').append($('<option>', {
                                    value: result.RowAPIFields[x].ColumnName,
                                    text: result.RowAPIFields[x].ColumnName
                                }));
                            }
                            for (var x in result.DataTypes) {
                                $('#' + rowdatatypeid + '').append($("<option/>", {
                                    value: result.DataTypes[x].DataType,
                                    text: result.DataTypes[x].DataType
                                }));
                            }
                        }
                        else {
                            swal('Unable to connect to database.', 'Please contact Administrator to resolve the issue', 'warning')
                        }
                    })
                })

                .on('change', '#api-field-module', function (e) {
                    console.log($(this).val());
                    if ($(this).val()?.toLowerCase().includes("master data") || $(this).val()?.toLowerCase().includes("list") || $(this).val()?.toLowerCase().includes("measurement")) {
                        $('#api-tab1').html('Product');
                        $('#api-tab2').html('Variant');
                    }
                    else {
                        $('#api-tab1').html('Header');
                        $('#api-tab2').html('Row');
                    }
                })

                .on('change', '.rowcombo', function (e) {
                    var value = $(this).val();
                    var datatype = $(this).attr("name");
                    var length = $('#' + datatype + '').attr("name");
                    var HanaTable = $("#field-module").val();
                    var SAPCode = $("#field-sap").val();
                    $.post('GetDataype', { HanaTable: HanaTable, SAPCode: SAPCode, Field: value }).done(result => {
                        for (var x in result.RowDataTypes) {
                            var type = result.RowDataTypes[x].DataType;
                            if (result.RowDataTypes[x].DBType == "HANA") {
                                if (type == "INTEGER") { type = "INT" }
                                else if (type == "TINYINT") { type = "BIT" }
                                else if (type == "DOUBLE") { type = "FLOAT" }
                                else if (type == "BLOB") { type = "IMAGE" }
                                else if (type == "NCLOB") { type = "TEXT" }
                                else if (type == "TIMESTAMP") { type = "DATETIME" }
                            }

                            $('#' + datatype + '').val(type);
                            $('#' + datatype + '').trigger('change');

                            if (result.RowDataTypes[x].Scale == 0 || result.RowDataTypes[x].Scale == null) {
                                $('#' + length + '').val(result.RowDataTypes[x].Length);
                            }
                            else {
                                var len = result.RowDataTypes[x].Length - result.RowDataTypes[x].Scale;
                                console.log(len);
                                $('#' + length + '').val('' + len + ',' + result.RowDataTypes[x].Scale + '');
                            }
                        }
                    })
                })

                .on('click', 'button[data-addonid]', function () {
                    var id = $(this).data('addonid');
                    console.log(id)
                    $.post('FindAddon', { Id: id }).done(result => {
                        for (var x in result.AddonView) {
                            $('#field-addon').val(result.AddonView[x].AddonCode);
                            $('#file-api-field-addon').val(result.AddonView[x].AddonCode);
                        }
                    })
                    $(".modal").modal('hide');
                })

                .on('click', 'button[data-api-addonid]', function () {
                    var id = $(this).data('api-addonid');
                    $.post('FindAddon', { Id: id }).done(result => {
                        for (var x in result.AddonView) {
                            $('#api-field-addon').val(result.AddonView[x].AddonCode);
                        }
                    })
                    $(".modal").modal('hide');
                })

                .on('click', 'button[data-db-db-addonid]', function () {
                    var id = $(this).data('db-db-addonid');
                    $.post('FindAddon', { Id: id }).done(result => {
                        for (var x in result.AddonView) {
                            $('#db-db-field-addon').val(result.AddonView[x].AddonCode);
                        }
                    })
                    $(".modal").modal('hide');
                })

                .on('click', 'button[data-db-db-otheraddonid]', function () {
                    $('#db-db-modal-otheraddon').modal('hide');
                    $('#preloader-modal').modal('show');
                    $('.appendremove').remove()
                    var id = $(this).data('db-db-otheraddonid');
                    var DBName = '';
                    var model;
                    var rowname = '';
                    var module = $('#db-db-field-module').find(':selected').data('htable');
                    $.post('FindSAP', { Id: id }).done(result => {
                        for (var x in result.SAPView) {
                            //model = result.SAPView[x];
                            $('#db-db-field-otheraddon').val(result.SAPView[x].SAPCode);
                            $('#tableheader').text(module);
                            SAPDBName = result.SAPView[x].SAPDBName;

                            //Populate Header Table
                            $.post('PopulateSAPDBTable', { Schema: result.SAPView[x].SAPDBName, Module: module, model: result.SAPView[x] }).done(result => {
                                $('#db-db-header-table').DataTable().destroy();
                                for (var x in result.Headers) {
                                    $('#db-db-header-table tbody').append('<tr class="appendremove"><td width="5%"></td>' +
                                        '<td>' + result.Headers[x].TableName + '</td>' +
                                        '<td>' + result.Headers[x].DataType + '</td>' +
                                        '<td>' + result.Headers[x].Length + '</td></tr>');
                                }
                            })

                            var tabid = "";
                            //Populate Row Table
                            $.post('PopulateSAPDBTableRow', { Schema: result.SAPView[x].SAPDBName, Module: module, model: result.SAPView[x] }).done(result => {
                                for (var x in result.Headers) {
                                    if (rowname != result.Headers[x].TableName) {
                                        tabid = result.Headers[x].TableName + result.Headers[x].SAPHeaderFieldId;
                                        $('#tabletabs').append('<li class="appendremove"><a href="#' + tabid + '" data-toggle="tab">' + result.Headers[x].TableName + '</a></li>');
                                        rowname = result.Headers[x].TableName;
                                    }
                                    else {
                                        $('#tabletabcontent').append(
                                            '<div class="tab-pane appendremove" id="' + tabid + '" >'
                                            + '<div class="box">'
                                            + '<div class="box-body">'
                                            + '<table id="db-db-' + tabid + '-table" class="table tabledt table-fields table-bordered table-striped">'
                                            + '<thead>'
                                            + '<tr>'
                                            + '<th></th>'
                                            + '<th>Table Name</th>'
                                            + '<th>Data Type</th>'
                                            + '<th>Length</th>'
                                            + '</tr>'
                                            + '</thead>'
                                            + '<tbody></tbody>'
                                            + '</table>'
                                            + '</div>'
                                            + '<div class="box-footer">'
                                            + '<button type="submit" class="btn margin btn-primary" style="float: right;" id="db-db-field-save">Save</button>'
                                            + '</div>'
                                            + '</div>'
                                            + '</div>'
                                        );
                                    }
                                    $('#db-db-' + tabid + '-table tbody').append('<tr><td width="5%"></td>' +
                                        '<td>' + result.Headers[x].SAPHeaderFieldId + '</td>' +
                                        '<td>' + result.Headers[x].DataType + '</td>' +
                                        '<td>' + result.Headers[x].Length + '</td></tr>');
                                }
                                datatablereload();
                                $('#preloader-modal').modal('hide');
                            })
                        }

                        //$(".modal").modal('hide');

                    })

                    ////Populate Table
                    //$.post('PopulateSAPDBTable', { Schema: DBName, Module: module, model: model }).done(result => {
                    //   for (var x in result.SAPView) {
                    //      $('#db-db-field-otheraddon').val(result.SAPView[x].SAPCode);
                    //      SAPDBName = result.SAPView[x].SAPDBName
                    //   }
                    //})
                })

                .on('change', '#db-db-field-module', function () {
                    if ($('#db-db-field-otheraddon').val() != "") {
                        $('.appendremove').remove()
                        var id = $('#db-db-field-otheraddon').val();
                        var DBName = '';
                        var model;
                        var rowname = '';
                        var module = $('#db-db-field-module').find(':selected').data('htable');
                        $.post('FindSAPString', { code: id }).done(result => {
                            $('#preloader-modal').modal('show');
                            for (var x in result.SAPView) {
                                $('#db-db-field-otheraddon').val(result.SAPView[x].SAPCode);
                                $('#tableheader').text(module);
                                SAPDBName = result.SAPView[x].SAPDBName;

                                //Populate Header Table
                                $.post('PopulateSAPDBTable', { Schema: result.SAPView[x].SAPDBName, Module: module, model: result.SAPView[x] }).done(result => {
                                    $('#db-db-header-table').DataTable().destroy();
                                    for (var x in result.Headers) {
                                        $('#db-db-header-table tbody').append('<tr class="appendremove"><td width="5%"></td>' +
                                            '<td>' + result.Headers[x].TableName + '</td>' +
                                            '<td>' + result.Headers[x].DataType + '</td>' +
                                            '<td>' + result.Headers[x].Length + '</td></tr>');
                                    }
                                })
                                $('.nav-tabs a[href="#db-tab_1"]').tab('show');
                                var tabid = "";
                                //Populate Row Table
                                $.post('PopulateSAPDBTableRow', { Schema: result.SAPView[x].SAPDBName, Module: module, model: result.SAPView[x] }).done(result => {
                                    for (var x in result.Headers) {
                                        if (rowname != result.Headers[x].TableName) {
                                            tabid = result.Headers[x].TableName + result.Headers[x].SAPHeaderFieldId;
                                            $('#tabletabs').append('<li class="appendremove"><a href="#' + tabid + '" data-toggle="tab">' + result.Headers[x].TableName + '</a></li>');
                                            rowname = result.Headers[x].TableName;
                                        }
                                        else {
                                            $('#tabletabcontent').append(
                                                '<div class="tab-pane appendremove" id="' + tabid + '" >'
                                                + '<div class="box">'
                                                + '<div class="box-body">'
                                                + '<table id="db-db-' + tabid + '-table" class="table tabledt table-fields table-bordered table-striped">'
                                                + '<thead>'
                                                + '<tr>'
                                                + '<th></th>'
                                                + '<th>Table Name</th>'
                                                + '<th>Data Type</th>'
                                                + '<th>Length</th>'
                                                + '</tr>'
                                                + '</thead>'
                                                + '<tbody></tbody>'
                                                + '</table>'
                                                + '</div>'
                                                + '<div class="box-footer">'
                                                + '<button type="submit" class="btn margin btn-primary" style="float: right;" id="db-db-field-save">Save</button>'
                                                + '</div>'
                                                + '</div>'
                                                + '</div>'
                                            );
                                        }
                                        $('#db-db-' + tabid + '-table tbody').append('<tr><td width="5%"></td>' +
                                            '<td>' + result.Headers[x].SAPHeaderFieldId + '</td>' +
                                            '<td>' + result.Headers[x].DataType + '</td>' +
                                            '<td>' + result.Headers[x].Length + '</td></tr>');
                                    }
                                    datatablereload();
                                    $('#preloader-modal').modal('hide');
                                })
                            }

                        })

                        ////Populate Table
                        //$.post('PopulateSAPDBTable', { Schema: DBName, Module: module, model: model }).done(result => {
                        //   for (var x in result.SAPView) {
                        //      $('#db-db-field-otheraddon').val(result.SAPView[x].SAPCode);
                        //      SAPDBName = result.SAPView[x].SAPDBName
                        //   }
                        //})

                    }

                })

                //GROUP MAP SAP CODE TRIGGER
                .on('click', 'button[data-sapid]', function () {

                    var id = $(this).data('sapid');
                    console.log(id)
                    $.post('FindSAP', { Id: id }).done(result => {

                        for (var x in result.SAPView) {
                            $('#field-sap').val(result.SAPView[x].SAPCode);
                            $('#field-module').trigger('change');
                        }
                    })
                    $(".modal").modal('hide');
                })

                // ONE PER SHEET

                .on('click', 'button[one-data-sapid]', function () {

                    var id = $(this).attr('one-data-sapid');
                    console.log(id)
                    $.post('FindSAP', { Id: id }).done(result => {
                        console.log("FindSAP")
                        console.log(result);
                        for (var x in result.SAPView) {
                            $('#one-field-sap').val(result.SAPView[x].SAPCode);
                            $('#one-field-module').trigger('change');
                        }
                    })
                    $(".modal").modal('hide');
                })

                .on('click', 'button[data-api-sapid]', function () {
                    var id = $(this).data('api-sapid');
                    console.log(id)
                    $.post('FindSAP', { Id: id }).done(result => {

                        for (var x in result.SAPView) {
                            $('#api-field-sap').val(result.SAPView[x].SAPCode);
                        }
                    })
                    $(".modal").modal('hide');
                })

                .on('click', 'button[data-api-apiid]', function () {
                    var id = $(this).data('api-apiid');
                    console.log(id)
                    $.post('FindAPI', { Id: id }).done(result => {
                        if (result.APIView.length > 0) {
                            $('#api-field-apicode').val(result.APIView[0].APICode);
                            $('#api-field-module').val(result.APIView[0].APIModule);
                            $('#api-field-module').trigger('change');

                        }
                    })
                    $(".modal").modal('hide');
                })

                .on('click', 'button[data-file-apiid]', function () {
                    var id = $(this).data('file-apiid');
                    console.log(id)
                    $.post('FindAPI', { Id: id }).done(result => {
                        if (result.APIView.length > 0) {
                            $('#file-api-field-apicode').val(result.APIView[0].APICode);
                        }
                    })
                    $(".modal").modal('hide');
                })

                //one Path Code

                .on('click', 'button[data-pathid]', function () {
                    var id = $(this).data('pathid');

                    $('input[data-file-pathid]').attr('data-file-pathid', id);
                    $('input[data-file-pathid]').prop('data-file-pathid', id);
                    $('input[data-file-pathid]').data('file-pathid', id).trigger('change')


                    $(".modal").modal('hide');
                })

                .on('click', 'button[one-data-pathid]', function () {

                    var id = $(this).attr('one-data-pathid');

                    $('input[one-data-file-pathid]').attr('one-data-file-pathid', id);
                    //$('input[data-file-pathid]').prop('data-file-pathid', id);
                    //$('input[one-data-file-pathid]').attr('file-pathid', id)
                    $('input[one-data-file-pathid]').trigger('change')

                    $(".modal").modal('hide');
                })


                .on('change', 'input[data-file-pathid]', function () {

                    let id = $(this).data('file-pathid');
                    //alert("Data File Path ID"  +id)
                    //console.log(`Trigger PathId:${id}`);
                    $.post('FindPath', { Id: id }).done(result => {

                        if (result.Id !== id) {
                            $('#field-filename').empty();
                        }

                        for (var x in result.PathView) {

                            $('#field-path').val(result.PathView[x].PathCode);
                            $('#file-api-field-path').val(result.PathView[x].PathCode);
                        }

                        var optionMap = new Map();

                        // Loop through all existing options and update the count for each value and text
                        $(`#field-filename option`).each(function () {
                            var optionValue = $(this).val();
                            var optionText = $(this).text();

                            var count = optionMap.get(optionValue + optionText) || 0;
                            optionMap.set(optionValue + optionText, count + 1);
                        });

                        // Loop through the new options and append only those that haven't been added before
                        for (var x in result.FileList) {
                            var optionValue = result.FileList[x].FilePath;
                            var optionText = result.FileList[x].FileName;

                            var count = optionMap.get(optionValue + optionText) || 0;

                            if (count === 0) {
                                $(`#field-filename`).append($('<option>', {
                                    value: optionValue,
                                    text: optionText
                                }));

                                optionMap.set(optionValue + optionText, 1);
                            }
                        }

                       // console.log(result.FileList);
                        if (result.FileList.length > 0) {
                            $('#field-filename').trigger('change');
                        }

                    }); //End Post



                })

                .on('change', 'input[one-data-file-pathid]', function () {

                    let id = $(this).attr('one-data-file-pathid');
                    //alert("Data File Path ID"  +id)

                    //console.log(`Trigger PathId:${id}`);
                    $.post('FindPath', { Id: id }).done(result => {

                        if (result.Id !== id) {
                            $('#one-field-filename').empty();
                        }

                        for (var x in result.PathView) {

                            $('#one-field-path').val(result.PathView[x].PathCode);
                            $('#file-api-field-path').val(result.PathView[x].PathCode);
                        }

                        var optionMap = new Map();

                        // Loop through all existing options and update the count for each value and text
                        $(`#one-field-filename option`).each(function () {
                            var optionValue = $(this).val();
                            var optionText = $(this).text();

                            var count = optionMap.get(optionValue + optionText) || 0;
                            optionMap.set(optionValue + optionText, count + 1);
                        });

                        // Loop through the new options and append only those that haven't been added before
                        for (var x in result.FileList) {
                            var optionValue = result.FileList[x].FilePath.toLowerCase();
                            var optionText = result.FileList[x].FileName.toLowerCase();

                            var count = optionMap.get(optionValue + optionText) || 0;

                            if (count === 0) {
                                $(`#one-field-filename`).append($('<option>', {
                                    value: optionValue,
                                    text: optionText
                                }));

                                optionMap.set(optionValue + optionText, 1);
                            }
                        }

                        //console.log(result.FileList);
                        if (result.FileList.length > 0) {
                            //$('#field-filename').trigger('change');
                        }

                    }); //End Post



                })

                .on('click', '#new-table', function () {

                    swal({
                        title: 'Are you sure you want to create a New Table?',
                        text: "",
                        type: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes',
                        allowOutsideClick: false
                    }).then((result) => {

                        if (result.value) {
                            $("#new-table").hide()
                            $("#one-saptable").prop('disabled', false);
                            $('#one-header-name').val("");
                            $('#one-field-sheetname').val("");

                            $('#one-row-name').val("");
                            //$('#one-field-path').val("");
                            //$('#one-field-path').attr("one-data-file-pathid", "");
                            $('#one-field-filename').val("");


                            $('.btn-primary.newfield').prop('disabled', true);
                        }//end of if result.value


                    })//end of then(result)




                })

                .on('click', '#add-table', function () {

                    
                    var key = $("#one-saptable").val();
                    var idmap = $(this).attr("data-opsmapid");
                   
                    //console.log("isExist??" + isExist)

                    //$('#one-field-module').prop('disabled', true);
                    swal({
                        title: 'Are you sure you want to Create this Table?',
                        text: "",
                        type: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes',
                        allowOutsideClick: false
                    }).then((result) => {

                        if (result.value) {
                            $("#new-table").show()
                        
                            if (idmap != '') {

                                $.post('AddTableOpsMapId', { Id: idmap, TableMap: key }).done(result => {
                                    console.log(result)
                                    if (!result) {
                                        //$(`#one-field-tab-content-${key}`).show()
                                        var one_filename = $("#one-field-filename").val();

                                        var one_fieldpath = $('#one-field-path').val();

                                        var one_fieldpathid = $('#one-field-path').attr("one-data-file-pathid");


                                        var header_name = $('#one-header-name').val().toUpperCase();

                                        var row_name = $('#one-row-name').val().toUpperCase();

                                        var filetype = ".xlsx | .xls | .csv" //$('#one-field-filetype').val();

                                        var sheetName = $('#one-field-sheetname').val();
                                        var pathid = $('#one-field-path').attr('one-data-file-pathid')


                                        var data = {
                                            "PathId": pathid,
                                            "saptable": key,
                                            "filename": one_filename,
                                            "fieldpath": one_fieldpath,
                                            "headername": header_name,
                                            "rowname": row_name,
                                            "filetype": filetype,
                                            "sheetname": sheetName
                                        }

                                        //console.log(data);

                                        /*  <i class="fa fa-database"></i> Table Name :  <span id="field-row-tblname_${key}">${key}</span>*/
                                        let tabCount = $('#one-field-tabs li').length + 1;

                                        isActive = true

                                        if (key === null || one_filename === null || header_name === '' || row_name === '' || one_fieldpathid === "" || sheetName === "") {
                                            swal("Can't Add Table", "Please fill up the required fileds", "warning")
                                        } else {
                                            $(`#one-field-row-table-${key}`).show();

                                            $('.btn-primary.newfield').prop('disabled', false);
                                            table_array.push(data)//if it is an array of object

                                            $('#one-field-tabs').append(`<li class="row-append"> <a href="#one_tab_${tabCount}" data-toggle="tab"> <button type="button" class="btn-info fa fa-trash" data-delete=${key}> </button>  ${key}</a> </li>`);

                                            $(`#one-field-tab-content`).append(`
                                     <div class="tab-pane ${isActive} row-append" id="one_tab_${tabCount}">
                                        <div class="box">
                                            <div class="box-header">
                                                <h3 class="box-title">

                                                </h3>

                                            </div>
                                            <div class="box-body">
                                                <table id="one-field-row-table-${key}" one-data-tablename="${key}" class="table one-field-table-rows table-fields table-bordered table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th>Source Field</th>
                                                            <th>Destination SAP Field</th>
                                                            <th>Data Type</th>
                                                            <th>Conditional Value</th>
                                                            <th>isKeyValue</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody class="one-fieldrow-tbody" data-tablesap="" id="one-field-row-tbody-${key}"></tbody>
                                                </table>
                                            </div>
                                            <div class="box-footer">
                                                <button type="button" class="btn btn-primary newfield" style="float: right;" data-index="0"  one-data-field-tablename="${key}" id="field-add-rowfield-${key}">New Field</button>
                                            </div>
                                        </div>
                                    </div>
                                `);
                                            //$('#one-field-tabs li:last-child').addClass('').find('a').attr('aria-expanded', 'true');
                                            $('#one-field-tabs li:last-child a').tab('show');

                                            tabTextList = [];
                                            $('#one-field-tabs li').each(function () {
                                                var text = $(this).text().trim();

                                                tabTextList.push(text);


                                            });

                                            $('#pathcodearrow').prop('disabled', true);
                                        }//end of null


                                    } else {
                                        swal("Duplicate SapTable", "please check!", "warning")
                                    }

                                })//end of post
                            }//end of if
                            else {
                            var isExist = tabTextList.includes(key);

                            if (!isExist) {
                                //$(`#one-field-tab-content-${key}`).show()
                                var one_filename = $("#one-field-filename").val();

                                var one_fieldpath = $('#one-field-path').val();

                                var one_fieldpathid = $('#one-field-path').attr("one-data-file-pathid");


                                var header_name = $('#one-header-name').val().toUpperCase();

                                var row_name = $('#one-row-name').val().toUpperCase();

                                var filetype = ".xlsx | .xls | .csv" //$('#one-field-filetype').val();

                                var sheetName = $('#one-field-sheetname').val();
                                var pathid = $('#one-field-path').attr('one-data-file-pathid')


                                var data = {
                                    "PathId": pathid,
                                    "saptable": key,
                                    "filename": one_filename,
                                    "fieldpath": one_fieldpath,
                                    "headername": header_name,
                                    "rowname": row_name,
                                    "filetype": filetype,
                                    "sheetname": sheetName
                                }

                                //console.log(data);

                                /*  <i class="fa fa-database"></i> Table Name :  <span id="field-row-tblname_${key}">${key}</span>*/
                                let tabCount = $('#one-field-tabs li').length + 1;

                                isActive = true

                                if (key === null || one_filename === null || header_name === '' || row_name === '' || one_fieldpathid === "" || sheetName === "") {
                                    swal("Can't Add Table", "Please fill up the required fileds", "warning")
                                } else {
                                    $(`#one-field-row-table-${key}`).show();

                                    $('.btn-primary.newfield').prop('disabled', false);
                                    table_array.push(data)//if it is an array of object

                                    $('#one-field-tabs').append(`<li class="row-append"> <a href="#one_tab_${tabCount}" data-toggle="tab"> <button type="button" class="btn-info fa fa-trash" data-delete=${key}> </button>  ${key}</a> </li>`);

                                    $(`#one-field-tab-content`).append(`
                                     <div class="tab-pane ${isActive} row-append" id="one_tab_${tabCount}">
                                        <div class="box">
                                            <div class="box-header">
                                                <h3 class="box-title">

                                                </h3>

                                            </div>
                                            <div class="box-body">
                                                <table id="one-field-row-table-${key}" one-data-tablename="${key}" class="table one-field-table-rows table-fields table-bordered table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th>Source Field</th>
                                                            <th>Destination SAP Field</th>
                                                            <th>Data Type</th>
                                                            <th>Conditional Value</th>
                                                            <th>isKeyValue</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody class="one-fieldrow-tbody" data-tablesap="" id="one-field-row-tbody-${key}"></tbody>
                                                </table>
                                            </div>
                                            <div class="box-footer">
                                                <button type="button" class="btn btn-primary newfield" style="float: right;" data-index="0"  one-data-field-tablename="${key}" id="field-add-rowfield-${key}">New Field</button>
                                            </div>
                                        </div>
                                    </div>
                                `);
                                    //$('#one-field-tabs li:last-child').addClass('').find('a').attr('aria-expanded', 'true');
                                    $('#one-field-tabs li:last-child a').tab('show');

                                    tabTextList = [];
                                    $('#one-field-tabs li').each(function () {
                                        var text = $(this).text().trim();

                                        tabTextList.push(text);


                                    });

                                    $('#pathcodearrow').prop('disabled', true);
                                }//end of null


                            } else {
                                swal("Duplicate SapTable", "please check!", "warning")
                            }
                            }//Enf of Else if(the array Table has no)
                        }//end of if result.value
                    })//end of then(result)
                  


                })//end of add-table

                .on('shown.bs.tab', '#one-field-tabs', function (event) {


                   // console.log($('#one-row-name').val());


                    $('#new-table').show();
                    var hreftext = $(event.target).text().trim();
                    //console.log(hreftext)


                     var SapTable = table_array.find(x => x.saptable === hreftext) // if it is an array of object .. must find

                    console.log(SapTable)

                        //SapTable.rowname = $('#one-row-name').val();
                        $("#one-saptable").val(SapTable.saptable).trigger('change');
                    $('#one-row-name').val(SapTable.rowname);
                    $('#one-field-sheetname').val(SapTable.sheetname);


                        $('#one-header-name').val(SapTable.headername);

                    //$('#one-field-path').attr('one-data-file-pathid', SapTable.PathId)
                    $('#one-field-path').val(SapTable.fieldpath)//.trigger('change') //need to activate it . But the filename

                    $("#one-field-filename").val(SapTable.filename.toLowerCase()).trigger('change');
                    
                    //$("#one-field-filename").select2().val(SapTable.filename).trigger('change')

                    $("#one-saptable").val(SapTable.saptable).trigger('change').prop('disabled', true);


                })

                //fieldfileName
                .on('change', '#field-filename', function () {

                    let filename = "";
                    filename = encodeURI($(this).val());
                    console.log(filename);
                    let isActive = "";
                    let isExpand = `aria-expanded="true"`;
                    if (filename !== "") {
                        $.post(`/linkbox/api/getexcelsheet?FileName=${filename}`).done(result => {

                            const dataKeys = Object.keys(result);

                            $('#field-tabs li').remove();
                            $('.tab-pane').remove();

                            dataKeys.forEach(async function (key) {

                                isActive = (key == dataKeys[0] ? "active" : "");

                                //console.log(isActive);
                                $('#field-tabs').append(`<li class="row-append"><a href="#field-tab_${key}" data-toggle="tab">${key}</a></li>`);
                                $(`#field-tab-content`).append(`
                                    <div class="tab-pane ${isActive} row-append" id="field-tab_${key}">
                                        <div class="box">
                                            <div class="box-header">
                                                <h3 class="box-title">
                                                    <i class="fa fa-database"></i> Table Name :  <span id="field-row-tblname_${key}">${key}</span>
                                                </h3>

                                           <div style="float:right;">

                                              <h3 class="box-title">
                                                <span class="fa fa-table"></span> SAP Table :
                                                  <select class="select2 combo-table" style="width: 220px;" id="combotable_${key}"></select>

                                              </h3>

                                              <h3 class="box-title">
                                                <i class="fa fa-table"></i> Header Start :
                                              </h3>
                                              <input type="text" placeholder="B9" id="header-field-${key}" value="">

                                              <h3 class="box-title">
                                                <i class="fa fa-table"></i> Row Start :
                                              </h3>
                                              <input type="text" placeholder="B12" id="row-field-${key}" value="">

                                            </div>



                                            </div>
                                            <div class="box-body">
                                                <table id="field-row-table-${key}" data-tablename="${key}" class="table field-table-rows table-fields table-bordered table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th>Source Field</th>
                                                            <th>Destination SAP Field</th>
                                                            <th>Data Type</th>
                                                            <th>Conditional Parameter</th>
                                                            <th>isKeyValue</th>


                                                        </tr>
                                                    </thead>
                                                    <tbody class="fieldrow-tbody" data-tablesap="" id="field-row-tbody-${key}"></tbody>
                                                </table>
                                            </div>
                                            <div class="box-footer">
                                                <button type="button" class="btn btn-primary" style="float: right;" data-index="0"  data-field-tablename="${key}" id="field-add-rowfield-${key}">New Field</button>
                                            </div>
                                        </div>
                                    </div>
                                `);

                            });



                            $('#field-module').trigger('change');
                        })
                    } //End If filename is not empty
                })

            //$(document).ready(function () {
            //    console.log("Hello World")
            //    const selectElement = $(`#combotable_${key}`);
            //    const tbodyElement = $(`#field-row-tbody-${key}`);
            //    selectElement.on('change', () => {
            //        tbodyElement.attr('data-tablesap', selectElement.val());
            //    });
            //    console.log($(`#field-row-tbody-${key}`).attr('data-tablesap'));
            //})

            $(document).on('change', '.field-apicombo', function () {

                var changedValue = $(this).val();

                var tblkey = $(this).data('table');


                $(this).closest('tr').find('.field-rowdatatype').val(destinationJson.Rows[tblkey][changedValue]);
                  //console.log(destinationJson.Rows[key][changedValue])


            })//end of function()


            $(document).on('change', '.ops-field-apicombo', function () {

                var changedValue = $(this).val();

                var tblkey = $(this).data('table');

                //console.log("tblkey " + tblkey);

                $(this).closest('tr').find('.ops-field-rowdatatype').val(destinationJson.Rows[tblkey][changedValue]);
                //console.log(destinationJson.Rows[tblkey][changedValue])


            })//end of function() onchange

            $(document).on('change', '.ops-field-rowcombo', function () {


                var selectedOption = $(this).find('option:selected');

                // Get the text value of the selected option
                var textValue = selectedOption.text();

                var changedValue = $(this).val();
              
                console.log(textValue)
                var tblkey = $(this).data('table');
             
                if (textValue === "Query" || textValue === "Static Value") {
            
                    $(this).closest('tr').find('.ops-field-rowcondition').prop("readonly",false);
                    $(this).closest('tr').find('.ops-field-rowcondition').val("");
                  
                } else {
                    $(this).closest('tr').find('.ops-field-rowcondition').val("");
                    $(this).closest('tr').find('.ops-field-rowcondition').prop("readonly", true);
                  

                }
                //console.log("tblkey " + tblkey);

                //$(this).closest('tr').find('.ops-field-rowdatatype').val(destinationJson.Rows[tblkey][changedValue]);
                //console.log(destinationJson.Rows[tblkey][changedValue])


            })//end of function() onchange

                .on('click', 'button[data-mapid]', function () {

                    createorupdate = 1;
                    var id = $(this).data('mapid');
                    Mapid = id;

                    //for row
                    count = 0;
                    rowinputid = 0;
                    rowdatatypeid = 0;
                    rowcheckid = 0;
                    rowcomboid = 0;
                    rowlengthid = 0;
                    counth = 0;
                    inputid = 0;
                    datatypeid = 0;
                    checkid = 0;
                    comboid = 0;
                    lengthid = 0;
                    var HanaTable = "";
                    var SAPCode = "";
                    rowarrhanafield = [];
                    rowarrdata = [];
                    headarrhanafield = [];
                    headarrdata = [];
                    headdataval = [], rowdataval = [], sapfield = [], rowsapfield = [];
                    $('#row-tablename').val("");
                    $('#header-tablename').val("");
                    $('#row-table tbody').html("");
                    $('#header-table tbody').html("");
                    //console.log(createorupdate)
                    $.post('FindMap', { Id: id }).done(result => {

                        (async () => {
                            $('#preloader-modal').modal('show');
                            await getFields();
                            //console.log('end of get#333s');

                            await pathidChange();
                            //console.log('end of pathidChange');

                            await filenameChange();
                            //console.log('end of filenameChange');

                            await moduleChange();
                            //console.log('end of moduleChange');

                            await tableChange();
                            //console.log('end of tableChange');

                            await dropdownChange();
                            //console.log('end of dropdownChange')
                            $('#preloader-modal').modal('hide');

                            async function tableChange() {
                                countr = 0;
                                for (var x in result.Headers) {

                                    //check
                                    var req = result.Headers[x].IsRequired;
                                    tablename = result.Headers[x].TableName;
                                    var destitblname = result.Headers[x].DestinationTableName
                                    //console.log($(`#field-row-table-${tablename} tbody`));
                                    headerstart = result.Headers[x].SourceHeaderStart;

                                    combotableVal = $('#combotable_' + tablename).val(result.Headers[x].DestinationTableName);
                                    //console.log('this is value ' + combotableVal)

                                    rowstart = result.Headers[x].SourceRowStart;

                                    $('#header-field-' + tablename).val(headerstart);
                                    $('#row-field-' + tablename).val(rowstart);

                                    conditionid = "field-rowcondition_" + tablename + countr;
                                    inputid = "field-rowinput_" + tablename + countr;
                                    datatypeid = "field-rowdata_" + tablename + countr;
                                    checkid = "field-rowcheck_" + tablename + countr;
                                    filecomboid = "field-rowcombo_" + tablename + countr;
                                    lengthid = "field-rowlength_" + tablename + countr;
                                    fileapicombo = "field-rowapicombo_" + tablename + countr;
                                    rowdatatypeid = "field-rowdata_" + tablename + countr;

                                    var ischeck = "";
                                    if (req == true) {
                                        ischeck = "checked"
                                    }
                                    else {
                                        ischeck = "unchecked"
                                    }

                                    datatype_value = "";//result.Headers[x].SourceFieldId;
                                    condition_value = result.Headers[x].ConditionalQuery;
                                    $(`#field-row-table-${tablename} tbody`).append('<tr id="tr_' + tablename + countr + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + countr + '" ></button></td>' +
                                        '<td><select class="form-control select2 field-rowcombo" name ="' + datatypeid + '" data-visorder="' + result.Headers[x].VisOrder + '"  style="width: 100%;" id="' + filecomboid + '"></select></td>' +
                                        '<td><select class="form-control select2 field-apicombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + fileapicombo + '" data-table="' + destitblname + '"></select></td>' +
                                        '<td><input type="text" class="form-control field-rowdatatype" placeholder="Data Type" id="' + datatypeid + '" value="" readonly></td>' +
                                        '<td><input type="text" class="form-control field-rowcondition" placeholder="Query Condition" id="' + conditionid + '" value="' + condition_value + '"></td>' +
                                        '<td style="display:flex; justify-content:center; align-items:center;"><input type="checkbox" style="transform: scale(2.0);" class="iCheck-helper headercheck" id="' + checkid + '" ' + ischeck + '/></</td>' +
                                        '</tr > ');

                                    countr += 1;

                                }//end for
                                $('.select2').select2();
                            }

                            console.log('end of add table fields');


                            async function dropdownChange() {
                                countr = 0;
                                var filename = $('#field-filename').val();
                                for (var x in result.Headers) {
                                    tablename = result.Headers[x].TableName;
                                    //console.log(tablename);
                                    sourcefield = result.Headers[x].SourceFieldId;

                                    destinationfield = result.Headers[x].DestinationField
                                    var headerstart = $('#header-field-' + tablename).val();
                                    var rowstart = $('#row-field-' + tablename).val();
                                    //console.log(tablename, filename, headerstart, rowstart)
                                    const key = $(`#combotable_${tablename}`).val();

                                    await $.post(`/linkbox/api/getexcelcolumn?FileName=${filename}&HeadStart=${headerstart}&RowStart=${rowstart}&SheetName=${tablename}`).done(result => {

                                        //console.log(result);
                                        let sourceJson = result[tablename][0];

                                        //console.log(sourceJson);

                                        filecomboid = "field-rowcombo_" + tablename + countr;
                                        $(`#${filecomboid}`).addClass("select2");

                                        Object.entries(sourceJson).forEach(([keyr, value]) => {
                                            //console.log(keyr);



                                            if (sourcefield === keyr) {
                                                $(`#${filecomboid}`).append(`<option selected value="${keyr}">${keyr}</option>`);
                                                sourceField2.push(keyr);
                                            } else {
                                                $(`#${filecomboid}`).append(`<option value="${keyr}">${keyr}</option>`);
                                            }




                                        });


                                        fileapicombo = "field-rowapicombo_" + tablename + countr;
                                        datatypeid = "field-rowdata_" + tablename + countr;
                                        $(`#${fileapicombo}`).addClass("select2");
                                        Object.entries(destinationJson.Rows[key]).forEach(async ([keyr, value]) => {
                                            ///console.log(`Key:${key} | KeyR:${keyr}`);
                                            if (destinationfield === keyr) {
                                                $(`#${fileapicombo}`).append(`<option selected value="${keyr}">${keyr}</option>`);
                                                $(`#${datatypeid}`).val(value);
                                            } else {
                                                $(`#${fileapicombo}`).append(`<option value="${keyr}">${keyr}</option>`);
                                            }


                                        });





                                    });//end of post
                                    countr += 1;
                                }//end of for


                                //const selectElement = document.querySelector('.combo-table'); // Get the first select element with class "combo-table"
                                //const optionValues = Array.from(selectElement.options).map(option => option.value); // Get option values using map() and store in an array

                                //for (const value of optionValues) {
                                //    console.log(destinationJson.Rows[value]);
                                //    //for (var x in destinationJson.Rows[value]) {
                                //    //     $(`#field-rowapicombo_${optionValues[value]}${x}`).append(`<option value="">${destinationJson.Rows[value][x]}<option/>`);

                                //    //}
                                //}




                            }


                            async function getFields() {
                                const entries = Object.entries(result.FieldView[0]);
                                for (const [key, value] of entries) {
                                    console.log(`${key} | ${value}`);
                                    await execute(key, value);
                                }
                            }

                            async function execute(key, value) {
                                if (key == "MapCode") { $('#field-code').val(value); }
                                if (key == "MapName") { $('#field-name').val(value); }
                                if (key == "PathCode") { $('#field-path').val(value); }
                                if (key == "PathId") {
                                    $('input[data-file-pathid]').attr('data-file-pathid', id);
                                    $('input[data-file-pathid]').prop('data-file-pathid', id);
                                    $('input[data-file-pathid]').data('file-pathid', value)
                                    //.trigger('change');
                                }

                                if (key == "SAPCode") { $('#field-sap').val(value).trigger('change'); }
                                if (key == "ModuleName") { $('#field-module').val(value).triggerHandler('change'); }
                                if (key == "FileName") { FileName = value; }
                            }

                            async function pathidChange() {
                                let id = $('input[data-file-pathid]').data('file-pathid');
                                console.log(`Trigger PathId:${id}`);
                                await $.post('FindPath', { Id: id }).done(result => {
                                    console.log(`FindPath`);
                                    if (result.Id !== id) {
                                        $('#field-filename').empty();
                                    }

                                    for (var x in result.PathView) {
                                        $('#field-path').val(result.PathView[x].PathCode);
                                        $('#file-api-field-path').val(result.PathView[x].PathCode);
                                    }

                                    var optionMap = new Map();

                                    // Loop through all existing options and update the count for each value and text
                                    $(`#field-filename option`).each(function () {
                                        var optionValue = $('input[data-file-pathid]').val();
                                        var optionText = $('input[data-file-pathid]').text();

                                        var count = optionMap.get(optionValue + optionText) || 0;
                                        optionMap.set(optionValue + optionText, count + 1);
                                    });

                                    // Loop through the new options and append only those that haven't been added before
                                    for (var x in result.FileList) {
                                        var optionValue = result.FileList[x].FilePath;
                                        var optionText = result.FileList[x].FileName;

                                        var count = optionMap.get(optionValue + optionText) || 0;

                                        if (count === 0) {
                                            $(`#field-filename`).append($('<option>', {
                                                value: optionValue,
                                                text: optionText
                                            }));

                                            optionMap.set(optionValue + optionText, 1);
                                        }
                                    }


                                    console.log(result.FileList);
                                    if (result.FileList.length > 0) {
                                        //$('#field-filename').trigger('change');

                                    }

                                }); //End Post
                            }

                            async function filenameChange() {
                                //lupet
                                $('#field-filename').val(FileName).triggerHandler('change');

                                let filename = "";
                                filename = encodeURI($('#field-filename').val());
                                console.log(filename);
                                let isActive = "";
                                let isExpand = `aria-expanded="true"`;
                                if (filename !== "") {
                                    await $.post(`/linkbox/api/getexcelsheet?FileName=${filename}`).done(result => {

                                        const dataKeys = Object.keys(result);

                                        $('#field-tabs li').remove();
                                        $('.tab-pane').remove();

                                        dataKeys.forEach(async function (key) {

                                            isActive = (key == dataKeys[0] ? "active" : "");

                                            //console.log(isActive);
                                            $('#field-tabs').append(`<li class="row-append"><a href="#field-tab_${key}" data-toggle="tab">${key}</a></li>`);
                                            $(`#field-tab-content`).append(`
                                    <div class="tab-pane ${isActive} row-append" id="field-tab_${key}">
                                        <div class="box">
                                            <div class="box-header">
                                                <h3 class="box-title">
                                                    <i class="fa fa-database"></i> Table Name :  <span id="field-row-tblname_${key}">${key}</span>
                                                </h3>

                                           <div style="float:right;">

                                              <h3 class="box-title">
                                                <span class="fa fa-table"></span> SAP Table :
                                                  <select class="select2 combo-table" style="width: 220px;" id="combotable_${key}"></select>

                                              </h3>

                                              <h3 class="box-title">
                                                <i class="fa fa-table"></i> Header Start :
                                              </h3>
                                              <input type="text" placeholder="B9" id="header-field-${key}" value="">

                                              <h3 class="box-title">
                                                <i class="fa fa-table"></i> Row Start :
                                              </h3>
                                              <input type="text" placeholder="B12" id="row-field-${key}" value="">

                                            </div>



                                            </div>
                                            <div class="box-body">
                                                <table id="field-row-table-${key}" data-tablename="${key}" class="table field-table-rows table-fields table-bordered table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th>Source Field</th>
                                                            <th>Destination SAP Field</th>
                                                            <th>Data Type</th>
                                                            <th>Conditional Parameter</th>
                                                            <th>isKeyValue</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody class="fieldrow-tbody" data-tablesap="" id="field-row-tbody-${key}"></tbody>
                                                </table>
                                            </div>
                                            <div class="box-footer">
                                                <button type="button" class="btn btn-primary" style="float: right;" data-index="0"  data-field-tablename="${key}" id="field-add-rowfield-${key}">New Field</button>
                                            </div>
                                        </div>
                                    </div>
                                `);

                                        });

                                        //$('#field-module').trigger('change');

                                    })
                                } //End If filename is not empty
                            }

                            async function moduleChange() {
                                let fieldsap = $('#field-sap').val();
                                let fieldmod = $('#field-module').val();
                                console.log(`Field SAP: ${fieldsap} | Module: ${fieldmod}`);
                                if (fieldsap != "" && $('#field-module').val() != "") {
                                    await $.post("@Url.Action("FetchSAPAPIData", "Configuration")", {
                                        Code: fieldsap,
                                        Module: fieldmod,
                                    }).done(function (data) {
                                        if (data) {
                                            const myJSON = JSON.parse(data);
                                            destinationJson = myJSON;
                                            console.log('destJson');
                                            console.log(destinationJson.Rows);
                                            $(`.combo-table`).empty();
                                            Object.entries(destinationJson.Rows).forEach(async ([key, value]) => {
                                                $(`.combo-table`).append($('<option>', {
                                                    value: key,
                                                    text: key
                                                }));
                                            });
                                        }
                                    }).fail(function () {
                                        swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                                    });
                                }
                            }

                        })(); // end of async


                        //#region COMMENTED
                        //var headertable = $("#field-module").find(':selected').data('htable');
                        //var rowtable = $("#field-module").find(':selected').data('rtable');
                        //console.log(headarrhanafield);
                        //for (var x in result.Rows) {

                        //    var req = result.Rows[x].IsRequired;
                        //    var len = result.Rows[x].Length;
                        //    var field = result.Rows[x].AddonRowField;
                        //    rowsapfield.push(result.Rows[x].SAPRowFieldId);
                        //    rowdataval.push(result.Rows[x].DataType);
                        //    $('#row-tablename').val(result.Rows[0].TableName);
                        //    count = count + 1;
                        //    rowinputid = "rowinput" + count;
                        //    rowdatatypeid = "rowdata" + count;
                        //    rowcheckid = "rowcheck" + count;
                        //    rowcomboid = "rowcombo" + count;
                        //    rowlengthid = "rowlength" + count;

                        //    var ischeck = "";
                        //    if (req == true) {
                        //        ischeck = "checked"
                        //    }
                        //    else {
                        //        ischeck = "unchecked"
                        //    }
                        //    $('#row-table tbody').append('<tr id="trr' + count + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-rowid = "trr' + count + '" ></button></td>' +
                        //        '<td><select class="form-control select2 rowcombo" style="width: 100%;" id="' + rowcomboid + '"></select></td>' +
                        //        '<td><input type="text" class="form-control rowinput" placeholder="Insert Field" id="' + rowinputid + '" value = "' + field + '" ></td> ' +
                        //        '<td><select class="form-control select2 rowtype" style="width: 100%;" id="' + rowdatatypeid + '" ></select></td>' +
                        //        '<td><input type="text" class="form-control rowlength" placeholder="Insert Length" id="' + rowlengthid + '" value = "' + len + '" ></td>' +
                        //        '<td><input type="checkbox" class="iCheck-helper rowcheck" id="' + rowcheckid + '" ' + ischeck + ' /></</td ></tr > ');

                        //    $('#' + rowcomboid + '').addClass("select2");

                        //    rowarrhanafield.push(rowcomboid);
                        //    rowarrdata.push(rowdatatypeid);
                        //}

                        //for (var x in result.Headers) {
                        //    var req = result.Headers[x].IsRequired;
                        //    var len = result.Headers[x].Length;
                        //    sapfield.push(result.Headers[x].SAPHeaderFieldId);
                        //    var field = result.Headers[x].AddonHeaderField;
                        //    headdataval.push(result.Headers[x].DataType);
                        //    $('#header-tablename').val(result.Headers[0].TableName);
                        //    counth = counth + 1;
                        //    inputid = "headerinput" + counth;
                        //    datatypeid = "headerdata" + counth;
                        //    checkid = "headercheck" + counth;
                        //    comboid = "headercombo" + counth;
                        //    lengthid = "headerlength" + counth;
                        //    var ischeck = "";
                        //    if (req == true) {
                        //        ischeck = "checked"
                        //    }
                        //    else {
                        //        ischeck = "unchecked"
                        //    }
                        //    $('#header-table tbody').append('<tr id="tr' + counth + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + counth + '"></button></td>' +
                        //        '<td><select class="form-control select2 headercombo" style="width: 100%;" id="' + comboid + '"></select></td>' +
                        //        '<td><input type="text" class="form-control headerinput" placeholder="Insert Field" id="' + inputid + '" value = "' + field + '"></td>' +
                        //        '<td><select class="form-control select2 headertype" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                        //        '<td> <input type="text" class="form-control headerlength" placeholder="Insert Length" id="' + lengthid + '" value = "' + len + '"></td>' +
                        //        '<td><input type="checkbox" class="iCheck-helper headercheck" id="' + checkid + '" ' + ischeck + ' /></</td></tr>');

                        //    $('#' + comboid + '').addClass("select2");

                        //    headarrhanafield.push(comboid);
                        //    headarrdata.push(datatypeid);
                        //    //console.log(headarrhanafield);
                        //}

                        //$.post('HanaTablePopulate', { HanaTable: HanaTable, SAPCode: SAPCode, HeaderTable: headertable, RowTable: rowtable }).done(result => {

                        //    for (var i = 0; i < headarrhanafield.length; i++) {

                        //        for (var x in result.HeaderHanaFields) {
                        //            $('#' + headarrhanafield[i] + '').append($('<option>', {
                        //                value: result.HeaderHanaFields[x].ColumnName,
                        //                text: result.HeaderHanaFields[x].ColumnName
                        //            }));
                        //        }
                        //        $('#' + headarrhanafield[i] + '').val(sapfield[i]);
                        //        $('#' + headarrhanafield[i] + '').trigger('change');
                        //    }

                        //    for (var i = 0; i < headarrdata.length; i++) {
                        //        for (var x in result.DataTypes) {
                        //            $('#' + headarrdata[i] + '').append($('<option>', {
                        //                value: result.DataTypes[x].DataType,
                        //                text: result.DataTypes[x].DataType
                        //            }));
                        //        }
                        //        $('#' + headarrdata[i] + '').val(headdataval[i]);
                        //        $('#' + headarrdata[i] + '').trigger('change');
                        //    }

                        //    for (var i = 0; i < rowarrhanafield.length; i++) {

                        //        for (var x in result.RowHanaFields) {
                        //            $('#' + rowarrhanafield[i] + '').append($('<option>', {
                        //                value: result.RowHanaFields[x].ColumnName,
                        //                text: result.RowHanaFields[x].ColumnName
                        //            }));
                        //        }
                        //        $('#' + rowarrhanafield[i] + '').val(rowsapfield[i]);
                        //        $('#' + rowarrhanafield[i] + '').trigger('change');
                        //    }

                        //    for (var i = 0; i < rowarrdata.length; i++) {

                        //        for (var x in result.DataTypes) {
                        //            $('#' + rowarrdata[i] + '').append($('<option>', {
                        //                value: result.DataTypes[x].DataType,
                        //                text: result.DataTypes[x].DataType
                        //            }));
                        //        }
                        //        $('#' + rowarrdata[i] + '').val(rowdataval[i]);
                        //        $('#' + rowarrdata[i] + '').trigger('change');
                        //    }

                        //})
                        //#endregion
                        //add mapping
                    })
                    $(".modal").modal('hide');
                })


                .on('click', 'button[one-datamapid-search]', function () {

                    var id = $(this).attr('one-datamapid-search');

                    $.post('OPSFindFile', { Id: id }).done(result => {

                        opsdt.clear().draw()
                        $.each(result.OPSFileView, function (index, file) {

                            var ops_Filename = `${file.FileName}`
                            var ops_Filetype = `${file.FileType}`

                            opsdt.rows.add([{ FileName:ops_Filename,FileType:ops_Filetype}]);

                            opsdt.draw();
                        });
                    })



                })

                .on('click', 'button[one-data-mapid]', function () {
                    table_array = [];
                    createorupdate = 1;
                    
                    var id = $(this).attr('one-data-mapid');


                    $("#add-table").attr("data-opsmapid", id)
                    $("#one-field-code").prop("disabled", true);
                    Mapid = id;

                    $.post('opsFindMap', { Id: id }).done(result => {

                        $('#one-field-tabs').empty();
                        //console.log(result);
                        //console.log(result.OPSTableView);

                        $("#one-field-code").val(result.OPSFieldMapDetails.MapCode);
                        $("#one-field-name").val(result.OPSFieldMapDetails.MapName);
                        $("#one-field-sap").val(result.OPSFieldMapDetails.SAPCode);
                        $("#one-field-module").val(result.OPSFieldMapDetails.ModuleName).trigger('change');
                        (async function () {

                            var tabCount = 1;
                            isActive = true

                        for (var item in result.OPSTableView) {
                            //console.log(result.OPSTableView[item].SAPTableNameModule)
                            var filename = result.OPSTableView[item].FileName;
                            var headerstart = result.OPSTableView[item].SourceColumnName;
                            var rowstart = result.OPSTableView[item].SourceRowData;
                            var excelsheetname = result.OPSTableView[item].SourceTableName;
                            

                            var key = result.OPSTableView[item].SAPTableNameModule;
                            $('#one-field-tabs').append(`<li class="row-append"> <a href="#one_tab_${item}" data-toggle="tab"><button type="button" class="btn-info fa fa-trash" data-delete=${key}> </button>  ${key}</a> </li>`);
                            $('#one-field-path').attr('one-data-file-pathid', result.OPSTableView[item].PathId.toString()).trigger('change');
                          
                            var data = {
                                "PathId": result.OPSTableView[item].PathId,
                                "saptable": result.OPSTableView[item].SAPTableNameModule,
                                "filename": result.OPSTableView[item].FileName.toString().toLowerCase(),
                                "fieldpath": result.OPSTableView[item].Pathcode,
                                "headername": result.OPSTableView[item].SourceColumnName,
                                "rowname": result.OPSTableView[item].SourceRowData,
                                "filetype": result.OPSTableView[item].FileType,
                                "sheetname": result.OPSTableView[item].SourceTableName
                            }

                            table_array.push(data)

                            $(`#one-field-row-tbody-${key}`).empty();
                            $(`#one-field-row-table-${key} tbody tr`).remove();
                            $(`#one-field-tab-content`).append(`
                                     <div class="tab-pane ${isActive} row-append" id="one_tab_${item}">
                                        <div class="box">
                                            <div class="box-header">
                                                <h3 class="box-title">
                                                    <i class="fa fa-database"></i> Table Name :  <span id="field-row-tblname_${key}">${key}</span>
                                                </h3>

                                            </div>
                                            <div class="box-body">
                                                <table id="one-field-row-table-${key}" one-data-tablename="${key}" class="table one-field-table-rows table-fields table-bordered table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th>Source Field</th>
                                                            <th>Destination SAP Field</th>
                                                            <th>Data Type</th>
                                                            <th>Conditional Value</th>
                                                            <th>isKeyValue</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody class="one-fieldrow-tbody" data-tablesap="" id="one-field-row-tbody-${key}"></tbody>
                                                </table>
                                            </div>
                                            <div class="box-footer">
                                                <button type="button" class="btn btn-primary newfield" style="float: right;" data-index="0"  one-data-field-tablename="${key}" id="field-add-rowfield-${key}">New Field</button>
                                            </div>
                                        </div>
                                    </div>
                                `);


                            //$(`#one-field-row-table-${key} tbody tr`).remove();

                            var countr = 1;
                            //var FieldSetView = result.FieldSetView.filter(x => x.SAPTableNameModule)
                            for (var data in result.FieldSetView) {

                                if (key === result.FieldSetView[data].SAPTableNameModule) {
                                    //console.log("TABLE NAME");
                                    //console.log(key);
                                    const tablename = key;
                                    
                                    var sourcefield = result.FieldSetView[data].SourceField;
                                    var destinationfield = result.FieldSetView[data].DestinationField;

                                    var conditionfield = result.FieldSetView[data].ConditionalQuery;
                                    var isRequired = result.FieldSetView[data].IsRequired;
                                    conditionid = "one-field-rowcondition_" + tablename + countr;

                                    datatypeid = "one-field-rowdata_" + tablename + countr;
                                    checkid = "one-field-rowcheck_" + tablename + countr;
                                    ops_filecomboid = "one-field-rowcombo_" + tablename + countr;
                                    ops_fileapicombo = "one-field-rowapicombo_" + tablename + countr;
                                    $(`#one-field-row-table-${key} tbody`).append('<tr id=""><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "" ></button></td>' +
                                        '<td><select class="form-control select2 ops-field-rowcombo" name ="" one-data-visorder="' + result.FieldSetView[data].VisOrder + '" style="width: 100%;" id="' + ops_filecomboid + '"></select></td>' +
                                '<td><select class="form-control select2 ops-field-apicombo" name="" style="width: 100%;" id="' + ops_fileapicombo + '" data-table="' + tablename + '"></select></td>' +
                                '<td><input type="text" class="form-control ops-field-rowdatatype" placeholder="Data Type" id="' + datatypeid + '" readonly></td>' +
                                        '<td><input type="text" class="form-control ops-field-rowcondition" placeholder="Value" id="' + conditionid + '" readonly ></td>' +
                                '<td style="display:flex; justify-content:center; align-items:center;"><input type="checkbox" style="transform: scale(2.0);" class="iCheck-helper headercheck" id="' + checkid + '" /></</td>' +
                                '</tr > ');

                                    await GetData(tablename,sourcefield, destinationfield, conditionfield, isRequired);
                                    
                                     countr++;
                                   
                                }//end of if key


                            }//end of for var data

                            
                            async function GetData(tablename, sourcefield, destinationfield, conditionfield, isRequired) {
                               
                                const tablenamekey = tablename;

                                $('#preloader-modal').modal('show');
                                await $.post(`/linkbox/api/onegetexcelcolumn?FileName=${filename}&HeadStart=${headerstart}&RowStart=${rowstart}&SheetName=${excelsheetname}`).done(result => {

                                    // console.log(result);
                                    let sourceJson = result[excelsheetname][0];
                                   


                                    //Source API

                                    //$(`#${ops_filecomboid}`).append(`<option value="Query">Query</option>`);
                                    //$(`#${ops_filecomboid}`).append(`<option value="Static Value">Static Value</option>`);

                                    if (sourcefield ==='Query' || sourcefield ==='Static Value') {
                                        Object.entries(sourceJson).forEach(([keyr, value]) => {


                                            $(`#${ops_filecomboid}`).append(`<option value="${keyr}">${keyr}</option>`);

                                        })


                                        if (sourcefield === 'Query') {
                                            //debugger;
                                            $(`#${ops_filecomboid}`).append(`<option value="Query" selected>Query</option>`);
                                            $(`#${ops_filecomboid}`).append(`<option value="Static Value">Static Value</option>`);
                                        }

                                        if (sourcefield === 'Static Value') {
                                           // debugger;
                                            $(`#${ops_filecomboid}`).append(`<option value="Query">Query</option>`);
                                            $(`#${ops_filecomboid}`).append(`<option value="Static Value" selected>Static Value</option>`);

                                        }

                                    } else {
                                        
                                        
                                        $(`#${ops_filecomboid}`).append(`<option value="Query">Query</option>`);
                                        $(`#${ops_filecomboid}`).append(`<option value="Static Value">Static Value</option>`);

                                        Object.entries(sourceJson).forEach(([keyr, value]) => {

                                            if (keyr == sourcefield) {
                                                $(`#${ops_filecomboid}`).append(`<option value="${keyr}" selected>${keyr}</option>`);

                                            }
                                            else {
                                                $(`#${ops_filecomboid}`).append(`<option value="${keyr}">${keyr}</option>`);
                                            }


                                        })
                                       
                                    }
                                  
                                 

                                    //mas okay??? }
                                 
                                //for (const [keyr,] of Object.entries(destinationJson.Rows[tablenamekey])) {
                                //        if (keyr == destinationfield) {
                                //            $(`#${ops_fileapicombo}`).append(`<option value="${keyr}" selected>${keyr}</option>`);
                                //            $('.ops-field-apicombo').trigger('change');
                                           
                                //        } else {
                                //            $(`#${ops_fileapicombo}`).append(`<option value="${keyr}">${keyr}</option>`);
                                //        }
                                //    }


                                 

                                        $(`#${conditionid}`).val(conditionfield);
                                  
                                  

                                    if (isRequired) {
                                        $(`#${checkid}`).prop('checked', true);
                                    } else {
                                        $(`#${checkid}`).prop('checked', false);
                                    }

                                    //$(this).prop('disabled', false);
                                  
                                }); // end of post getexcelcolumn

                               
                            }///end of Get Data function Fine Line

                      

                            $('.select2').select2();

                            }//end of for item



                            
                            function delayedFunction() {
                             
                                for (var item in result.OPSTableView) {

                                    //var filename = result.OPSTableView[item].FileName;
                                    var keysa = result.OPSTableView[item].SAPTableNameModule;
                                    //console.log("FILENAME : " + filename)
                                   
                                    //console.log(keysa);

                                    //$("#one-field-filename").val(filename).trigger();
                                    var excountr = 1
                                    for (var data in result.FieldSetView) {

                                        if (keysa === result.FieldSetView[data].SAPTableNameModule) {
                                            //console.log("TABLE NAME");
                                            //console.log(key);
                                            const tablename = keysa;

                                            var sourcefield = result.FieldSetView[data].SourceField;
                                            var destinationfield = result.FieldSetView[data].DestinationField;
                                            var isRequired = result.FieldSetView[data].IsRequired;
                                            var conditionfield = result.FieldSetView[data].ConditionalQuery;


                                            checkid = "one-field-rowcheck_" + tablename + excountr;
                                            ops_filecomboid = "one-field-rowcombo_" + tablename + excountr;

                                            ops_fileapicombo = "one-field-rowapicombo_" + tablename + excountr;
                                            conditionid = "one-field-rowcondition_" + tablename + excountr;


                                            //if (conditionfield != null) {
                                            //    $(`#${conditionid}`).prop("readonly", false);
                                            //    $(`#${conditionid}`).val(conditionfield);
                                            //    //$(this).closest('tr').find('.ops-field-rowcondition').prop("readonly", false);

                                            //}


                                            if ($("#" + ops_fileapicombo).val() === null) {
                                                // await GetData(tablename, sourcefield, destinationfield, conditionfield, isRequired);

                                                //debugger;

                                                for (const [keyr,] of Object.entries(destinationJson.Rows[keysa])) {
                                                    if (keyr == destinationfield) {
                                                        $(`#${ops_fileapicombo}`).append(`<option value="${keyr}" selected>${keyr}</option>`);
                                                        $('.ops-field-apicombo').trigger('change');
                                                        //console.log(keyr);
                                                        
                                                    } else {
                                                        $(`#${ops_fileapicombo}`).append(`<option value="${keyr}">${keyr}</option>`);
                                                    }
                                                    //console.log(value);
                                                }//end of for


                                                //if (conditionfield != " " || conditionfield != null) {
                                                //    debugger;
                                                //    $(`#${conditionid}`).prop("readonly", false);

                                                $(`#${conditionid}`).val(conditionfield);
                                                //if ($(`#${conditionid}`).val(conditionfield) != null || $(`#${conditionid}`).val(conditionfield) != "") {

                                                //    $(this).closest('tr').find('.ops-field-rowcondition').prop("readonly",false);

                                                //}
                                                //}

                                                //    $(`#${conditionid}`).prop("readonly", false);
                                                if (isRequired) {
                                                    $(`#${checkid}`).prop('checked', true);
                                                } else {
                                                    $(`#${checkid}`).prop('checked', false);
                                                }
                                            }

                                            excountr++;

                                        }//end of if key


                                    }//end of for var data

                                    $('#preloader-modal').modal('hide');
                                }//end of item loop


                                $(".ops-field-rowcondition").each(function () {
                                    var value = $(this).val();
                                    if (value != "") {
                                        $(this).closest('tr').find('.ops-field-rowcondition').prop("readonly", false);

                                    }

                                    // Do something with the 'value' variable here
                                });
                              
                            }//end of delayed function

                            
                            setTimeout(delayedFunction, 5000);
                           


                        })();//end of async funcction

                        //$('#one-field-module').prop('disabled', true);
                        $('#one-field-tabs li:first-child a').tab('show');
                        //console.log("TABLE ARRAY : ")
                        //console.log(table_array)

                })

                        

                    $(".modal").modal('hide');

                })

                


                .on('click', 'button[data-db-db-map]', async function () {
                })

                .on('click', 'button[data-db-db-mapid]', async function () {
                    createorupdate = 1;
                    var id = $(this).data('db-db-mapid');
                    Mapid = id;

                    //for row
                    count = 0;
                    rowinputid = 0;
                    rowdatatypeid = 0;
                    rowcheckid = 0;
                    rowcomboid = 0;
                    rowlengthid = 0;
                    counth = 0;
                    inputid = 0;
                    datatypeid = 0;
                    checkid = 0;
                    comboid = 0;
                    lengthid = 0;
                    var HanaTable = "";
                    var SAPCode = "";
                    rowarrhanafield = [];
                    rowarrdata = [];
                    headarrhanafield = [];
                    headarrdata = [];
                    headdataval = [], rowdataval = [], sapfield = [], rowsapfield = [];
                    $('#db-db-row-tablename').val("");
                    $('#db-db-header-tablename').val("");
                    $('#db-db-row-table tbody').html("");
                    $('#db-db-header-table tbody').html("");
                    console.log(createorupdate)
                    await $.post('FindMap', { Id: id }).done(result => {
                        console.log(result);
                        for (var x in result.FieldView) {
                            var type = result.FieldView[x].FileType;
                            //var arr = type.split(",");
                            $('#db-db-field-code').val(result.FieldView[x].MapCode);
                            $('#db-db-field-name').val(result.FieldView[x].MapName);
                            $('#db-db-field-addon').val(result.FieldView[x].AddonCode);
                            $('#db-db-field-otheraddon').val(result.FieldView[x].SAPCode);
                            //$('#field-path').val(result.FieldView[x].PathCode);
                            //$('#field-headerworksheet').val(result.FieldView[x].HeaderWorksheet);
                            //$('#field-rowworksheet').val(result.FieldView[x].RowWorksheet);
                            //$('#field-filename').val(result.FieldView[x].FileName);
                            //$('#field-filetype').val(arr);
                            //$('#field-filetype').trigger('change');
                            $('#db-db-field-module').val(result.FieldView[x].ModuleName);
                            //$('#db-db-field-module').find(':selected').data('htable',result.FieldView[x].ModuleName);

                            //HanaTable = $("#db-db-field-module").val();
                            //SAPCode = $("#db-db-field-otheraddon").val();
                            //SAPCode = $("#field-sap").val();
                        }
                        $("#db-db-modal-field").modal('hide');
                        $('#db-db-field-module').change();

                        //var headertable = $("#db-db-header-tablename").find(':selected').data('htable');
                        //var rowtable = $("#db-db-header-tablename").find(':selected').data('rtable');
                        //console.log(headarrhanafield);
                        //for (var x in result.Rows) {

                        //    var req = result.Rows[x].IsRequired;
                        //    var len = result.Rows[x].Length;
                        //    var field = result.Rows[x].AddonRowField;
                        //    rowsapfield.push(result.Rows[x].SAPRowFieldId);
                        //    rowdataval.push(result.Rows[x].DataType);
                        //    $('#db-db-row-tablename').val(result.Rows[0].TableName);
                        //    //$('#row-tablename').val(result.Rows[0].TableName);
                        //    count = count + 1;
                        //    rowinputid = "rowinput" + count;
                        //    rowdatatypeid = "rowdata" + count;
                        //    rowcheckid = "rowcheck" + count;
                        //    rowcomboid = "rowcombo" + count;
                        //    rowlengthid = "rowlength" + count;

                        //    var ischeck = "";
                        //    if (req == true) {
                        //        ischeck = "checked"
                        //    }
                        //    else {
                        //        ischeck = "unchecked"
                        //    }
                        //    $('#row-table tbody').append('<tr id="trr' + count + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-rowid = "trr' + count + '" ></button></td>' +
                        //        '<td><select class="form-control select2 rowcombo" style="width: 100%;" id="' + rowcomboid + '"></select></td>' +
                        //        '<td><input type="text" class="form-control rowinput" placeholder="Insert Field" id="' + rowinputid + '" value = "' + field + '" ></td> ' +
                        //        '<td><select class="form-control select2 rowtype" style="width: 100%;" id="' + rowdatatypeid + '" ></select></td>' +
                        //        '<td><input type="text" class="form-control rowlength" placeholder="Insert Length" id="' + rowlengthid + '" value = "' + len + '" ></td>' +
                        //        '<td><input type="checkbox" class="iCheck-helper rowcheck" id="' + rowcheckid + '" ' + ischeck + ' /></</td ></tr > ');

                        //    $('#' + rowcomboid + '').addClass("select2");

                        //    rowarrhanafield.push(rowcomboid);
                        //    rowarrdata.push(rowdatatypeid);
                        //}

                        //for (var x in result.Headers) {
                        //    var req = result.Headers[x].IsRequired;
                        //    var len = result.Headers[x].Length;
                        //    sapfield.push(result.Headers[x].SAPHeaderFieldId);
                        //    var field = result.Headers[x].AddonHeaderField;
                        //    headdataval.push(result.Headers[x].DataType);
                        //    $('#header-tablename').val(result.Headers[0].TableName);
                        //    counth = counth + 1;
                        //    inputid = "headerinput" + counth;
                        //    datatypeid = "headerdata" + counth;
                        //    checkid = "headercheck" + counth;
                        //    comboid = "headercombo" + counth;
                        //    lengthid = "headerlength" + counth;
                        //    var ischeck = "";
                        //    if (req == true) {
                        //        ischeck = "checked"
                        //    }
                        //    else {
                        //        ischeck = "unchecked"
                        //    }
                        //    $('#header-table tbody').append('<tr id="tr' + counth + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + counth + '"></button></td>' +
                        //        '<td><select class="form-control select2 headercombo" style="width: 100%;" id="' + comboid + '"></select></td>' +
                        //        '<td><input type="text" class="form-control headerinput" placeholder="Insert Field" id="' + inputid + '" value = "' + field + '"></td>' +
                        //        '<td><select class="form-control select2 headertype" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                        //        '<td> <input type="text" class="form-control headerlength" placeholder="Insert Length" id="' + lengthid + '" value = "' + len + '"></td>' +
                        //        '<td><input type="checkbox" class="iCheck-helper headercheck" id="' + checkid + '" ' + ischeck + ' /></</td></tr>');

                        //    $('#' + comboid + '').addClass("select2");

                        //    headarrhanafield.push(comboid);
                        //    headarrdata.push(datatypeid);
                        //    console.log(headarrhanafield);
                        //}

                        //$.post('HanaTablePopulate', { HanaTable: HanaTable, SAPCode: SAPCode, HeaderTable: headertable, RowTable: rowtable }).done(result => {

                        //    for (var i = 0; i < headarrhanafield.length; i++) {

                        //        for (var x in result.HeaderHanaFields) {
                        //            $('#' + headarrhanafield[i] + '').append($('<option>', {
                        //                value: result.HeaderHanaFields[x].ColumnName,
                        //                text: result.HeaderHanaFields[x].ColumnName
                        //            }));
                        //        }
                        //        $('#' + headarrhanafield[i] + '').val(sapfield[i]);
                        //        $('#' + headarrhanafield[i] + '').trigger('change');
                        //    }

                        //    for (var i = 0; i < headarrdata.length; i++) {
                        //        for (var x in result.DataTypes) {
                        //            $('#' + headarrdata[i] + '').append($('<option>', {
                        //                value: result.DataTypes[x].DataType,
                        //                text: result.DataTypes[x].DataType
                        //            }));
                        //        }
                        //        $('#' + headarrdata[i] + '').val(headdataval[i]);
                        //        $('#' + headarrdata[i] + '').trigger('change');
                        //    }

                        //    for (var i = 0; i < rowarrhanafield.length; i++) {

                        //        for (var x in result.RowHanaFields) {
                        //            $('#' + rowarrhanafield[i] + '').append($('<option>', {
                        //                value: result.RowHanaFields[x].ColumnName,
                        //                text: result.RowHanaFields[x].ColumnName
                        //            }));
                        //        }
                        //        $('#' + rowarrhanafield[i] + '').val(rowsapfield[i]);
                        //        $('#' + rowarrhanafield[i] + '').trigger('change');
                        //    }

                        //    for (var i = 0; i < rowarrdata.length; i++) {

                        //        for (var x in result.DataTypes) {
                        //            $('#' + rowarrdata[i] + '').append($('<option>', {
                        //                value: result.DataTypes[x].DataType,
                        //                text: result.DataTypes[x].DataType
                        //            }));
                        //        }
                        //        $('#' + rowarrdata[i] + '').val(rowdataval[i]);
                        //        $('#' + rowarrdata[i] + '').trigger('change');
                        //    }

                        //})
                        ////add mapping
                    })

                    //Populate Rows and Columns
                    //$('.appendremove').remove()
                    //var id = $('#db-db-field-otheraddon').val();
                    //var DBName = '';
                    //var model;
                    //var rowname = '';
                    //var module = $('#db-db-field-module').find(':selected').data('htable');
                    //await $.post('FindSAPString', { code: id }).done(result => {
                    //    for (var x in result.SAPView) {
                    //        $('#db-db-field-otheraddon').val(result.SAPView[x].SAPCode);
                    //        $('#tableheader').text(module);
                    //        SAPDBName = result.SAPView[x].SAPDBName;
                    //        //Populate Header Table
                    //        $.post('PopulateSAPDBTable', { Schema: result.SAPView[x].SAPDBName, Module: module, model: result.SAPView[x] }).done(result => {
                    //            for (var x in result.Headers) {
                    //                $('#db-db-header-table tbody').append('<tr class="appendremove"><td width="5%"></td>' +
                    //                    '<td>' + result.Headers[x].TableName + '</td>' +
                    //                    '<td>' + result.Headers[x].DataType + '</td>' +
                    //                    '<td>' + result.Headers[x].Length + '</td></tr>');
                    //            }
                    //        })
                    //        $('.nav-tabs a[href="#db-tab_1"]').tab('show');
                    //        var tabid = "";
                    //        //Populate Row Table
                    //        $.post('PopulateSAPDBTableRow', { Schema: result.SAPView[x].SAPDBName, Module: module, model: result.SAPView[x] }).done(result => {
                    //            for (var x in result.Headers) {
                    //                if (rowname != result.Headers[x].TableName) {
                    //                    tabid = result.Headers[x].TableName + result.Headers[x].SAPHeaderFieldId;
                    //                    $('#tabletabs').append('<li class="appendremove"><a href="#' + tabid + '" data-toggle="tab">' + result.Headers[x].TableName + '</a></li>');
                    //                    rowname = result.Headers[x].TableName;
                    //                }
                    //                else {
                    //                    $('#tabletabcontent').append(
                    //                        '<div class="tab-pane appendremove" id="' + tabid + '" >'
                    //                        + '<div class="box">'
                    //                        + '<div class="box-header">'
                    //                        + '<h3 class="box-title">'
                    //                        + '<i class="fa fa-database"></i> Table Name :'
                    //                        + '</h3>'
                    //                        + '<input type="text" placeholder="Table Name" id="db-db-header-tablename">'
                    //                        + '</div>'
                    //                        + '<div class="box-body">'
                    //                        + '<table id="db-db-' + tabid + '-table" class="table table-fields table-bordered table-striped">'
                    //                        + '<thead>'
                    //                        + '<tr>'
                    //                        + '<th></th>'
                    //                        + '<th>Table Name</th>'
                    //                        + '<th>Data Type</th>'
                    //                        + '<th>Length</th>'
                    //                        + '</tr>'
                    //                        + '</thead>'
                    //                        + '<tbody></tbody>'
                    //                        + '</table>'
                    //                        + '</div>'
                    //                        + '<div class="box-footer">'
                    //                        + '<button type="submit" class="btn margin btn-primary" style="float: right;" id="db-db-field-save">Save</button>'
                    //                        + '</div>'
                    //                        + '</div>'
                    //                        + '</div>'
                    //                    );
                    //                }
                    //                $('#db-db-' + tabid + '-table tbody').append('<tr><td width="5%"></td>' +
                    //                    '<td>' + result.Headers[x].SAPHeaderFieldId + '</td>' +
                    //                    '<td>' + result.Headers[x].DataType + '</td>' +
                    //                    '<td>' + result.Headers[x].Length + '</td></tr>');
                    //            }
                    //        })
                    //    }

                    //})

                    //$("#db-db-modal-field").modal('hide');
                })

                .on('click', 'button[data-file-api-mapid]', function () {
                    createorupdate = 1;
                    var id = $(this).data('file-api-mapid');
                    Mapid = id;

                    //for row
                    count = 0;
                    rowinputid = 0;
                    rowdatatypeid = 0;
                    rowcheckid = 0;
                    rowcomboid = 0;
                    rowlengthid = 0;
                    counth = 0;
                    inputid = 0;
                    datatypeid = 0;
                    checkid = 0;
                    comboid = 0;
                    lengthid = 0;
                    var HanaTable = "";
                    var SAPCode = "", apicode = "";
                    rowarrhanafield = []; rowarrhanafield = [];
                    rowarrdata = [];
                    headarrhanafield = []; headarrapifield = [];
                    headarrdata = [];
                    headdataval = [], rowdataval = [], apiheaderfield = [], sapfield = [], rowsapfield = [], apirowfield = [];
                    $('#file-api-row-tablename').val("");
                    $('#file-api-header-tablename').val("");
                    $('#file-api-row-table tbody').html("");
                    $('#file-api-header-table tbody').html("");
                    console.log(createorupdate)
                    $.post('FindMap', { Id: id }).done(result => {

                        for (var x in result.FieldView) {
                            var type = result.FieldView[x].FileType;
                            var arr = type.split(",");
                            $('#file-api-field-code').val(result.FieldView[x].MapCode);
                            $('#file-api-field-name').val(result.FieldView[x].MapName);
                            $('#file-api-field-addon').val(result.FieldView[x].AddonCode);
                            $('#file-api-field-apicode').val(result.FieldView[x].APICode);
                            $('#file-api-field-path').val(result.FieldView[x].PathCode);
                            $('#file-api-field-headerworksheet').val(result.FieldView[x].HeaderWorksheet);
                            $('#file-api-field-rowworksheet').val(result.FieldView[x].RowWorksheet);
                            //$('#file-api-field-filename').val(result.FieldView[x].FileName);
                            $('#label-file-name').html('Sample File: ' + result.FieldView[x].FileName);
                            $('#label-file-name').data('label-file-name', result.FieldView[x].FileName);
                            $('#label-file-name').attr('data-label-file-name', result.FieldView[x].FileName);
                            $('#file-api-field-filename').val('');
                            $('#file-api-field-filetype').val(arr);
                            $('#file-api-field-filetype').trigger('change');
                            HanaTable = result.FieldView[x].FileName;
                            SAPCode = $("#file-api-field-apicode").val();
                            apicode = $("#file-api-field-apicode").val();
                        }

                        var headertable = $("#file-api-headertablename").find(':selected').data('htable');
                        var rowtable = $("#file-api-headertablename").find(':selected').data('rtable');

                        for (var x in result.Rows) {

                            var req = result.Rows[x].IsRequired;
                            var len = result.Rows[x].Length;
                            var field = result.Rows[x].AddonRowField;
                            rowsapfield.push(result.Rows[x].SAPRowFieldId);
                            rowdataval.push(result.Rows[x].DataType);
                            apirowfield.push(result.Rows[x].AddonRowField);
                            $('#file-api-row-tablename').val(result.Rows[0].TableName);
                            count = count + 1;
                            rowinputid = "file-rowinput" + count;
                            rowdatatypeid = "file-rowdata" + count;
                            rowcheckid = "file-rowcheck" + count;
                            rowcomboid = "file-rowcombo" + count;
                            rowlengthid = "file-rowlength" + count;
                            rowcomboid = "file-rowcombo" + count;
                            apirowcombo = "file-apirowcombo" + count;

                            var ischeck = "";
                            if (req == true) {
                                ischeck = "checked"
                            }
                            else {
                                ischeck = "unchecked"
                            }
                            $('#file-api-row-table tbody').append('<tr id="trr' + count + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-rowid = "trr' + count + '" ></button></td>' +
                                '<td><select class="form-control select2 file-rowcombo" style="width: 100%;" id="' + rowcomboid + '"></select></td>' +
                                '<td><select class="form-control select2 file-apirowcombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + apirowcombo + '"></select></td>' +
                                '<td><select class="form-control select2 file-rowtype" style="width: 100%;" id="' + rowdatatypeid + '" ></select></td>' +
                                '<td><input type="text" class="form-control file-rowlength" placeholder="Insert Length" id="' + rowlengthid + '" value = "' + len + '" ></td>' +
                                '<td><input type="checkbox" class="iCheck-helper file-rowcheck" id="' + rowcheckid + '" ' + ischeck + ' /></</td ></tr > ');

                            $('#' + rowcomboid + '').addClass("select2");
                            $('#' + apirowcombo + '').addClass("select2");

                            rowarrhanafield.push(rowcomboid);
                            rowarrdata.push(rowdatatypeid);
                        }

                        for (var x in result.Headers) {
                            var req = result.Headers[x].IsRequired;
                            var len = result.Headers[x].Length;
                            sapfield.push(result.Headers[x].SAPHeaderFieldId);
                            var field = result.Headers[x].AddonHeaderField;
                            headdataval.push(result.Headers[x].DataType);
                            apiheaderfield.push(result.Headers[x].AddonHeaderField);
                            $('#file-api-header-tablename').val(result.Headers[0].TableName);
                            counth = counth + 1;
                            inputid = "file-headerinput" + counth;
                            datatypeid = "file-headerdata" + counth;
                            checkid = "file-headercheck" + counth;
                            comboid = "file-headercombo" + counth;
                            apicombo = "file-apicombo" + counth;
                            lengthid = "file-headerlength" + counth;
                            var ischeck = "";
                            if (req == true) {
                                ischeck = "checked"
                            }
                            else {
                                ischeck = "unchecked"
                            }
                            $('#file-api-header-table tbody').append('<tr id="tr' + counth + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + counth + '"></button></td>' +
                                '<td><select class="form-control select2 file-headercombo" style="width: 100%;" id="' + comboid + '"></select></td>' +
                                '<td><select class="form-control select2 file-apicombo" name ="' + datatypeid + '" style="width: 100%;" id="' + apicombo + '"></select></td>' +
                                //'<td><input type="text" class="form-control headerinput" placeholder="Insert Field" id="' + inputid + '" value = "' + field + '"></td>' +
                                '<td><select class="form-control select2 file-headertype" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                                '<td> <input type="text" class="form-control file-headerlength" placeholder="Insert Length" id="' + lengthid + '" value = "' + len + '"></td>' +
                                '<td><input type="checkbox" class="iCheck-helper file-headercheck" id="' + checkid + '" ' + ischeck + ' /></</td></tr>');

                            $('#' + comboid + '').addClass("select2");
                            $('#' + apicombo + '').addClass("select2");

                            headarrhanafield.push(comboid);
                            headarrapifield.push(apicombo);
                            headarrdata.push(datatypeid);
                        }
                        console.log(result.HeaderHanaFields);
                        console.log(1);
                        console.log(headarrhanafield);
                        $.post('PopulateFileAPI', { FileName: HanaTable, SAPCode: SAPCode, HeaderTable: headertable, RowTable: rowtable, APICode: apicode }).done(result => {

                            for (var i = 0; i < headarrhanafield.length; i++) {
                                for (var x in result.HeaderHanaFields) {
                                    $('#' + headarrhanafield[i] + '').append($('<option>', {
                                        value: result.HeaderHanaFields[x].ColumnName,
                                        text: result.HeaderHanaFields[x].ColumnName
                                    }));
                                }
                                $('#' + headarrhanafield[i] + '').val(sapfield[i]);
                                $('#' + headarrhanafield[i] + '').trigger('change');

                                for (var x in result.HeaderAPIFields) {
                                    $('#' + headarrapifield[i] + '').append($('<option>', {
                                        value: result.HeaderAPIFields[x].ColumnName,
                                        text: result.HeaderAPIFields[x].ColumnName
                                    }));
                                }

                                $('#' + headarrapifield[i] + '').val(apiheaderfield[i]);
                                $('#' + headarrapifield[i] + '').trigger('change');
                            }


                            for (var i = 0; i < headarrdata.length; i++) {
                                for (var x in result.DataTypes) {
                                    $('#' + headarrdata[i] + '').append($('<option>', {
                                        value: result.DataTypes[x].DataType,
                                        text: result.DataTypes[x].DataType
                                    }));
                                }
                                $('#' + headarrdata[i] + '').val(headdataval[i]);
                                $('#' + headarrdata[i] + '').trigger('change');
                            }



                            //for (var i = 0; i < rowarrhanafield.length; i++) {
                            //    for (var x in result.RowHanaFields) {
                            //        $('#' + rowarrhanafield[i] + '').append($('<option>', {
                            //            value: result.RowHanaFields[x].ColumnName,
                            //            text: result.RowHanaFields[x].ColumnName
                            //        }));
                            //    }
                            //    $('#' + rowarrhanafield[i] + '').val(rowsapfield[i]);
                            //    $('#' + rowarrhanafield[i] + '').trigger('change');

                            //    for (var x in result.RowAPIFields) {
                            //        $('#' + rowarrapifield[i] + '').append($('<option>', {
                            //            value: result.RowAPIFields[x].ColumnName,
                            //            text: result.RowAPIFields[x].ColumnName
                            //        }));
                            //    }
                            //    console.log(apirowfield[i]);
                            //    $('#' + rowarrapifield[i] + '').val(apirowfield[i]);
                            //    $('#' + rowarrapifield[i] + '').trigger('change');
                            //}

                            //for (var i = 0; i < rowarrdata.length; i++) {

                            //    for (var x in result.DataTypes) {
                            //        $('#' + rowarrdata[i] + '').append($('<option>', {
                            //            value: result.DataTypes[x].DataType,
                            //            text: result.DataTypes[x].DataType
                            //        }));
                            //    }
                            //    $('#' + rowarrdata[i] + '').val(rowdataval[i]);
                            //    $('#' + rowarrdata[i] + '').trigger('change');
                            //}

                        })

                    })
                    $(".modal").modal('hide');
                })

                .on('click', 'button[data-api-mapid]', function () {
                    createorupdate = 1;
                    var id = $(this).data('api-mapid');
                    Mapid = id;
                    $('#api-field-code').data('api-mapid', id);
                    $('#api-field-code').attr('api-mapid', id);

                    //for row
                    count = 0;
                    rowinputid = 0;
                    rowdatatypeid = 0;
                    rowcheckid = 0;
                    rowcomboid = 0;
                    rowlengthid = 0;
                    counth = 0;
                    inputid = 0;
                    datatypeid = 0;
                    checkid = 0;
                    comboid = 0;
                    lengthid = 0;
                    var HanaTable = "";
                    var SAPCode = "";
                    rowarrhanafield = [];
                    rowarrapifield = [];
                    rowarrdata = [];
                    headarrhanafield = [];
                    headarrapifield = [];
                    headarrdata = [];
                    headdataval = [], rowdataval = [], sapfield = [], apiheaderfield = [], rowsapfield = [], apirowfield = [];
                    $('#api-param-table tbody').html("");
                    $('#api-row-tablename').val("");
                    $('#api-header-tablename').val("");
                    $('#api-row-table tbody').html("");
                    $('#api-header-table tbody').html("");
                    console.log(createorupdate);
                    $(".modal.fade").modal('hide');
                    $('#preloader-modal').modal('show');
                    $.post('FindMap', { Id: id }).done(result => {
                        var apicode = "";
                        for (var x in result.FieldView) {
                            var type = result.FieldView[x].FileType;
                            //var arr = type.split(",");
                            $('#api-field-code').val(result.FieldView[x].MapCode);
                            $('#api-field-name').val(result.FieldView[x].MapName);
                            $('#api-field-addon').val(result.FieldView[x].AddonCode);
                            $('#api-field-sap').val(result.FieldView[x].SAPCode);
                            $('#api-field-apicode').val(result.FieldView[x].APICode);
                            apicode = result.FieldView[x].APICode;
                            //$('#api-field-path').val(result.FieldView[x].PathCode);
                            //$('#api-field-headerworksheet').val(result.FieldView[x].HeaderWorksheet);
                            //$('#api-field-rowworksheet').val(result.FieldView[x].RowWorksheet);
                            $('#api-field-module').val(result.FieldView[x].ModuleName);
                            $('#api-field-module').trigger('change');
                            HanaTable = $("#api-field-module").val();
                            SAPCode = $("#api-field-sap").val();

                        }
                        var headertable = $("#api-field-module").find(':selected').data('htable');
                        var rowtable = $("#api-field-module").find(':selected').data('rtable');

                        for (var x in result.ApiParameters) {
                            var rowCount = $('#api-param-table tr').length;
                            $('#api-param-table tbody').append(
                                '<tr id="tr' + rowCount + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-paramid = "tr' + rowCount + '"></button></td>' +
                                '<td><input type="text" class="form-control api-param-key" placeholder="Insert Parameter Key" id="' + "paramkey-" + rowCount + '" value ="' + result.ApiParameters[x].APIParameterKey + '"></td>' +
                                '<td><input type="text" class="form-control api-param-value" placeholder="Insert Value" id="' + "paramval-" + rowCount + '" value = "' + result.ApiParameters[x].APIParameterValue + '"></td>'
                            )
                        }

                        //console.log(headarrhanafield);
                        for (var x in result.Rows) {

                            var req = result.Rows[x].IsRequired;
                            var len = result.Rows[x].Length;
                            var field = result.Rows[x].AddonRowField;
                            var defval = result.Rows[x].DefaultValue;
                            console.log(result.Rows[x].SAPRowFieldId);
                            rowsapfield.push(result.Rows[x].SAPRowFieldId);
                            apirowfield.push(result.Rows[x].AddonRowField);
                            rowdataval.push(result.Rows[x].DataType);
                            $('#api-row-tablename').val(result.Rows[0].TableName);
                            count = count + 1;
                            rowinputid = "api-rowinput" + count;
                            rowdatatypeid = "api-rowdata" + count;
                            rowcheckid = "api-rowcheck" + count;
                            rowcomboid = "api-rowcombo" + count;
                            apirowcombo = "api-apirowcombo" + count;
                            rowlengthid = "api-rowlength" + count;
                            rowdefvalid = "api-rowdefval" + count;
                            var ischeck = "";
                            if (req == true) {
                                ischeck = "checked"
                            }
                            else {
                                ischeck = "unchecked"
                            }
                            $('#api-row-table tbody').append('<tr id="trr' + count + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-rowid = "trr' + count + '" ></button></td>' +
                                '<td><select class="form-control select2 api-rowcombo" style="width: 100%;" id="' + rowcomboid + '"></select></td>' +
                                //'<td><input type="text" class="form-control api-rowinput" placeholder="Insert Field" id="' + rowinputid + '" value = "' + field + '"></td> ' +
                                '<td><select class="form-control select2 api-apirowcombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + apirowcombo + '"></select></td>' +
                                '<td><select class="form-control select2 api-rowtype" style="width: 100%;" id="' + rowdatatypeid + '"></select></td>' +
                                '<td><input type="text" class="form-control api-rowlength" placeholder="Insert Length" id="' + rowlengthid + '" value = "' + len + '"></td>' +
                                '<td><input type="text" class="form-control api-rowdefval" placeholder="Default Value" id="' + rowdefvalid + '" value = "' + defval + '"></td>' +
                                '<td><input type="checkbox" class="iCheck-helper rowcheck" id="' + rowcheckid + '" ' + ischeck + '/></</td ></tr > ');

                            $('#' + rowcomboid + '').addClass("select2");
                            $('#' + apirowcombo + '').addClass("select2");

                            rowarrhanafield.push(rowcomboid);
                            rowarrapifield.push(apirowcombo);
                            rowarrdata.push(rowdatatypeid);
                        }

                        for (var x in result.Headers) {
                            var req = result.Headers[x].IsRequired;
                            var len = result.Headers[x].Length;
                            sapfield.push(result.Headers[x].SAPHeaderFieldId);
                            apiheaderfield.push(result.Headers[x].AddonHeaderField);
                            var field = result.Headers[x].AddonHeaderField;
                            var defval = result.Headers[x].DefaultValue;
                            headdataval.push(result.Headers[x].DataType);
                            $('#api-header-tablename').val(result.Headers[0].TableName);
                            counth = counth + 1;
                            inputid = "api-headerinput" + counth;
                            datatypeid = "api-headerdata" + counth;
                            checkid = "api-headercheck" + counth;
                            comboid = "api-headercombo" + counth;
                            apicombo = "api-apicombo" + counth;
                            lengthid = "api-headerlength" + counth;
                            defvalid = "api-headerdefval" + counth;
                            var ischeck = "";
                            if (req == true) {
                                ischeck = "checked"
                            }
                            else {
                                ischeck = "unchecked"
                            }
                            $('#api-header-table tbody').append('<tr id="tr' + counth + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + counth + '" ></button></td>' +
                                '<td><select class="form-control select2 api-headercombo" style="width: 100%;" id="' + comboid + '"></select></td>' +
                                '<td><select class="form-control select2 api-apicombo" name ="' + datatypeid + '" style="width: 100%;" id="' + apicombo + '"></select></td>' +
                                '<td><select class="form-control select2 api-headertype" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                                '<td> <input type="text" class="form-control api-headerlength" placeholder="Insert Length" id="' + lengthid + '" value = "' + len + '"></td>' +
                                '<td> <input type="text" class="form-control api-headerdefval" placeholder="Default Value" id="' + defvalid + '" value = "' + defval + '"></td>' +
                                '<td><input type="checkbox" class="iCheck-helper headercheck" id="' + checkid + '" ' + ischeck + '/></</td></tr>');

                            $('#' + comboid + '').addClass("select2");
                            $('#' + apicombo + '').addClass("select2");

                            headarrhanafield.push(comboid);
                            headarrapifield.push(apicombo);
                            headarrdata.push(datatypeid);
                        }

                        $.post('HanaTablePopulateAPI', { HanaTable: HanaTable, SAPCode: SAPCode, HeaderTable: headertable, RowTable: rowtable, APICode: apicode, MapId: Mapid }).done(result => {

                            for (var i = 0; i < headarrhanafield.length; i++) {
                                for (var x in result.HeaderHanaFields) {
                                    $('#' + headarrhanafield[i] + '').append($('<option>', {
                                        value: result.HeaderHanaFields[x].ColumnName,
                                        text: result.HeaderHanaFields[x].ColumnName
                                    }));
                                }
                                $('#' + headarrhanafield[i] + '').val(sapfield[i]);
                                $('#' + headarrhanafield[i] + '').trigger('change');

                                for (var x in result.HeaderAPIFields) {
                                    $('#' + headarrapifield[i] + '').append($('<option>', {
                                        value: result.HeaderAPIFields[x].ColumnName,
                                        text: result.HeaderAPIFields[x].ColumnName
                                    }));
                                }

                                $('#' + headarrapifield[i] + '').val(apiheaderfield[i]);
                                $('#' + headarrapifield[i] + '').trigger('change');
                            }

                            for (var i = 0; i < headarrdata.length; i++) {
                                for (var x in result.DataTypes) {
                                    $('#' + headarrdata[i] + '').append($('<option>', {
                                        value: result.DataTypes[x].DataType,
                                        text: result.DataTypes[x].DataType
                                    }));
                                }
                                $('#' + headarrdata[i] + '').val(headdataval[i]);
                                $('#' + headarrdata[i] + '').trigger('change');
                            }



                            for (var i = 0; i < rowarrhanafield.length; i++) {
                                for (var x in result.RowHanaFields) {
                                    $('#' + rowarrhanafield[i] + '').append($('<option>', {
                                        value: result.RowHanaFields[x].ColumnName,
                                        text: result.RowHanaFields[x].ColumnName
                                    }));
                                }
                                console.log(rowsapfield[i]);
                                $('#' + rowarrhanafield[i] + '').val(rowsapfield[i]);
                                $('#' + rowarrhanafield[i] + '').trigger('change');

                                for (var x in result.RowAPIFields) {
                                    $('#' + rowarrapifield[i] + '').append($('<option>', {
                                        value: result.RowAPIFields[x].ColumnName,
                                        text: result.RowAPIFields[x].ColumnName
                                    }));
                                }
                                //console.log(apirowfield[i]);
                                $('#' + rowarrapifield[i] + '').val(apirowfield[i]);
                                $('#' + rowarrapifield[i] + '').trigger('change');
                            }

                            for (var i = 0; i < rowarrdata.length; i++) {

                                for (var x in result.DataTypes) {
                                    $('#' + rowarrdata[i] + '').append($('<option>', {
                                        value: result.DataTypes[x].DataType,
                                        text: result.DataTypes[x].DataType
                                    }));
                                }
                                $('#' + rowarrdata[i] + '').val(rowdataval[i]);
                                $('#' + rowarrdata[i] + '').trigger('change');
                            }
                            $('#preloader-modal').modal('hide');
                        })
                        //add mapping

                    })

                })

                .on('click', 'button[data-api-id]', function () {
                    var id = $(this).data('api-id');
                    console.log(id)
                    $.post('FindAPI', { Id: id }).done(result => {
                        for (var x in result.APIView) {
                            $('#api-field-apicode').val(result.APIView[x].APICode);
                        }
                    })
                    $(".modal").modal('hide');
                })

                .on('submit', '#one-map-submit', function (e) {
                    e.preventDefault();

                    
                    var sourceDestinationTb = [];
                    var one_headerval = [];
                    var check = createorupdate
                    console.log(check);
                    var MapId = Mapid;

                    var FieldCode = $('#one-field-code').val();
                    var FieldName = $('#one-field-name').val();
                    var SAPCode = $('#one-field-sap').val();
                    var Module = $('#one-field-module').val();
                    var SheetNAme = $('#one-field-sheetname').val();
 
                    //console.group("Group Label");
                    //    console.log("FieldCode : " + FieldCode)
                    //     console.log("FieldName : " + FieldName)
                    //    console.log("SAPCode : " + SAPCode)
                    //console.log("Module : " + Module)

                    //console.log(table_array)
                    //console.groupEnd();

                    table_array.forEach(function (obj) {

                        sourceDestinationTb.push([obj.saptable, obj.headername, obj.rowname, obj.fieldpath,obj.filename,obj.filetype,obj.sheetname])
                        //console.log("SAPTABLE : "+obj.saptable)
                    })

                    var rowTables = $('.one-field-table-rows');
                    var IsRequired = false;
                    var i = 0;



                    rowTables.each(function () {
                        const TableName = $(this).attr('one-data-tablename');

                        //var key = $(this).text().trim();
                        //var index = 1;
                        //console.group("TABLENAME : " + TableName)

                        $(`.one-fieldrow-tbody tr`,this).each(function () {
                            //console.log("key : "+key +" index : "+index);
                            if ($('.headercheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                            else { IsRequired = "NULL"; }

                            one_headerval.push([$('.ops-field-rowcombo', this).val(), $('.ops-field-apicombo', this).val(), $('.ops-field-rowdatatype', this).val(), $('.ops-field-rowcondition', this).val(),IsRequired,$('.ops-field-rowcombo', this).attr('one-data-visorder'),TableName]);

                            //console.log("Source Field : " + $('.ops-field-rowcombo',this).val())
                            //console.log("Destination field : " + $('.ops-field-apicombo', this).val())
                            //console.log("Data Type : " + $('.ops-field-rowdatatype', this).val())
                            //console.log("Condition : " + $('.ops-field-rowcondition', this).val())
                            //console.log("Required : " + IsRequired)



                        })
                        //console.groupEnd("END")

                    });

                    //console.log(one_headerval);

                    console.log(sourceDestinationTb);
                    swal({
                        title: 'Are you sure you want to save this Field mapping Setup?',
                        text: "",
                        type: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes'
                    }).then((result) => {
                     
                        if (result.value) {
                            $('#preloader-modal').modal('show');
                            $.post("@Url.Action("CreateOPSFiletoAPI", "Configuration")", {

                                MapId: MapId,
                                MapCode: FieldCode,
                                MapName: FieldName,
                                SAPCode: SAPCode,
                                ModuleName: Module,
                                SheetName: SheetNAme,
                                SourceDestinationTable: sourceDestinationTb,
                                HeaderVal: one_headerval,
                                Check: check,

                                //PathCode: PathCode,
                                //StoreHeaderVal: headerval,

                                //FileName: FileName,
                                //FileType: FileType,
                                //DataType: "DATAFILE",



                            }).done(function (data) {
                                $('#preloader-modal').modal('hide');
                                if (data) {
                                    swal({
                                        title: "Success!",
                                        text: "",
                                        type: "success",
                                        showConfirmButton: false,
                                        timer: 1500,
                                        onClose: () => {
                                            window.location.href = "";
                                        }
                                    });
                                }
                            }).fail(function () {
                                swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                            });
                        }
                    })


                })





                .on('submit', '#map-submit', function (e) {
                    e.preventDefault();

                    //function findDuplicateValue(arr) {
                    //    let duplicates = {};
                    //    for (let i = 0; i < arr.length; i++) {
                    //        if (duplicates[arr[i]]) {
                    //            return [true, arr[i]];
                    //        } else {
                    //            duplicates[arr[i]] = true;
                    //        }
                    //    }
                    //    return [false, null];
                    //}

                    //let [hasDuplicates, duplicatedValue] = findDuplicateValue(sourceField2);

                    if ($.trim($('#field-name').val()) == '') {
                        swal('Field Name is empty.', 'Please input the Field Name', 'warning')
                    }
                    else if ($.trim($('#field-code').val()) == '') {
                        swal('Field Code is Empty.', 'Please input the Field Code', 'warning')
                    }
                    //else if (hasDuplicates) {
                    //    swal('Source Field has Duplicate Value.', "Please Check '" + duplicatedValue + "'", 'warning');

                    //}
                    else {

                        var check = createorupdate
                        console.log(check);
                        var rowval = [];
                        var headerval = [];

                        var MapId = Mapid;

                        var FieldCode = $('#field-code').val();
                        var FieldName = $('#field-name').val();

                        var SAPCode = $('#field-sap').val();
                        var PathCode = $('#field-path').val();

                        var FileName = $('#field-filename').val();
                        var FileType = $('#field-filetype').val();
                        var Module = $('#field-module').val();



                        //rowTables.each(function () {

                        //    var rowTables = $('.field-table-rows');
                        //    var IsRequired = false;
                        //    var i = 0;
                        //    const tablenamerow = $(this).data('tablename');
                        //    console.log(tablenamerow)
                        //    $('.fieldrow-tbody tr').each(function () {

                        //    if ($('.headercheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                        //    else { IsRequired = "NULL"; }
                        //    headerval.push([$('.field-rowcombo', this).val(), $('.field-apicombo', this).val(), $('.field-rowdatatype', this).val(), $('.field-rowcondition', this).val(), IsRequired, tablenamerow]);

                        //    });
                        //});


                        var rowTables = $('.field-table-rows');
                        var IsRequired = false;
                        var i = 0;

                        rowTables.each(function () {

                            const sourcetable = $(this).data('tablename');

                            var headerstart = $('#header-field-' + sourcetable).val().toUpperCase();
                            var rowstart = $('#row-field-' + sourcetable).val().toUpperCase();
                            var destinationtable = $(`#combotable_${sourcetable}`).val();

                            $('.fieldrow-tbody tr', this).each(function () {
                                if ($('.headercheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                                else { IsRequired = "NULL"; }

                                headerval.push([$('.field-rowcombo', this).val(), $('.field-apicombo', this).val(), $('.field-rowdatatype', this).val(), $('.field-rowcondition', this).val(), destinationtable, headerstart, rowstart, IsRequired, sourcetable, $('.field-rowcombo', this).attr('data-visorder')]);


                            });
                        });



                        //var IsRequired = false;
                        //var i = 0;
                        //$('#row-tbody tr').each(function () {
                        //    if ($('.rowcheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                        //    else { IsRequired = "NULL"; }
                        //    rowval.push([$('.rowcombo', this).val(), $('.rowinput', this).val(), $('.rowtype', this).val(), $('.rowlength', this).val(), IsRequired]);
                        //});


                        //console.log(tbodyElement.attr('data-tablesap'));





                        //True func

                        //$('.fieldrow-tbody tr').each(function () {


                        //    if ($('.headercheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                        //        else { IsRequired = "NULL"; }
                        //    headerval.push([$('.field-rowcombo', this).val(), $('.field-apicombo', this).val(), $('.field-rowdatatype', this).val(), $('.field-rowcondition', this).val(), IsRequired,tbodyElementz[i]]);
                        //    i++;
                        //});




                        //console.log(rowval);
                        console.log(headerval);

                        swal({
                            title: 'Are you sure you want to save this Field mapping Setup?',
                            text: "",
                            type: 'info',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes'
                        }).then((result) => {
                            if (result.value) {
                                $.post("@Url.Action("CreateSAPtoSAPField", "Configuration")", {

                                    MapId: MapId,
                                    MapCode: FieldCode,
                                    MapName: FieldName,

                                    SAPCode: SAPCode,
                                    PathCode: PathCode,
                                    StoreHeaderVal: headerval,

                                    FileName: FileName,
                                    FileType: FileType,
                                    DataType: "DATAFILE",
                                    ModuleName: Module,
                                    Check: check,


                                }).done(function (data) {
                                    if (data) {
                                        swal({
                                            title: "Success!",
                                            text: "",
                                            type: "success",
                                            showConfirmButton: false,
                                            timer: 1500,
                                            onClose: () => {
                                                window.location.href = "";
                                            }
                                        });
                                    }
                                }).fail(function () {
                                    swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                                });
                            }
                        })
                    @*var check = createorupdate;
                    console.log(check);
                    var rowval = [];
                    var headerval = [];
                    var MapId = Mapid;
                    var RowTable = $('#row-tablename').val();
                    var HeaderTable = $('#header-tablename').val();
                    var FieldCode = $('#field-code').val();
                    var FieldName = $('#field-name').val();
                    var AddonCode = $('#field-addon').val();
                    var SAPCode = $('#field-sap').val();
                    var PathCode = $('#field-path').val();
                    var HeaderWorksheet = $('#field-headerworksheet').val();
                    var RowWorksheet = $('#field-rowworksheet').val();
                    var FileName = $('#field-filename').val();
                    var FileType = $('#field-filetype').val();
                    var Module = $('#field-module').val();
                    console.log(RowTable);
                    console.log(HeaderTable);
                    var IsRequired = false;
                    var i = 0;
                    $('#row-tbody tr').each(function () {
                        if ($('.rowcheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                        else { IsRequired = "NULL"; }
                        rowval.push([$('.rowcombo', this).val(), $('.rowinput', this).val(), $('.rowtype', this).val(), $('.rowlength', this).val(), IsRequired]);
                    });

                    $('#header-tbody tr').each(function () {
                        if ($('.headercheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                        else { IsRequired = "NULL"; }
                        headerval.push([$('.headercombo', this).val(), $('.headerinput', this).val(), $('.headertype', this).val(), $('.headerlength', this).val(), IsRequired]);
                    });
                    console.log("I CLICK IT");
                    console.log(headerval);
                    console.log(rowval);
                    swal({
                        title: 'Are you sure you want to save this Field mapping Setup?',
                        text: "",
                        type: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes'
                    }).then((result) => {
                        if (result.value) {
                            $.post("@Url.Action("CreateField","Configuration")", {

                                MapId: MapId,
                                MapCode: FieldCode,
                                MapName: FieldName,
                                AddonCode: AddonCode,
                                SAPCode: SAPCode,
                                PathCode: PathCode,
                                HeaderWorksheet: HeaderWorksheet,
                                RowWorksheet: RowWorksheet,
                                FileName: FileName,
                                FileType: FileType,
                                DataType: "DATAFILE",
                                ModuleName: Module,
                                Check: check,
                                RowTable: RowTable,
                                HeaderTable: HeaderTable,
                                HeaderVal: headerval,
                                RowVal: rowval,
                                RowTable: RowTable,
                                HeaderTable: HeaderTable,
                                StoreHeaderVal: headerval,
                                StoreRowVal: rowval,

                            }).done(function (data) {
                                if (data) {
                                    swal({
                                        title: "Success!",
                                        text: "",
                                        type: "success",
                                        showConfirmButton: false,
                                        timer: 1500,
                                        onClose: () => {
                                            window.location.href = "";
                                        }
                                    });
                                }
                            }).fail(function () {
                                swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                            });
                        }
                    })*@
                    }//end of else
                })

                .on('submit', '#api-map-submit', function (e) {
                    e.preventDefault();
                    var check = createorupdate;
                    console.log(check);
                    var rowval = [];
                    var headerval = [];
                    var paramval = [];
                    var MapId = Mapid;
                    var RowTable = $('#api-row-tablename').val();
                    var HeaderTable = $('#api-header-tablename').val();
                    var FieldCode = $('#api-field-code').val();
                    var FieldName = $('#api-field-name').val();
                    var AddonCode = $('#api-field-addon').val();
                    var SAPCode = $('#api-field-sap').val();
                    var APICode = $('#api-field-apicode').val();
                    var PathCode = ""; //leave empty, not required for api
                    var HeaderWorksheet = $('#api-field-headerworksheet').val();
                    var RowWorksheet = $('#api-field-rowworksheet').val();
                    var FileName = $('#api-field-filename').val();
                    var FileType = $('#api-field-filetype').val();
                    var Module = $('#api-field-module').val();
                    console.log(RowTable);
                    console.log(HeaderTable);
                    var IsRequired = false;
                    var i = 0;
                    $('#api-row-tbody tr').each(function () {
                        if ($('.api-rowcheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                        else { IsRequired = "NULL"; }
                        rowval.push([$('.api-rowcombo', this).val(), $('.api-apirowcombo', this).val(), $('.api-rowtype', this).val(), $('.api-rowlength', this).val(), IsRequired, $('.api-rowdefval', this).val()]);
                    });
                    console.log(rowval);

                    $('#api-header-tbody tr').each(function () {
                        if ($('.api-headercheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                        else { IsRequired = "NULL"; }
                        headerval.push([$('.api-headercombo', this).val(), $('.api-apicombo', this).val(), $('.api-headertype', this).val(), $('.api-headerlength', this).val(), IsRequired, $('.api-headerdefval', this).val()]);
                    });
                    console.log(headerval);

                    $('#api-param-tbody tr').each(function () {
                        paramval.push([MapId, APICode, $('.api-param-key', this).val(), $('.api-param-value', this).val()]);
                    });
                    console.log(paramval);

                    swal({
                        title: 'Are you sure you want to save this Field mapping Setup?',
                        text: "",
                        type: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes'
                    }).then((result) => {
                        if (result.value) {
                            $.post("@Url.Action("CreateField","Configuration")", {

                                MapId: MapId,
                                MapCode: FieldCode,
                                MapName: FieldName,
                                AddonCode: AddonCode,
                                SAPCode: SAPCode,
                                APICode: APICode,
                                PathCode: PathCode,
                                HeaderWorksheet: HeaderWorksheet,
                                RowWorksheet: RowWorksheet,
                                FileName: FileName,
                                FileType: FileType,
                                DataType: "DATAAPI",
                                ModuleName: Module,
                                Check: check,
                                RowTable: RowTable,
                                HeaderTable: HeaderTable,
                                HeaderVal: headerval,
                                RowVal: rowval,
                                RowTable: RowTable,
                                HeaderTable: HeaderTable,
                                StoreHeaderVal: headerval,
                                StoreRowVal: rowval,
                                ParamVal: paramval,
                            }).done(function (data) {
                                if (data) {
                                    swal({
                                        title: "Success!",
                                        text: "",
                                        type: "success",
                                        showConfirmButton: false,
                                        timer: 1500,
                                        onClose: () => {
                                            window.location.href = "";
                                        }
                                    });
                                }
                            }).fail(function () {
                                swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                            });
                        }
                    })
                })

                .on('submit', '#file-map-submit', function (e) {
                    e.preventDefault();
                    var check = createorupdate;
                    console.log(check);
                    var rowval = [];
                    var headerval = [];
                    var MapId = Mapid;
                    var RowTable = $('#file-api-row-tablename').val();
                    var HeaderTable = $('#file-api-header-tablename').val();
                    var FieldCode = $('#file-api-field-code').val();
                    var FieldName = $('#file-api-field-name').val();
                    var AddonCode = $('#file-api-field-addon').val();
                    var SAPCode = ""; //$('#file-api-field-sap').val();
                    var APICode = $('#file-api-field-apicode').val();
                    var PathCode = $('#file-api-field-path').val(); //leave empty, not required for api
                    var HeaderWorksheet = $('#file-api-field-headerworksheet').val();
                    var RowWorksheet = $('#file-api-field-rowworksheet').val();
                    var FileName = $('#label-file-name').data('label-file-name'); // $('#file-api-field-filename').val();
                    var FileType = $('#file-api-field-filetype').val();
                    var Module = ""; // $('#file-api-field-module').val();
                    console.log(RowTable);
                    console.log(HeaderTable);
                    var IsRequired = false;
                    var i = 0;
                    $('#file-api-row-tbody tr').each(function () {
                        if ($('.api-rowcheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                        else { IsRequired = "NULL"; }
                        rowval.push([$('.api-rowcombo', this).val(), $('.file-apirowcombo', this).val(), $('.file-rowtype', this).val(), $('.file-rowlength', this).val(), IsRequired, $('.file-rowdefval', this).val()]);
                    });

                    $('#file-api-header-tbody tr').each(function () {
                        if ($('.file-api-headercheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                        else { IsRequired = "NULL"; }
                        headerval.push([$('.file-headercombo', this).val(), $('.file-apicombo', this).val(), $('.file-headertype', this).val(), $('.file-headerlength', this).val(), IsRequired]);
                    });
                    console.log(headerval);
                    console.log(rowval);
                    swal({
                        title: 'Are you sure you want to save this Field mapping Setup?',
                        text: "",
                        type: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes'
                    }).then((result) => {
                        if (result.value) {
                            $.post("@Url.Action("CreateField","Configuration")", {

                                MapId: MapId,
                                MapCode: FieldCode,
                                MapName: FieldName,
                                AddonCode: AddonCode,
                                SAPCode: SAPCode,
                                APICode: APICode,
                                PathCode: PathCode,
                                HeaderWorksheet: HeaderWorksheet,
                                RowWorksheet: RowWorksheet,
                                FileName: FileName,
                                FileType: FileType,
                                DataType: "FILEAPI",
                                ModuleName: Module,
                                Check: check,
                                RowTable: RowTable,
                                HeaderTable: HeaderTable,
                                HeaderVal: headerval,
                                RowVal: rowval,
                                RowTable: RowTable,
                                HeaderTable: HeaderTable,
                                StoreHeaderVal: headerval,
                                StoreRowVal: rowval,

                            }).done(function (data) {
                                if (data) {
                                    swal({
                                        title: "Success!",
                                        text: "",
                                        type: "success",
                                        showConfirmButton: false,
                                        timer: 1500,
                                        onClose: () => {
                                            window.location.href = "";
                                        }
                                    });
                                }
                            }).fail(function () {
                                swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                            });
                        }
                    })
                })

                //.on('submit', '#db-db-map-submit', function (e) {
                //    $('#preloader-modal').modal('show');
                //    $('.appendremove').remove()
                //    var id = $('#db-db-field-otheraddon').val();
                //    var DBName = '';
                //    var model;
                //    var rowname = '';
                //    var module = $('#db-db-field-module').find(':selected').data('htable');
                //    $.post('FindSAPString', { code: id }).done(result => {
                //        for (var x in result.SAPView) {
                //            $('#db-db-field-otheraddon').val(result.SAPView[x].SAPCode);
                //            $('#tableheader').text(module);
                //            SAPDBName = result.SAPView[x].SAPDBName;

                //            //Populate Header Table
                //            $.post('CreateNewField', { Schema: result.SAPView[x].SAPDBName, Module: module, model: result.SAPView[x] }).done(result => {
                //            })

                //            ////Populate Header Table
                //            //$.post('PopulateSAPDBTable', { Schema: result.SAPView[x].SAPDBName, Module: module, model: result.SAPView[x] }).done(result => {
                //            //    for (var x in result.Headers) {
                //            //        $('#db-db-header-table tbody').append('<tr class="appendremove"><td width="5%"></td>' +
                //            //            '<td>' + result.Headers[x].TableName + '</td>' +
                //            //            '<td>' + result.Headers[x].DataType + '</td>' +
                //            //            '<td>' + result.Headers[x].Length + '</td></tr>');
                //            //    }
                //            //})

                //            //var tabid = "";
                //            ////Populate Row Table
                //            //$.post('PopulateSAPDBTableRow', { Schema: result.SAPView[x].SAPDBName, Module: module, model: result.SAPView[x] }).done(result => {
                //            //    for (var x in result.Headers) {
                //            //        if (rowname != result.Headers[x].TableName) {
                //            //            tabid = result.Headers[x].TableName + result.Headers[x].SAPHeaderFieldId;
                //            //            $('#tabletabs').append('<li class="appendremove"><a href="#' + tabid + '" data-toggle="tab">' + result.Headers[x].TableName + '</a></li>');
                //            //            rowname = result.Headers[x].TableName;
                //            //        }
                //            //        else {
                //            //            $('#tabletabcontent').append(
                //            //                '<div class="tab-pane appendremove" id="' + tabid + '" >'
                //            //                + '<div class="box">'
                //            //                + '<div class="box-header">'
                //            //                + '<h3 class="box-title">'
                //            //                + '<i class="fa fa-database"></i> Table Name :'
                //            //                + '</h3>'
                //            //                + '<input type="text" placeholder="Table Name" id="db-db-header-tablename">'
                //            //                + '</div>'
                //            //                + '<div class="box-body">'
                //            //                + '<table id="db-db-' + tabid + '-table" class="table table-fields table-bordered table-striped">'
                //            //                + '<thead>'
                //            //                + '<tr>'
                //            //                + '<th></th>'
                //            //                + '<th>Table Name</th>'
                //            //                + '<th>Data Type</th>'
                //            //                + '<th>Length</th>'
                //            //                + '</tr>'
                //            //                + '</thead>'
                //            //                + '<tbody></tbody>'
                //            //                + '</table>'
                //            //                + '</div>'
                //            //                + '<div class="box-footer">'
                //            //                + '<button type="submit" class="btn margin btn-primary" style="float: right;" id="db-db-field-save">Save</button>'
                //            //                + '</div>'
                //            //                + '</div>'
                //            //                + '</div>'
                //            //            );
                //            //        }
                //            //        $('#db-db-' + tabid + '-table tbody').append('<tr><td width="5%"></td>' +
                //            //            '<td>' + result.Headers[x].SAPHeaderFieldId + '</td>' +
                //            //            '<td>' + result.Headers[x].DataType + '</td>' +
                //            //            '<td>' + result.Headers[x].Length + '</td></tr>');
                //            //    }
                //            //})
                //        }

                //    })
                //})

                .on('submit', '#db-db-map-submit', function (e) {
                    e.preventDefault();
                    var check = createorupdate;
                    console.log(check);
                    var rowval = [];
                    var headerval = [];
                    var MapId = Mapid;
                    var RowTable = [];
                    var HeaderTable = $('#db-db-header-tablename').val();
                    var FieldCode = $('#db-db-field-code').val();
                    var FieldName = $('#db-db-field-name').val();
                    var AddonCode = $('#db-db-field-addon').val();
                    var SAPCode = $('#db-db-field-otheraddon').val();
                    var PathCode = "";
                    var HeaderWorksheet = "";
                    var RowWorksheet = "";
                    var FileName = "";
                    var FileType = "";
                    //var Module = $('#db-db-field-module').val();
                    var Module = $('#db-db-field-module').find(':selected').data('htable');
                    console.log(RowTable);
                    console.log(HeaderTable);
                    var IsRequired = false;
                    var i = 0;
                    //$('#row-tbody tr').each(function () {
                    //    if ($('.rowcheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                    //    else { IsRequired = "NULL"; }
                    //    rowval.push([$('.rowcombo', this).val(), $('.rowinput', this).val(), $('.rowtype', this).val(), $('.rowlength', this).val(), IsRequired]);
                    //});

                    $.post('ValidateMapModule', { SAPCode: SAPCode, Module: Module }).done(result => {
                        for (var x in result.FieldView) {

                            if (result.FieldView[x].MapCode != "" && createorupdate == 0) {
                                swal('The chosen module already has an existing Mapping Setup.', '', 'warning')
                                return;
                            }
                        }

                        $('#db-db-header-tbody tr').each(function () {
                            if ($('.headercheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                            else { IsRequired = "NULL"; }
                            headerval.push([$('.headercombo', this).val(), $('.headerinput', this).val(), $('.headertype', this).val(), $('.headerlength', this).val(), IsRequired]);
                        });
                        console.log(headerval);
                        console.log(rowval);
                        swal({
                            title: 'Are you sure you want to save this Field mapping Setup?',
                            text: "",
                            type: 'info',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes'
                        }).then((result) => {
                            if (result.value) {
                                $('#preloader-modal').modal('show');
                                $.post("@Url.Action("CreateField","Configuration")", {

                                    MapId: MapId,
                                    MapCode: FieldCode,
                                    MapName: FieldName,
                                    AddonCode: AddonCode,
                                    SAPCode: SAPCode,
                                    PathCode: PathCode,
                                    HeaderWorksheet: HeaderWorksheet,
                                    RowWorksheet: RowWorksheet,
                                    FileName: FileName,
                                    FileType: FileType,
                                    DataType: "DATADBSAP",
                                    ModuleName: Module,
                                    Check: check,
                                    RowTable: RowTable,
                                    HeaderTable: HeaderTable,
                                    HeaderVal: headerval,
                                    RowVal: rowval,
                                    RowTable: RowTable,
                                    HeaderTable: HeaderTable,
                                    StoreHeaderVal: headerval,
                                    StoreRowVal: rowval,

                                }).done(function (data) {
                                    if (data) {
                                        $('#preloader-modal').modal('hide');
                                        swal({
                                            title: "Success!",
                                            text: "",
                                            type: "success",
                                            showConfirmButton: false,
                                            timer: 1500,
                                            onClose: () => {
                                                window.location.href = "";
                                            }
                                        });
                                    }
                                }).fail(function () {
                                    $('#preloader-modal').modal('hide');
                                    swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                                });
                            }
                        })
                    });

                })

                .on('click', 'button[data-paramid]', function () {
                    var id = $(this).data('paramid');
                    $(this).closest('tr').remove();
                    //$('#' + id + '').remove();
                })

             
                .on('click', 'button[data-headid]', function () {
                    console.log()
                    var id = $(this).data('headid');
                    $(this).closest('tr').remove();
                    //$('#' + id + '').remove();
                })

                .on('click', 'button[data-delete]', function () {
                    swal({
                        title: 'Are you sure you want to Delete this Table?',
                        text: "",
                        type:'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes'
                    }).then((result) => {

                        if (result.value) {

                            const tablename = $(this).data('delete')

                            $(`#one-field-tabs li:contains("${tablename}")`).remove();
                            $(`#one-field-row-table-${tablename}`).hide();
                            $(`#one-field-row-table-${tablename} tbody tr`).remove();


                            $("#one-saptable").prop('disabled', false);
                            $('#one-header-name').val("");

                            $('#one-row-name').val("");
                            $('#one-field-sheetname').val("");

                            //$('#one-field-path').val("");
                            //$('#one-field-path').attr("one-data-file-pathid", "");
                            $('#one-field-filename').val("");


                            $('.btn-primary.newfield').prop('disabled', true);


                            tabTextList = tabTextList.filter(value => value !== tablename);

                            table_array = table_array.filter(obj => obj.saptable !== tablename);
                        }//end of if result.value


                    })//end of then(result)

                })

            $(".mapcode").focusout(function () {

                var Code = $(this).val();

                $.post('ValidateMapCode', { Code: Code }).done(result => {
                    for (var x in result.FieldView) {

                        if (result.FieldView[x].MapCode != "") {
                            swal('MapCode Code is already taken.', '', 'warning')
                            $(this).val("");
                            $(this).focus();
                        }

                    }
                })
            })

                //.on('click', 'button[data-rowid]', function () {
                //    var id = $(this).data('rowid');
                //    $(this).closest('tr').remove();
                //    //$('#' + id + '').remove();
                //})

                .on('click', '#mdal-btn-map-file', function () {
                    $('#map-submit').removeAttr('hidden');
                    $('#map-submit').removeProp('hidden');
                    $('#api-map-submit').attr('hidden', 'hidden');
                    $('#api-map-submit').prop('hidden', 'hidden');
                    $('#back-selection').removeAttr('hidden');
                    $('#back-selection').removeProp('hidden');
                    $('#map-selection').attr('hidden', 'hidden');
                    $('#map-selection').prop('hidden', 'hidden');
                })

                .on('click', '#mdal-btn-map-api', function () {
                    $('#api-map-submit').removeAttr('hidden');
                    $('#api-map-submit').removeProp('hidden');
                    $('#map-submit').attr('hidden', 'hidden');
                    $('#map-submit').prop('hidden', 'hidden');
                    $('#back-selection').removeAttr('hidden');
                    $('#back-selection').removeProp('hidden');
                    $('#map-selection').attr('hidden', 'hidden');
                    $('#map-selection').prop('hidden', 'hidden');
                })

                .on('click', '#btn-back-select', function () {
                    $("#mdal-map-option option").each(function () {
                        var loopval = $(this).val();
                        console.log(loopval);
                        $('#' + loopval).attr('hidden', 'hidden');
                        $('#' + loopval).prop('hidden', 'hidden');
                    });
                    $('#back-selection').attr('hidden', 'hidden');
                    $('#back-selection').prop('hidden', 'hidden');
                    $('#map-selection').removeAttr('hidden');
                    $('#map-selection').removeProp('hidden');

                    $('input[type=text]').val('');
                    $('.row-append').remove();

                    if ($('.table-fields tbody').empty()) {
                        $('.select2').val(null).trigger('change');
                    }
                });

        $('#mdal-btn-map-next').on('click', function (e) {
            var val = $('#mdal-map-option').val();
            var len = document.getElementById("mdal-map-option").length;
            console.log(val);
            $(`#field-module`).trigger('change');

            $("#mdal-map-option option").each(function () {
                var loopval = $(this).val();
                if (val == loopval) {
                    $('#' + val).removeAttr('hidden');
                    $('#' + val).removeProp('hidden');
                    ////UNHIDE BUTTON
                    $('#back-selection').removeAttr('hidden');
                    $('#back-selection').removeProp('hidden');
                }
                else {
                    $('#' + loopval).attr('hidden', 'hidden');
                    $('#' + loopval).prop('hidden', 'hidden');
                    ////HIDE MAP SELECTION OPTIONS
                    $('#map-selection').attr('hidden', 'hidden');
                    $('#map-selection').prop('hidden', 'hidden');
                }
            });

        });

        $('#file-api-field-filename').on('change keydown', function () {
            // Checking whether FormData is available in browser
            if (window.FormData !== undefined) {
                var fileUpload = $('#file-api-field-filename').get(0);
                var files = fileUpload.files;

                $('#label-file-name').data('label-file-name', files[0].name);
                $('#label-file-name').attr('data-label-file-name', files[0].name);
                $('#label-file-name').prop('data-label-file-name', files[0].name);
                $('#label-file-name').html('Sample File:');
                // Create FormData object
                var fileData = new FormData();

                // Looping over all files and add it to FormData object
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }

                $.ajax({
                    url: '/Configuration/UploadFile',
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    success: function (result) {
                        alert("Success");
                        //swal({
                        //    title: "Success!",
                        //    text: "",
                        //    type: "success",
                        //    showConfirmButton: false,
                        //    timer: 1500,
                        //    onClose: () => {
                        //        window.location.href = "";
                        //    }
                        //});
                    },
                    error: function (err) {
                        alert(err.statusText);
                    }
                });
            } else {
                alert("FormData is not supported.");
            }
        });

        $('#field-code').on('input', function (e) {
            if ($(this).val() == '') {
                createorupdate = 0;
                $('#field-code').val("");
                $('#field-name').val("");
                $('#field-addon').val("");
                $('#field-sap').val("");
                $('#field-path').val("");
                $('#field-headerworksheet').val("");
                $('#field-rowworksheet').val("");
                $('#field-filename').val("");
                $('#field-filetype').val("");
                $('#field-module').val("");

                $('#row-table tbody').html("");
                $('#header-table tbody').html("");
                $('#row-tablename').val("");
                $('#header-tablename').val("");
                rowarrhanafield = [];
                rowarrdata = [];
                headarrhanafield = [];
                headarrdata = [];
                headdataval = [], rowdataval = [], sapfield = [], rowsapfield = [];
            }
        });

        $(".mapcode").focusout(function () {
            var Code = $(this).val();
            $.post('ValidateMap', { Code: Code }).done(result => {
                for (var x in result.FieldView) {

                    if (result.FieldView[x].MapCode != "" && createorupdate == 0) {
                        swal('Map Code is already taken.', '', 'warning')
                        $(this).val("");
                        $(this).focus();
                    }
                }
            })
        });
        });
    </script>
    <script>
        $(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' /* optional */
            });
        });

     
    </script>

    <!--SAP API TO SAP API JS-->
    <script>

        $(document).ready(function () {
            $.post("@Url.Action("FetchSAPDataTypes", "Configuration")", {

            }).done(function (data) {
                datatypes = data;
            });

            counth = 0;
            countr = 0;
            createorupdate = 0;
            Mapid = 0;
            $(document).on('click', 'button[data-sapi-sapi-mapid]', async function () {
                createorupdate = 1;
                var id = $(this).data('sapi-sapi-mapid');
                Mapid = id;
                headersource = [];
                headerdestination = [];
                headerdatatype = [];
                rowsource = [];
                rowdestination = [];
                rowdatatype = [];

                var SourceAPICode = "";
                var Module = "";
                var DestinationAPICode = "";
                var headertable = "";
                var rowtable = "";
                $('#sapi-sapi-header-tbody').empty();

                $.post('FindMap', { Id: id }).then(result => {
                    for (var x in result.FieldView) {
                        $('#sapi-sapi-field-code').data('id', id);
                        $('#sapi-sapi-field-code').attr('data-id', id);
                        $('#sapi-sapi-field-code').val(result.FieldView[x].MapCode);
                        $('#sapi-sapi-field-name').val(result.FieldView[x].MapName);

                        $('#sapi-sapi-destination-apicode').val(result.FieldView[x].SAPCode);

                        $('#sapi-sapi-field-module').val(result.FieldView[x].ModuleName);
                        $('#sapi-sapi-field-module').change();
                        $('#sapi-sapi-field-destmod').val(result.FieldView[x].DestModule);
                        $('#sapi-sapi-field-destmod').change();

                        $('#sapi-sapi-source-apicode').val(result.FieldView[x].APICode);
                        $('#sapi-sapi-source-apicode').change();
                    }

                    $(".modal:not(#preloader-modal)").modal('hide');

                    //#region COMMENTED
                    //$('#sapi-sapi-field-module').change();

                    //headertable = $("#sapi-sapi-header-tablename").find(':selected').data('htable');
                    //rowtable = $("#sapi-sapi-row-tablename").find(':selected').data('rtable');

                    //for (var x in result.Headers) {
                    //    headersource.push(result.Headers[x].SAPHeaderFieldId);
                    //    headerdestination.push(result.Headers[x].AddonHeaderField);
                    //    headerdatatype.push(result.Headers[x].DataType);
                    //    var req = result.Headers[x].IsRequired;
                    //    var len = result.Headers[x].Length;

                    //    counth = counth + 1;
                    //    inputid = "sapi-headerinput" + counth;
                    //    datatypeid = "sapi-headerdata" + counth;
                    //    checkid = "sapi-headercheck" + counth;
                    //    filecomboid = "sapi-headercombo" + counth;
                    //    lengthid = "sapi-headerlength" + counth;
                    //    fileapicombo = "sapi-apicombo" + counth;
                    //    headerdatatypeid = "sapi-headerdata" + counth;
                    //    var ischeck = "";
                    //    if (req == true) {
                    //        ischeck = "checked"
                    //    }
                    //    else {
                    //        ischeck = "unchecked"
                    //    }
                    //    $('#sapi-sapi-header-table tbody').append('<tr id="tr' + counth + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + counth + '" ></button></td>' +
                    //        '<td><select class="form-control select2 sapi-headercombo" name ="' + datatypeid + '" style="width: 100%;" id="' + filecomboid + '"></select></td>' +
                    //        '<td><select class="form-control select2 sapi-apicombo" name="' + headerdatatypeid + '" style="width: 100%;" id="' + fileapicombo + '"></select></td>' +
                    //        '<td><select class="form-control select2 sapi-headertype" name="' + lengthid + '" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                    //        '<td><input type="text" class="form-control sapi-headerlength" placeholder="Insert Length" id="' + lengthid + '" value="' + len + '"></td>' +
                    //        '<td><input type="checkbox" class="iCheck-helper sapi-headercheck" id="' + checkid + '" ' + ischeck + ' /></</td></tr>');
                    //}

                    //for (var x in result.Rows) {
                    //    rowsource.push(result.Rows[x].SAPRowFieldId);
                    //    rowdestination.push(result.Rows[x].AddonRowField);
                    //    rowdatatype.push(result.Rows[x].DataType);
                    //    var req = result.Rows[x].IsRequired;
                    //    var len = result.Rows[x].Length;
                    //    $('#sapi-sapi-row-tablename').val(result.Rows[0].TableName);
                    //    countr = countr + 1;
                    //    inputid = "sapi-rowinput" + countr;
                    //    datatypeid = "sapi-rowdata" + countr;
                    //    rowcheckid = "sapi-rowcheck" + countr;
                    //    filecomboid = "sapi-rowcombo" + countr;
                    //    lengthid = "sapi-rowlength" + countr;
                    //    fileapicombo = "sapi-rowapicombo" + countr;
                    //    rowdatatypeid = "sapi-rowdata" + countr;

                    //    var ischeck = "";
                    //    if (req == true) {
                    //        ischeck = "checked"
                    //    }
                    //    else {
                    //        ischeck = "unchecked"
                    //    }
                    //    $('#sapi-sapi-row-table tbody').append('<tr id="tr' + countr + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + countr + '" ></button></td>' +
                    //        '<td><select class="form-control select2 sapi-rowcombo" name ="' + datatypeid + '" style="width: 100%;" id="' + filecomboid + '"></select></td>' +
                    //        '<td><select class="form-control select2 sapi-apicombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + fileapicombo + '"></select></td>' +
                    //        '<td><select class="form-control select2 sapi-rowtype" name="' + lengthid + '" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                    //        '<td><input type="text" class="form-control sapi-rowlength" placeholder="Insert Length" id="' + lengthid + '" value="' + len + '"></td></tr > ');
                    //    //'<td><input type="checkbox" class="iCheck-helper sapi-rowcheck" id="' + rowcheckid + '" ' + ischeck + ' /></</td ></tr > ');
                    //}

                    //SourceAPICode = $("#sapi-sapi-source-apicode").val();
                    //Module = $("#sapi-sapi-field-module").val();
                    //DestinationAPICode = $("#sapi-sapi-destination-apicode").val();
                    //headertable = $("#sapi-sapi-header-table").val();
                    //console.log(`SendCnt:${counth}`)
                    //return $.post('PopulateSAPAPI', { SourceAPICode: SourceAPICode, HeaderTable: headertable, RowTable: rowtable, DestinationAPICode: DestinationAPICode, Module: Module }).done(result => {
                    //    if (result.HeaderHanaFields != null) {
                    //        console.log(`RecCnt:${counth}`)
                    //        i = 1;
                    //        while (i <= counth) {
                    //            $('#sapi-headercombo' + i + '').addClass("select2");
                    //            for (var x in result.HeaderHanaFields) {
                    //                $('#sapi-headercombo' + i + '').append($('<option>', {
                    //                    value: result.HeaderHanaFields[x].ColumnName,
                    //                    text: result.HeaderHanaFields[x].ColumnName
                    //                }));
                    //            }
                    //            $('#sapi-headercombo' + i + '').val(headersource[i - 1]);
                    //            $('#sapi-headercombo' + i + '').trigger('change');

                    //            $('#sapi-apicombo' + i + '').addClass("select2");
                    //            for (var x in result.HeaderAPIFields) {
                    //                $('#sapi-apicombo' + i + '').append($('<option>', {
                    //                    value: result.HeaderAPIFields[x].ColumnName,
                    //                    text: result.HeaderAPIFields[x].ColumnName
                    //                }));
                    //            }
                    //            $('#sapi-apicombo' + i + '').val(headerdestination[i - 1]);
                    //            $('#sapi-apicombo' + i + '').trigger('change');

                    //            for (var x in result.DataTypes) {
                    //                $('#sapi-headerdata' + i + '').append($("<option/>", {
                    //                    value: result.DataTypes[x].DataType,
                    //                    text: result.DataTypes[x].DataType
                    //                }));
                    //            }
                    //            $('#sapi-headerdata' + i + '').val(headerdatatype[i - 1]);
                    //            $('#sapi-headerdata' + i + '').trigger('change');

                    //            i++;
                    //        }

                    //        y = 1;
                    //        while (y <= countr) {
                    //            $('#sapi-rowcombo' + y + '').addClass("select2");
                    //            for (var x in result.RowHanaFields) {
                    //                $('#sapi-rowcombo' + y + '').append($('<option>', {
                    //                    value: result.RowHanaFields[x].ColumnName,
                    //                    text: result.RowHanaFields[x].ColumnName
                    //                }));
                    //            }
                    //            console.log(rowsource[i - 1]);
                    //            $('#sapi-rowcombo' + y + '').val(rowsource[y - 1]);
                    //            $('#sapi-rowcombo' + y + '').trigger('change');

                    //            $('#sapi-rowapicombo' + y + '').addClass("select2");
                    //            for (var x in result.RowAPIFields) {
                    //                $('#sapi-rowapicombo' + y + '').append($('<option>', {
                    //                    value: result.RowAPIFields[x].ColumnName,
                    //                    text: result.RowAPIFields[x].ColumnName
                    //                }));
                    //            }
                    //            $('#sapi-rowapicombo' + y + '').val(rowdestination[y - 1]);
                    //            $('#sapi-rowapicombo' + y + '').trigger('change');

                    //            for (var x in result.DataTypes) {
                    //                $('#sapi-rowdata' + y + '').append($("<option/>", {
                    //                    value: result.DataTypes[x].DataType,
                    //                    text: result.DataTypes[x].DataType
                    //                }));
                    //            }
                    //            $('#sapi-rowdata' + y + '').val(rowdatatype[y - 1]);
                    //            $('#sapi-rowdata' + y + '').trigger('change');
                    //            y++;
                    //        } //End of While
                    //    }
                    //}); //End of PopulateSAPAPI

                    //#endregion
                }); //End of FindMap
            });

            //SET SOURCE DB NAME
            $(document).on('click', 'button[data-sapi-source-apiid]', function () {
                var id = $(this).data('sapi-source-apiid');
                $('#sapi-sapi-source-apicode').val(id);
                $('#sapi-sapi-source-apicode').change();
                $(".modal").modal('hide');
            });

            //SET DESTINATION DB NAME
            $(document).on('click', 'button[data-sapi-destination-apiid]', function () {
                var id = $(this).data('sapi-destination-apiid');
                $('#sapi-sapi-destination-apicode').val(id);
                $('#sapi-sapi-destination-apicode').change();
                $(".modal").modal('hide');
            });

            //SAVING
            $(document).on('submit', '#sapi-sapi-map-submit', function (e) {
                e.preventDefault();
                var check = createorupdate;
                console.log(check);
                var rowval = [];
                var headerval = [];
                var MapId = Mapid;
                var FieldCode = $('#sapi-sapi-field-code').val();
                var FieldName = $('#sapi-sapi-field-name').val();
                var AddonCode = ""; //$('#sapi-sapi-field-addon').val();
                var SAPCode = $('#sapi-sapi-destination-apicode').val(); //Destination SAP Code
                var APICode = $('#sapi-sapi-source-apicode').val(); //Source SAP Code
                var PathCode = ""; //$('#file-api-field-path').val(); //leave empty, not required for api
                var HeaderWorksheet = $('#file-api-field-headerworksheet').val();
                var RowWorksheet = $('#file-api-field-rowworksheet').val();
                var FileName = ""; //$('#label-file-name').data('label-file-name'); // $('#file-api-field-filename').val();
                var FileType = ""; //$('#file-api-field-filetype').val();
                let Module = $('#sapi-sapi-field-module').val();
                let DestiModule = $('#sapi-sapi-field-destmod').val();
                var rowTables = $('.sapi-table-rows');
                var IsRequired = false;
                var i = 0;
                rowTables.each(function () {
                    console.log(this + ': ');
                    const tablenamerow = $(this).data('tablename');
                    $('tbody tr', this).each(function () {
                        if ($('.sapi-rowcheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                        else { IsRequired = "NULL"; }
                        headerval.push([$('.sapi-rowcombo', this).val(), $('.sapi-apicombo', this).val(), $('.sapi-rowtype', this).val(), $('.sapi-rowlength', this).val(), IsRequired, tablenamerow]);
                    });
                });


                const tablenamehed = $(`#sapi-sapi-header-tblname`).val();
                $('#sapi-sapi-header-tbody tr').each(function () {
                    if ($('.sapi-headercheck', this).is(":checked")) { IsRequired = "NOT NULL"; }
                    else { IsRequired = "NULL"; }
                    headerval.push([$('.sapi-headercombo', this).val(), $('.sapi-apicombo', this).val(), $('.sapi-headertype', this).val(), $('.sapi-headerlength', this).val(), IsRequired, tablenamehed]);
                });
                console.log(headerval);
                console.log(rowval);
                swal({
                    title: 'Are you sure you want to save this Field mapping Setup?',
                    text: "",
                    type: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes'
                }).then((result) => {
                    if (result.value) {
                        $.post("@Url.Action("CreateSAPtoSAPField", "Configuration")", {

                            MapId: MapId,
                            MapCode: FieldCode,
                            MapName: FieldName,
                            AddonCode: AddonCode,
                            SAPCode: SAPCode,
                            APICode: APICode,
                            PathCode: PathCode,
                            HeaderWorksheet: HeaderWorksheet,
                            RowWorksheet: RowWorksheet,
                            FileName: FileName,
                            FileType: FileType,
                            DataType: "DATASAPISAPI",
                            ModuleName: Module,
                            DestModule: DestiModule,
                            Check: check,
                            HeaderVal: headerval,
                            RowVal: rowval,
                            StoreHeaderVal: headerval,
                            StoreRowVal: rowval,

                        }).done(function (data) {
                            if (data) {
                                swal({
                                    title: "Success!",
                                    text: "",
                                    type: "success",
                                    showConfirmButton: false,
                                    timer: 1500,
                                    onClose: () => {
                                        window.location.href = "";
                                    }
                                });
                            }
                        }).fail(function () {
                            swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                        });
                    }
                });
            });

            //ADD HEADER FIELDS
            $(document).on('click', '#sapi-sapi-add-headerfield', function () {
                if ($.trim($('#sapi-sapi-field-code').val()) == '') {
                    swal('Field Mapping is empty.', 'Please input the Field Code Mapping', 'warning')
                }
                else if ($.trim($('#sapi-sapi-source-apicode').val()) == '') {
                    swal('Source SAP API is empty.', 'Please input the Source SAPI API Mapping', 'warning')
                }
                else if ($.trim($('#sapi-sapi-destination-apicode').val()) == '') {
                    swal('Destination SAP API is empty.', 'Please input the Destination SAPi API Mapping', 'warning')
                }
                else {
                    counth = counth + 1;
                    inputid = "sapi-headerinput" + counth;
                    datatypeid = "sapi-headerdata" + counth;
                    checkid = "sapi-headercheck" + counth;
                    filecomboid = "sapi-headercombo" + counth;
                    lengthid = "sapi-headerlength" + counth;
                    fileapicombo = "sapi-apicombo" + counth;
                    headerdatatypeid = "sapi-headerdata" + counth;
                    $('#sapi-sapi-header-table tbody').append('<tr id="tr' + counth + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + counth + '" ></button></td>' +
                        '<td><select class="form-control select2 sapi-headercombo" name ="' + datatypeid + '" style="width: 100%;" id="' + filecomboid + '"></select></td>' +
                        '<td><select class="form-control select2 sapi-apicombo" name="' + headerdatatypeid + '" style="width: 100%;" id="' + fileapicombo + '"></select></td>' +
                        '<td><select class="form-control select2 sapi-headertype" name="' + lengthid + '" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                        '<td><input type="text" class="form-control sapi-headerlength" placeholder="Insert Length" id="' + lengthid + '"></td>' +
                        '<td><input type="checkbox" class="iCheck-helper sapi-headercheck" value="unchecked" id="' + checkid + '"/></</td></tr>');

                    $('#' + filecomboid + '').addClass("select2");
                    for (var x in sourceJson.Header) {
                        $('#' + filecomboid + '').append($('<option>', {
                            value: sourceJson.Header[x],
                            text: sourceJson.Header[x]
                        }));
                    }

                    $('#' + fileapicombo + '').addClass("select2");
                    for (var x in destinationJson.Header) {
                        $('#' + fileapicombo + '').append($('<option>', {
                            value: destinationJson.Header[x],
                            text: destinationJson.Header[x]
                        }));
                    }

                    for (var x in datatypes) {
                        $('#' + datatypeid + '').append($("<option/>", {
                            value: datatypes[x].DataType,
                            text: datatypes[x].DataType
                        }));
                    }
                }
            });

            //ADD ROWS FIELDS
            $(document).on('click', 'button[data-tablename]', function () {


                if ($.trim($('#sapi-sapi-field-code').val()) == '') {
                    swal('Field Mapping is empty.', 'Please input the Field Code Mapping', 'warning')
                }
                else if ($.trim($('#sapi-sapi-source-apicode').val()) == '') {
                    swal('Source SAP API is empty.', 'Please input the Source SAPI API Mapping', 'warning')
                }
                else if ($.trim($('#sapi-sapi-destination-apicode').val()) == '') {
                    swal('Destination SAP API is empty.', 'Please input the Destination SAPi API Mapping', 'warning')
                }
                else {
                    const tablename = $(this).data('tablename');
                    const key = tablename;
                    const index = $(this).data('index');
                    console.log(`Table:${key} | index:${index}`);

                    countr = index + 1;
                    inputid = "sapi-rowinput_" + tablename + countr;
                    datatypeid = "sapi-rowdata_" + tablename + countr;
                    checkid = "sapi-rowcheck_" + tablename + countr;
                    filecomboid = "sapi-rowcombo_" + tablename + countr;
                    lengthid = "sapi-rowlength_" + tablename + countr;
                    fileapicombo = "sapi-rowapicombo_" + tablename + countr;
                    rowdatatypeid = "sapi-rowdata_" + tablename + countr;
                    $(`#sapi-sapi-row-table-${tablename} tbody`).append('<tr id="tr_' + tablename + countr + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + countr + '" ></button></td>' +
                        '<td><select class="form-control select2 sapi-rowcombo" name ="' + datatypeid + '" style="width: 100%;" id="' + filecomboid + '"></select></td>' +
                        '<td><select class="form-control select2 sapi-apicombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + fileapicombo + '"></select></td>' +
                        '<td><select class="form-control select2 sapi-rowtype" name="' + lengthid + '" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                        '<td><input type="text" class="form-control sapi-rowlength" placeholder="Insert Length" id="' + lengthid + '"></td></tr>');

                    $(this).data('index', countr);
                    $(this).attr('data-index', countr);
                    $(this).prop('data-index', countr);

                    ///Source API
                    $(`#${filecomboid}`).addClass("select2");
                    sourceJson.Rows[key].forEach(function (keyr) {
                        $(`#${filecomboid}`).append($('<option>', {
                            value: keyr,
                            text: keyr
                        }));
                    });

                    ///Destination API
                    $(`#${fileapicombo}`).addClass("select2");
                    destinationJson.Rows[key].forEach(async function (keyr) {
                        ///console.log(`Key:${key} | KeyR:${keyr}`);
                        $(`#${fileapicombo}`).append($('<option>', {
                            value: keyr,
                            text: keyr
                        }));
                    });

                    ///DataType
                    sourceJson.DataType.forEach(async function (keyr) {
                        $(`#${datatypeid}`).append($("<option/>", {
                            value: keyr,
                            text: keyr
                        }));
                    }); //End ForEach DataType


                    //$('#' + filecomboid + '').addClass("select2");
                    //for (var x in sourceJson.Rows[tablename]) {
                    //    $('#' + filecomboid + '').append($('<option>', {
                    //        value: sourceJson.Rows[tablename][x],
                    //        text: sourceJson.Rows[tablename][x]
                    //    }));
                    //}

                    //$('#' + fileapicombo + '').addClass("select2");
                    //for (var x in destinationJson.Rows[tablename]) {
                    //    $('#' + fileapicombo + '').append($('<option>', {
                    //        value: destinationJson.Rows[tablename][x],
                    //        text: destinationJson.Rows[tablename][x]
                    //    }));
                    //}

                    //for (var x in datatypes) {
                    //    $('#' + datatypeid + '').append($("<option/>", {
                    //        value: datatypes[x].DataType,
                    //        text: datatypes[x].DataType
                    //    }));
                    //}


                }
            });


            $(document).on('click', 'button[data-field-tablename]', function () {
                //if ($.trim($('#sapi-sapi-field-code').val()) == '') {
                //    swal('Field Mapping is empty.', 'Please input the Field Code Mapping', 'warning')
                //}
                //else if ($.trim($('#sapi-sapi-source-apicode').val()) == '') {
                //    swal('Source SAP API is empty.', 'Please input the Source SAPI API Mapping', 'warning')
                //}
                //else if ($.trim($('#sapi-sapi-destination-apicode').val()) == '') {
                //    swal('Destination SAP API is empty.', 'Please input the Destination SAPi API Mapping', 'warning')
                //}
                //else {

                    var filename = $('#field-filename').val();

                    const tablename = $(this).data('field-tablename');
                    //console.log(`Table:${tablename}`);

                const key = $(`#combotable_${tablename}`).val();

                const tbodytr = $(`#field-row-table-${tablename} tr`).length;
                    let index = tbodytr-2;
                    console.log(`Key:${key}`);

                const tbodyElement = $(`#field-row-tbody-${tablename}`);
                tbodyElement.attr('data-tablesap', key);

                      tbodyElementz.push(tbodyElement.attr('data-tablesap'));


                    countr = index + 1;
                    var headerstart = $('#header-field-' + tablename).val().toUpperCase();
                    var rowstart = $('#row-field-' + tablename).val().toUpperCase();
                    conditionid = "field-rowcondition_" + tablename + countr;
                    inputid = "field-rowinput_" + tablename + countr;
                    datatypeid = "field-rowdata_" + tablename + countr;
                    checkid = "field-rowcheck_" + tablename + countr;
                    filecomboid = "field-rowcombo_" + tablename + countr;
                    lengthid = "field-rowlength_" + tablename + countr;
                    fileapicombo = "field-rowapicombo_" + tablename + countr;
                rowdatatypeid = "field-rowdata_" + tablename + countr;

                    $(`#field-row-table-${tablename} tbody`).append('<tr id="tr_' + tablename + countr + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + countr + '" ></button></td>' +
                        '<td><select class="form-control select2 field-rowcombo" name ="' + datatypeid + '" data-visorder="0" style="width: 100%;" id="' + filecomboid + '"></select></td>' +
                        '<td><select class="form-control select2 field-apicombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + fileapicombo + '" data-table="' + key + '"></select></td>' +
                        '<td><input type="text" class="form-control field-rowdatatype" placeholder="Data Type" id="' + datatypeid + '" readonly></td>'+
                        '<td><input type="text" class="form-control field-rowcondition" placeholder="Query Condition" id="' + conditionid + '"></td>' +
                        '<td style="display:flex; justify-content:center; align-items:center;"><input type="checkbox" style="transform: scale(2.0);" class="iCheck-helper headercheck" id="' + checkid + '" /></</td>'+
                        '</tr > ');

                    $(this).data('index', countr);
                    $(this).attr('data-index', countr);
                    $(this).prop('data-index', countr);

                    $.post(`/linkbox/api/getexcelcolumn?FileName=${filename}&HeadStart=${headerstart}&RowStart=${rowstart}&SheetName=${tablename}`).done(result => {
                        let sourceJson = result[tablename][0];
                        //console.log(sourceJson);


                        //Source API
                        $(`#${filecomboid}`).addClass("select2");

                        Object.entries(sourceJson).forEach(([keyr, value]) => {
                            //console.log(keyr);

                            $(`#${filecomboid}`).append(`<option value="${keyr}">${keyr}</option>`);

                        });

                        ///Destination API
                        $(`#${fileapicombo}`).addClass("select2");
                        Object.entries(destinationJson.Rows[key]).forEach(async ([keyr, value]) => {
                        ///console.log(`Key:${key} | KeyR:${keyr}`);
                            $(`#${fileapicombo}`).append($('<option>', {
                                value: keyr,
                                text: keyr
                            }));


                        });






                    }); // end of post getexcelcolumn
                $('.select2').select2();
                    //$('#' + filecomboid + '').addClass("select2");
                    //for (var x in sourceJson.Rows[tablename]) {
                    //    $('#' + filecomboid + '').append($('<option>', {
                    //        value: sourceJson.Rows[tablename][x],
                    //        text: sourceJson.Rows[tablename][x]
                    //    }));
                    //}

                    //$('#' + fileapicombo + '').addClass("select2");
                    //for (var x in destinationJson.Rows[tablename]) {
                    //    $('#' + fileapicombo + '').append($('<option>', {
                    //        value: destinationJson.Rows[tablename][x],
                    //        text: destinationJson.Rows[tablename][x]
                    //    }));
                    //}

                    //for (var x in datatypes) {
                    //    $('#' + datatypeid + '').append($("<option/>", {
                    //        value: datatypes[x].DataType,
                    //        text: datatypes[x].DataType
                    //    }));
                    //}

                //}else blockings

            });

            //OPS START
            $(document).on('click', 'button[one-data-field-tablename]', async function () {
                 
                $(this).prop('disabled', true);
                var filename = $('#one-field-filename').val();

                const tablename = $(this).attr('one-data-field-tablename');

                var headerstart = $('#one-header-name').val().toUpperCase();

                var rowstart = $('#one-row-name').val().toUpperCase();

                var sheetname = $('#one-field-sheetname').val();


                //const key = $(`#combotable_${tablename}`).val();

                const tbodytr = $(`#one-field-row-table-${tablename} tr`).length;
                console.log(tbodytr)
                let index = tbodytr;
                //console.log(`Key:${key}`);

                //const tbodyElement = $(`#field-row-tbody-${tablename}`);
                //tbodyElement.attr('data-tablesap', key);

                //tbodyElementz.push(tbodyElement.attr('data-tablesap'));

                countr = index;

                conditionid = "one-field-rowcondition_" + tablename + countr;
                //inputid = "field-rowinput_" + tablename + countr;
                datatypeid = "one-field-rowdata_" + tablename + countr;
                checkid = "one-field-rowcheck_" + tablename + countr;
                ops_filecomboid = "one-field-rowcombo_" + tablename + countr;
                console.log(ops_filecomboid)
                //lengthid = "field-rowlength_" + tablename + countr;
                ops_fileapicombo = "one-field-rowapicombo_" + tablename + countr;
                //rowdatatypeid = "field-rowdata_" + tablename + countr;

                $(`#one-field-row-table-${tablename} tbody`).append('<tr id=""><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "" ></button></td>' +
                    '<td><select class="form-control select2 ops-field-rowcombo" name ="" one-data-visorder="0" style="width: 100%;" id="' + ops_filecomboid + '"></select></td>' +
                    '<td><select class="form-control select2 ops-field-apicombo" name="" style="width: 100%;" id="' + ops_fileapicombo + '" data-table="' + tablename + '"></select></td>' +
                    '<td><input type="text" class="form-control ops-field-rowdatatype" placeholder="Data Type" id="' + datatypeid +'" readonly></td>' +
                    '<td><input type="text" class="form-control ops-field-rowcondition" placeholder="Value" id="' + conditionid +'"readonly></td>' +
                    '<td style="display:flex; justify-content:center; align-items:center;"><input type="checkbox" style="transform: scale(2.0);" class="iCheck-helper headercheck" id="' + checkid + '" /></</td>' +
                    '</tr > ');

                //$(this).data('index', countr);
                //$(this).attr('data-index', countr);
                //$(this).prop('data-index', countr);

                await $.post(`/linkbox/api/onegetexcelcolumn?FileName=${filename}&HeadStart=${headerstart}&RowStart=${rowstart}&SheetName=${sheetname}`).done(result => {

                    console.log(result);
                    let sourceJson = result[sheetname][0];


                    //Source API

                  Object.entries(sourceJson).forEach(([keyr, value]) => {
                        //console.log(keyr);

                        $(`#${ops_filecomboid}`).append(`<option value="${keyr}">${keyr}</option>`);

                  });
                  $(`#${ops_filecomboid}`).append(`<option value="Query">Query</option>`);
                  $(`#${ops_filecomboid}`).append(`<option value="Static Value">Static Value</option>`);

                    ///Destination API

                  Object.entries(destinationJson.Rows[tablename]).forEach(async ([keyr, value]) => {
                        ///console.log(`Key:${key} | KeyR:${keyr}`);
                        $(`#${ops_fileapicombo}`).append($('<option>', {
                            value: keyr,
                            text: keyr
                        }));

                    });


                  $(this).prop('disabled', false);

              }); // end of post getexcelcolumn

                $('.select2').select2();


            });

            //SOURCE INPUT CHANGED
            $('#sapi-sapi-source-apicode').on('change', function () {
                let destcode = $('#sapi-sapi-destination-apicode').val();
                if ($(this).val() != "" && destcode != "")
                {
                    $('#preloader-modal').modal('show');
                    $.post("@Url.Action("FetchSAPAPIData", "Configuration")", {
                        Code: $(this).val(),
                        Module: $('#sapi-sapi-field-module').val(),
                    }).done(function (data) {
                        if (data) {
                            counth = 0;
                            var id = $('#sapi-sapi-field-code').data('id');
                            $("#sapi-tabs li:nth-child(1)").removeClass("active");
                            $("#sap-sapi-tab_1").removeClass("active");
                            $("#sapi-tabs li:nth-child(1)").addClass("active");
                            $("#sap-sapi-tab_1").addClass("active");
                            $('.row-append').remove();
                            const myJSON = JSON.parse(data);
                            sourceJson = myJSON;

                            const hedKeys = Object.keys(sourceJson.Header);
                            var headtble = $('#sapi-sapi-field-module').find(":selected").val();
                            $(`#sapi-sapi-header-tblname`).val(headtble);
                            console.log(`Id:${id} | Table:${headtble}`);
                            $.post('GetFieldMap', { Id: id, TableName: headtble }).done(restf => {
                                if (restf.Headers.length > 0) {
                                    console.log(`GetHed`);
                                }
                                counth = 0;  ///reset from zero
                                for (var x in restf.Headers) {
                                    headersource.push(restf.Headers[x].SAPHeaderFieldId);
                                    headerdestination.push(restf.Headers[x].AddonHeaderField);
                                    headerdatatype.push(restf.Headers[x].DataType);
                                    var req = restf.Headers[x].IsRequired;
                                    var len = restf.Headers[x].Length;

                                    counth = counth + 1;
                                    inputid = "sapi-headerinput" + counth;
                                    datatypeid = "sapi-headerdata" + counth;
                                    checkid = "sapi-headercheck" + counth;
                                    filecomboid = "sapi-headercombo" + counth;
                                    lengthid = "sapi-headerlength" + counth;
                                    fileapicombo = "sapi-apicombo" + counth;
                                    headerdatatypeid = "sapi-headerdata" + counth;
                                    var ischeck = "";
                                    if (req == true) {
                                        ischeck = "checked"
                                    }
                                    else {
                                        ischeck = "unchecked"
                                    }
                                    $(`#sapi-sapi-header-table tbody`).append(`<tr id="tr` + counth + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + counth + '" ></button></td>' +
                                        '<td><select class="form-control select2 sapi-headercombo" name ="' + datatypeid + '" style="width: 100%;" id="' + filecomboid + '"></select></td>' +
                                        '<td><select class="form-control select2 sapi-apicombo" name="' + headerdatatypeid + '" style="width: 100%;" id="' + fileapicombo + '"></select></td>' +
                                        '<td><select class="form-control select2 sapi-headertype" name="' + lengthid + '" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                                        '<td><input type="text" class="form-control sapi-headerlength" placeholder="Insert Length" id="' + lengthid + '" value="' + len + '"></td>' +
                                        '<td><input type="checkbox" class="iCheck-helper sapi-headercheck" id="' + checkid + '" ' + ischeck + ' /></</td></tr>');

                                    ///ADD DROPDOWN OPTION FOR SOURCE
                                    $('#sapi-headercombo' + counth + '').addClass("select2");
                                    sourceJson.Header.forEach(async function (key) {
                                        $('#sapi-headercombo' + counth + '').append($('<option>', {
                                            value: key,
                                            text: key
                                        }));
                                    });
                                    $('#sapi-headercombo' + counth + '').val(headersource[counth - 1]);
                                    $('#sapi-headercombo' + counth + '').trigger('change');

                                    ///ADD DROPDOWN OPTION FOR DESTINATION
                                    $('#sapi-apicombo' + counth + '').addClass("select2");
                                    destinationJson.Header.forEach(async function (key) {
                                        $('#sapi-apicombo' + counth + '').append($('<option>', {
                                            value: key,
                                            text: key
                                        }));
                                    }); //End ForEach
                                    $('#sapi-apicombo' + counth + '').val(headerdestination[counth - 1]); //headerdestination //Temporary use source upon select
                                    $('#sapi-apicombo' + counth + '').trigger('change');

                                    ///ADD DROPDOWN OPTION FOR DATATYPE
                                    sourceJson.DataType.forEach(async function (key) {
                                        $('#sapi-headerdata' + counth + '').append($("<option/>", {
                                            value: key,
                                            text: key
                                        }));
                                    }); //End ForEach DataType
                                    $('#sapi-headerdata' + counth + '').val(headerdatatype[counth - 1]);
                                    $('#sapi-headerdata' + counth + '').trigger('change');
                                } //End of ForLoop
                            }); //End of GetFieldMap

                            const rowKeys = Object.keys(sourceJson.Rows);

                            rowKeys.forEach(async function (key) {
                                    $('#sapi-tabs').append(`<li class="row-append"><a href="#sapi-sapi-tab_${key}" data-toggle="tab">${key}</a></li>`);
                                    $('#sapi-tab-content').append(`
                                    <div class="tab-pane row-append" id="sapi-sapi-tab_${key}">
                                        <div class="box">
                                            <div class="box-header">
                                                <h3 class="box-title">
                                                    <i class="fa fa-database"></i> Table Name :  <span id="sapi-sapi-row-tblname_${key}">${key}</span>
                                                </h3>

                                            </div>
                                            <div class="box-body">
                                                <table id="sapi-sapi-row-table-${key}" data-tablename="${key}" class="table sapi-table-rows table-fields table-bordered table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th>Source SAP Field</th>
                                                            <th>Destination SAP Field</th>
                                                            <th>Data Type</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody id="sapi-sapi-row-tbody-${key}"></tbody>
                                                </table>
                                            </div>
                                            <div class="box-footer">
                                                <button type="button" class="btn btn-primary" style="float: right;" data-index="0" data-tablename="${key}" id="sapi-sapi-add-rowfield-${key}">New Field</button>
                                            </div>
                                        </div>
                                    </div>
                                `);
                                    //console.log(`id:${id} | table:${key}`);
                                    await $.post('GetFieldMap', { Id: id, TableName: key }).done(restf => {
                                        console.log(`GetRowField: ${key}`);
                                        if (restf.Headers.length > 0) {
                                            $(`#sapi-sapi-row-table-${key}`).val(restf.Headers[0].TableName);
                                        }

                                        countr = 0; //reset from zero
                                        for (var x in restf.Headers) {
                                            rowsource.push(restf.Headers[x].SAPHeaderFieldId);
                                            rowdestination.push(restf.Headers[x].AddonHeaderField);
                                            rowdatatype.push(restf.Headers[x].DataType);

                                            const tablename = key;
                                            countr = countr + 1;
                                            inputid = "sapi-rowinput_" + tablename + countr;
                                            datatypeid = "sapi-rowdata_" + tablename + countr;
                                            checkid = "sapi-rowcheck_" + tablename + countr;
                                            filecomboid = "sapi-rowcombo_" + tablename + countr;
                                            lengthid = "sapi-rowlength_" + tablename + countr;
                                            fileapicombo = "sapi-rowapicombo_" + tablename + countr;
                                            rowdatatypeid = "sapi-rowdata_" + tablename + countr;
                                            $(`#sapi-sapi-row-table-${tablename} tbody`).append('<tr id="tr_' + tablename + countr + '"><td width="5%"><button type="button" class=" form-control btn-info btn-flat fa fa-trash" data-headid = "tr' + countr + '" ></button></td>' +
                                                '<td><select class="form-control select2 sapi-rowcombo" name ="' + datatypeid + '" style="width: 100%;" id="' + filecomboid + '"></select></td>' +
                                                '<td><select class="form-control select2 sapi-apicombo" name="' + rowdatatypeid + '" style="width: 100%;" id="' + fileapicombo + '"></select></td>' +
                                                '<td><select class="form-control select2 sapi-rowtype" name="' + lengthid + '" style="width: 100%;" id="' + datatypeid + '"></select></td>' +
                                                '<td><input type="text" class="form-control sapi-rowlength" placeholder="Insert Length" id="' + lengthid + '"></td></tr>');
                                            $(`#sapi-sapi-add-rowfield-${key}`).data('index', countr);
                                            $(`#sapi-sapi-add-rowfield-${key}`).attr('data-index', countr);
                                            $(`#sapi-sapi-add-rowfield-${key}`).prop('data-index', countr);

                                            console.log(`Table:${key} | Data: ${countr}`);

                                            ///Source API
                                            $(`#${filecomboid}`).addClass("select2");
                                            sourceJson.Rows[key].forEach(async function (keyr) {
                                                $(`#${filecomboid}`).append($('<option>', {
                                                    value: keyr,
                                                    text: keyr
                                                }));
                                            });
                                            ///console.log(`source[${x}]:${restf.Headers[x].SAPHeaderFieldId}`);
                                            $(`#${filecomboid}`).val(restf.Headers[x].SAPHeaderFieldId);
                                            $(`#${filecomboid}`).trigger('change');

                                            ///Destination API
                                            $(`#${fileapicombo}`).addClass("select2");
                                            destinationJson.Rows[key].forEach(async function (keyr) {
                                                ///console.log(`Key:${key} | KeyR:${keyr}`);
                                                $(`#${fileapicombo}`).append($('<option>', {
                                                    value: keyr,
                                                    text: keyr
                                                }));
                                            });
                                            console.log(`destination[${x}]:${restf.Headers[x].AddonHeaderField}`);
                                            $(`#${fileapicombo}`).val(restf.Headers[x].AddonHeaderField);
                                            $(`#${fileapicombo}`).trigger('change');

                                            ///DataType
                                            sourceJson.DataType.forEach(async function (keyr) {
                                                $(`#${datatypeid}`).append($("<option/>", {
                                                    value: keyr,
                                                    text: keyr
                                                }));
                                            }); //End ForEach DataType
                                            $(`#${datatypeid}`).val(rowdatatype[countr - 1]);
                                            $(`#${datatypeid}`).trigger('change');


                                        } //End ForLoop
                                    }); //End of GetFieldMap


                                }); //End ForLoop of rowKeys

                        }
                    }).fail(function () {
                        swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                    }).always(function () {
                        $('#preloader-modal').modal('hide');
                    });
                }
            });

            //DESTINATION INPUT CHANGED
            $('#sapi-sapi-destination-apicode').on('change', function () {
                // Code to execute when the input text changes
                if ($(this).val() != "") {
                        $.post("@Url.Action("FetchSAPAPIData", "Configuration")", {
                            Code: $(this).val(),
                            Module: $('#sapi-sapi-field-module').val(),
                        }).done(function (data) {
                            if (data) {
                            const myJSON = JSON.parse(data);
                            destinationJson = myJSON;
                            }
                        }).fail(function () {
                            swal('Something went wrong.', 'Please contact the administrator.', 'warning')
                        });
                }
            });

            //ON MODULE CHANGE
            $('#sapi-sapi-field-module').on('change', function () {
                $('#sapi-sapi-source-apicode').change();
                $('#sapi-sapi-destination-apicode').change();
            });
        });
    </script>
}
